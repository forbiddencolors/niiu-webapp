




<!DOCTYPE html>
<html class="   ">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    
    
    <title>ydn-db/jsc/ydn.db-dev.js at master Â· yathit/ydn-db</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <meta property="fb:app_id" content="1401488693436528"/>

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="yathit/ydn-db" name="twitter:title" /><meta content="ydn-db - Javascript database module for Indexeddb, Web SQL and localStorage storage mechanisms supporting version migration, advanced query, SQL and transaction." name="twitter:description" /><meta content="https://avatars0.githubusercontent.com/u/2137932?s=400" name="twitter:image:src" />
<meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars0.githubusercontent.com/u/2137932?s=400" property="og:image" /><meta content="yathit/ydn-db" property="og:title" /><meta content="https://github.com/yathit/ydn-db" property="og:url" /><meta content="ydn-db - Javascript database module for Indexeddb, Web SQL and localStorage storage mechanisms supporting version migration, advanced query, SQL and transaction." property="og:description" />

    <link rel="assets" href="https://github.global.ssl.fastly.net/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035/">
    <link rel="xhr-socket" href="/_sockets" />

    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="5DDBB6D1:1FFD:30DE7FA:5367BBA8" name="octolytics-dimension-request_id" /><meta content="932461" name="octolytics-actor-id" /><meta content="forbiddencolors" name="octolytics-actor-login" /><meta content="30d08fec36fe3f71fbb3bbddc2cd84659b750e6905ee528eaee448af7cd24c15" name="octolytics-actor-hash" />
    

    
    
    <link rel="icon" type="image/x-icon" href="https://github.global.ssl.fastly.net/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="ejNj/IhH7tQ6L4f60Wu5zXTSJf6Q5hB2sfe8H6SbD7Qas3E+7iyi1aP5YFABj9flOr/WDtNylnvggWN4oL94ng==" name="csrf-token" />

    <link href="https://github.global.ssl.fastly.net/assets/github-825241e13de547a733c8a9cc535c8f6b411b52c1.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://github.global.ssl.fastly.net/assets/github2-0c03a1f6ffa15e379ec26513a90980fce28e78d9.css" media="all" rel="stylesheet" type="text/css" />
    


        <script crossorigin="anonymous" src="https://github.global.ssl.fastly.net/assets/frameworks-2f6219cf5b1c2bab818848f5705fab73e1f57022.js" type="text/javascript"></script>
        <script async="async" crossorigin="anonymous" src="https://github.global.ssl.fastly.net/assets/github-ceedfd14494501a450c1f2934fa5c21858769efb.js" type="text/javascript"></script>
        
        
      <meta http-equiv="x-pjax-version" content="d9485357ac507306950c095f53ae7c4e">

      
  <meta name="description" content="ydn-db - Javascript database module for Indexeddb, Web SQL and localStorage storage mechanisms supporting version migration, advanced query, SQL and transaction." />

  <meta content="2137932" name="octolytics-dimension-user_id" /><meta content="yathit" name="octolytics-dimension-user_login" /><meta content="6483774" name="octolytics-dimension-repository_id" /><meta content="yathit/ydn-db" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="6483774" name="octolytics-dimension-repository_network_root_id" /><meta content="yathit/ydn-db" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/yathit/ydn-db/commits/master.atom" rel="alternate" title="Recent Commits to ydn-db:master" type="application/atom+xml" />

  </head>


  <body class="logged_in  env-production macintosh vis-public page-blob">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      
      


      <div class="header header-logged-in true">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/">
  <span class="mega-octicon octicon-mark-github"></span>
</a>

    
    <a href="/notifications" aria-label="You have no unread notifications" class="notification-indicator tooltipped tooltipped-s" data-hotkey="g n">
        <span class="mail-status all-read"></span>
</a>

      <div class="command-bar js-command-bar  in-repository">
          <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">

<div class="commandbar">
  <span class="message"></span>
  <input type="text" data-hotkey="s, /" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
    data-username="forbiddencolors"
      data-repo="yathit/ydn-db"
      data-branch="master"
      data-sha="3128be644f835713477a345dcfed73bc36fc30c5"
  >
  <div class="display hidden"></div>
</div>

    <input type="hidden" name="nwo" value="yathit/ydn-db" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target" role="button" aria-haspopup="true">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container" aria-hidden="true">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item js-this-repository-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item js-all-repositories-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="help tooltipped tooltipped-s" aria-label="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

</form>
        <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
            <li><a href="https://gist.github.com">Gist</a></li>
            <li><a href="/blog">Blog</a></li>
          <li><a href="https://help.github.com">Help</a></li>
        </ul>
      </div>

    


  <ul id="user-links">
    <li>
      <a href="/forbiddencolors" class="name">
        <img alt="forbiddencolors" class=" js-avatar" data-user="932461" height="20" src="https://avatars0.githubusercontent.com/u/932461?s=140" width="20" /> forbiddencolors
      </a>
    </li>

    <li class="new-menu dropdown-toggle js-menu-container">
      <a href="#" class="js-menu-target tooltipped tooltipped-s" aria-label="Create new...">
        <span class="octicon octicon-plus"></span>
        <span class="dropdown-arrow"></span>
      </a>

      <div class="new-menu-content js-menu-content">
      </div>
    </li>

    <li>
      <a href="/settings/profile" id="account_settings"
        class="tooltipped tooltipped-s"
        aria-label="Account settings ">
        <span class="octicon octicon-tools"></span>
      </a>
    </li>
    <li>
      <form class="logout-form" action="/logout" method="post">
        <button class="sign-out-button tooltipped tooltipped-s" aria-label="Sign out">
          <span class="octicon octicon-log-out"></span>
        </button>
      </form>
    </li>

  </ul>

<div class="js-new-dropdown-contents hidden">
  

<ul class="dropdown-menu">
  <li>
    <a href="/new"><span class="octicon octicon-repo-create"></span> New repository</a>
  </li>
  <li>
    <a href="/organizations/new"><span class="octicon octicon-organization"></span> New organization</a>
  </li>


    <li class="section-title">
      <span title="yathit/ydn-db">This repository</span>
    </li>
      <li>
        <a href="/yathit/ydn-db/issues/new"><span class="octicon octicon-issue-opened"></span> New issue</a>
      </li>
</ul>

</div>


    
  </div>
</div>

      

        



      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    <div id="js-flash-container">
      
    </div>
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        

<ul class="pagehead-actions">

    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="Y35S7xSwjNCwuSUCgrqsTE6OYegJSzVlkwCxjrSHBShKRxNqpXxE7lJBdEDM4/qlLv7n+B796LaZeFXExs9niw==" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="6483774" />

    <div class="select-menu js-menu-container js-select-menu">
      <a class="social-count js-social-count" href="/yathit/ydn-db/watchers">
        11
      </a>
      <span class="minibutton select-menu-button with-count js-menu-target" role="button" tabindex="0" aria-haspopup="true">
        <span class="js-select-button">
          <span class="octicon octicon-eye-watch"></span>
          Watch
        </span>
      </span>

      <div class="select-menu-modal-holder">
        <div class="select-menu-modal subscription-menu-modal js-menu-content" aria-hidden="true">
          <div class="select-menu-header">
            <span class="select-menu-title">Notification status</span>
            <span class="octicon octicon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container" role="menu">

            <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">You only receive notifications for conversations in which you participate or are @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye-watch"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">You receive notifications for all conversations in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye-unwatch"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">You do not receive any notifications for conversations in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

  <li>
  

  <div class="js-toggler-container js-social-container starring-container ">

    <form accept-charset="UTF-8" action="/yathit/ydn-db/unstar" class="js-toggler-form star-button-form" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="u1M8QqV+G2fmA9C5yhfPtSC3XKcycg8kDTwp9gH5s+ol3RBFMBvO9N8X4mVl/S9b2luZ+LfvG/3uuELGlGGvcg==" /></div>
      <button
        class="minibutton with-count js-toggler-target star-button starred"
        aria-label="Unstar this repository" title="Unstar yathit/ydn-db">
        <span class="octicon octicon-star-delete"></span><span class="text">Unstar</span>
      </button>
</form>
    <form accept-charset="UTF-8" action="/yathit/ydn-db/star" class="js-toggler-form star-button-form" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="zcHJezFj0q/BJhvdm66nPAspqza9esV/rmxQuv00vFQYGYo9n7ngxH/ZpA0qlDbUV9DhAnPYeFZ+PEjQQfzJ8A==" /></div>
      <button
        class="minibutton with-count js-toggler-target star-button unstarred"
        aria-label="Star this repository" title="Star yathit/ydn-db">
        <span class="octicon octicon-star"></span><span class="text">Star</span>
      </button>
</form>
      <a class="social-count js-social-count" href="/yathit/ydn-db/stargazers">
        118
      </a>
  </div>

  </li>


        <li>
          <a href="/yathit/ydn-db/fork" class="minibutton with-count js-toggler-target fork-button lighter tooltipped-n" title="Fork your own copy of yathit/ydn-db to your account" aria-label="Fork your own copy of yathit/ydn-db to your account" rel="nofollow" data-method="post">
            <span class="octicon octicon-git-branch-create"></span><span class="text">Fork</span>
          </a>
          <a href="/yathit/ydn-db/network" class="social-count">7</a>
        </li>


</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="repo-label"><span>public</span></span>
          <span class="mega-octicon octicon-repo"></span>
          <span class="author"><a href="/yathit" class="url fn" itemprop="url" rel="author"><span itemprop="title">yathit</span></a></span><!--
       --><span class="path-divider">/</span><!--
       --><strong><a href="/yathit/ydn-db" class="js-current-repository js-repo-home-link">ydn-db</a></strong>

          <span class="page-context-loader">
            <img alt="Octocat-spinner-32" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline js-new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            

<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped tooltipped-w" aria-label="Code">
        <a href="/yathit/ydn-db" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-hotkey="g c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /yathit/ydn-db">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped tooltipped-w" aria-label="Issues">
          <a href="/yathit/ydn-db/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g i" data-selected-links="repo_issues /yathit/ydn-db/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class='counter'>6</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
        <a href="/yathit/ydn-db/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g p" data-selected-links="repo_pulls /yathit/ydn-db/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class='counter'>0</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


        <li class="tooltipped tooltipped-w" aria-label="Wiki">
          <a href="/yathit/ydn-db/wiki" aria-label="Wiki" class="js-selected-navigation-item sunken-menu-item" data-hotkey="g w" data-pjax="true" data-selected-links="repo_wiki /yathit/ydn-db/wiki">
            <span class="octicon octicon-book"></span> <span class="full-word">Wiki</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>
    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped tooltipped-w" aria-label="Pulse">
        <a href="/yathit/ydn-db/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /yathit/ydn-db/pulse">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Graphs">
        <a href="/yathit/ydn-db/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /yathit/ydn-db/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Network">
        <a href="/yathit/ydn-db/network" aria-label="Network" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-selected-links="repo_network /yathit/ydn-db/network">
          <span class="octicon octicon-git-branch"></span> <span class="full-word">Network</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

              <div class="only-with-full-nav">
                

  

<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><strong>HTTPS</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/yathit/ydn-db.git" readonly="readonly">
    <span class="url-box-clippy">
    <button aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/yathit/ydn-db.git" data-copied-hint="copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="ssh"
  data-url="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=clone">
  <h3><strong>SSH</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="git@github.com:yathit/ydn-db.git" readonly="readonly">
    <span class="url-box-clippy">
    <button aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="git@github.com:yathit/ydn-db.git" data-copied-hint="copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><strong>Subversion</strong> checkout URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/yathit/ydn-db" readonly="readonly">
    <span class="url-box-clippy">
    <button aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/yathit/ydn-db" data-copied-hint="copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>,
      <a href="#" class="js-clone-selector" data-protocol="ssh">SSH</a>,
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <span class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <a href="https://help.github.com/articles/which-remote-url-should-i-use">
    <span class="octicon octicon-question"></span>
    </a>
  </span>
</p>

  <a href="http://mac.github.com" data-url="github-mac://openRepo/https://github.com/yathit/ydn-db" class="minibutton sidebar-button js-conduit-rewrite-url" title="Save yathit/ydn-db to your computer and use it in GitHub Desktop." aria-label="Save yathit/ydn-db to your computer and use it in GitHub Desktop.">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>


                <a href="/yathit/ydn-db/archive/master.zip"
                   class="minibutton sidebar-button"
                   aria-label="Download yathit/ydn-db as a zip file"
                   title="Download yathit/ydn-db as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          

<a href="/yathit/ydn-db/blob/7a3de8ebbcb7ca19dcc90849f93b0c69815d6f21/jsc/ydn.db-dev.js" class="hidden js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:e0dac42433904fd43072c116a87ffc84 -->

<p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

<a href="/yathit/ydn-db/find/master" data-pjax data-hotkey="t" class="js-show-file-finder" style="display:none">Show File Finder</a>

<div class="file-navigation">
  

<div class="select-menu js-menu-container js-select-menu" >
  <span class="minibutton select-menu-button js-menu-target" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-remove-close js-menu-close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/blob/master/jsc/ydn.db-dev.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/zzz/jsc/ydn.db-dev.js"
                 data-name="zzz"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="zzz">zzz</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/zzy/jsc/ydn.db-dev.js"
                 data-name="zzy"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="zzy">zzy</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/zxz/jsc/ydn.db-dev.js"
                 data-name="zxz"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="zxz">zxz</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/zxy/jsc/ydn.db-dev.js"
                 data-name="zxy"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="zxy">zxy</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/zxx/jsc/ydn.db-dev.js"
                 data-name="zxx"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="zxx">zxx</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/v36/jsc/ydn.db-dev.js"
                 data-name="v36"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v36">v36</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/v35/jsc/ydn.db-dev.js"
                 data-name="v35"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v35">v35</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/v34/jsc/ydn.db-dev.js"
                 data-name="v34"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v34">v34</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/v33/jsc/ydn.db-dev.js"
                 data-name="v33"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v33">v33</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/v32/jsc/ydn.db-dev.js"
                 data-name="v32"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v32">v32</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/v31/jsc/ydn.db-dev.js"
                 data-name="v31"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v31">v31</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/v30/jsc/ydn.db-dev.js"
                 data-name="v30"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v30">v30</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/v29/jsc/ydn.db-dev.js"
                 data-name="v29"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v29">v29</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/v28/jsc/ydn.db-dev.js"
                 data-name="v28"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v28">v28</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/v25/jsc/ydn.db-dev.js"
                 data-name="v25"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v25">v25</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/v22/jsc/ydn.db-dev.js"
                 data-name="v22"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v22">v22</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/v21/jsc/ydn.db-dev.js"
                 data-name="v21"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v21">v21</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/v19/jsc/ydn.db-dev.js"
                 data-name="v19"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v19">v19</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/v18/jsc/ydn.db-dev.js"
                 data-name="v18"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v18">v18</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/v17/jsc/ydn.db-dev.js"
                 data-name="v17"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v17">v17</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/v9.4/jsc/ydn.db-dev.js"
                 data-name="v9.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v9.4">v9.4</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/v9.3/jsc/ydn.db-dev.js"
                 data-name="v9.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v9.3">v9.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/v0.8/jsc/ydn.db-dev.js"
                 data-name="v0.8"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.8">v0.8</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/v0.7/jsc/ydn.db-dev.js"
                 data-name="v0.7"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.7">v0.7</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/v0.4/jsc/ydn.db-dev.js"
                 data-name="v0.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.4">v0.4</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/v0.2.4/jsc/ydn.db-dev.js"
                 data-name="v0.2.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.2.4">v0.2.4</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/ref-put-set/jsc/ydn.db-dev.js"
                 data-name="ref-put-set"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="ref-put-set">ref-put-set</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/filtered-iterator/jsc/ydn.db-dev.js"
                 data-name="filtered-iterator"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="filtered-iterator">filtered-iterator</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.8.12/jsc/ydn.db-dev.js"
                 data-name="0.8.12"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.8.12">0.8.12</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.8.9/jsc/ydn.db-dev.js"
                 data-name="0.8.9"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.8.9">0.8.9</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.8.7/jsc/ydn.db-dev.js"
                 data-name="0.8.7"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.8.7">0.8.7</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.8.6/jsc/ydn.db-dev.js"
                 data-name="0.8.6"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.8.6">0.8.6</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.8.5/jsc/ydn.db-dev.js"
                 data-name="0.8.5"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.8.5">0.8.5</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.8.3/jsc/ydn.db-dev.js"
                 data-name="0.8.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.8.3">0.8.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.8.2/jsc/ydn.db-dev.js"
                 data-name="0.8.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.8.2">0.8.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.8.1/jsc/ydn.db-dev.js"
                 data-name="0.8.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.8.1">0.8.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.7.12/jsc/ydn.db-dev.js"
                 data-name="0.7.12"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.7.12">0.7.12</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.7.8/jsc/ydn.db-dev.js"
                 data-name="0.7.8"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.7.8">0.7.8</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.7.5/jsc/ydn.db-dev.js"
                 data-name="0.7.5"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.7.5">0.7.5</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.7.1/jsc/ydn.db-dev.js"
                 data-name="0.7.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.7.1">0.7.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.6.9/jsc/ydn.db-dev.js"
                 data-name="0.6.9"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.6.9">0.6.9</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.6.7/jsc/ydn.db-dev.js"
                 data-name="0.6.7"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.6.7">0.6.7</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.6.3/jsc/ydn.db-dev.js"
                 data-name="0.6.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.6.3">0.6.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.6.2/jsc/ydn.db-dev.js"
                 data-name="0.6.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.6.2">0.6.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.6.1/jsc/ydn.db-dev.js"
                 data-name="0.6.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.6.1">0.6.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.5.4/jsc/ydn.db-dev.js"
                 data-name="0.5.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.5.4">0.5.4</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.5.3/jsc/ydn.db-dev.js"
                 data-name="0.5.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.5.3">0.5.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.5.2/jsc/ydn.db-dev.js"
                 data-name="0.5.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.5.2">0.5.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.5.1/jsc/ydn.db-dev.js"
                 data-name="0.5.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.5.1">0.5.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.4.10/jsc/ydn.db-dev.js"
                 data-name="0.4.10"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.4.10">0.4.10</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.4.9/jsc/ydn.db-dev.js"
                 data-name="0.4.9"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.4.9">0.4.9</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.4.6/jsc/ydn.db-dev.js"
                 data-name="0.4.6"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.4.6">0.4.6</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.4.5/jsc/ydn.db-dev.js"
                 data-name="0.4.5"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.4.5">0.4.5</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.4.3/jsc/ydn.db-dev.js"
                 data-name="0.4.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.4.3">0.4.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.4.2/jsc/ydn.db-dev.js"
                 data-name="0.4.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.4.2">0.4.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.4.1/jsc/ydn.db-dev.js"
                 data-name="0.4.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.4.1">0.4.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.4.0/jsc/ydn.db-dev.js"
                 data-name="0.4.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.4.0">0.4.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.3.1/jsc/ydn.db-dev.js"
                 data-name="0.3.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.3.1">0.3.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.3.0/jsc/ydn.db-dev.js"
                 data-name="0.3.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.3.0">0.3.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.2.7/jsc/ydn.db-dev.js"
                 data-name="0.2.7"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.2.7">0.2.7</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.2.6/jsc/ydn.db-dev.js"
                 data-name="0.2.6"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.2.6">0.2.6</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.2.4/jsc/ydn.db-dev.js"
                 data-name="0.2.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.2.4">0.2.4</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.2.2/jsc/ydn.db-dev.js"
                 data-name="0.2.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.2.2">0.2.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.2.1/jsc/ydn.db-dev.js"
                 data-name="0.2.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.2.1">0.2.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.2.0/jsc/ydn.db-dev.js"
                 data-name="0.2.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.2.0">0.2.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.1.37/jsc/ydn.db-dev.js"
                 data-name="0.1.37"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.1.37">0.1.37</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.0.35/jsc/ydn.db-dev.js"
                 data-name="0.0.35"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.0.35">0.0.35</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/yathit/ydn-db/tree/0.0.34/jsc/ydn.db-dev.js"
                 data-name="0.0.34"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.0.34">0.0.34</a>
            </div> <!-- /.select-menu-item -->
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/yathit/ydn-db" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">ydn-db</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/yathit/ydn-db/tree/master/jsc" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">jsc</span></a></span><span class="separator"> / </span><strong class="final-path">ydn.db-dev.js</strong> <button aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="jsc/ydn.db-dev.js" data-copied-hint="copied!" type="button"><span class="octicon octicon-clippy"></span></button>
  </div>
</div>


  <div class="commit commit-loader file-history-tease js-deferred-content" data-url="/yathit/ydn-db/contributors/master/jsc/ydn.db-dev.js">
    Fetching contributorsâ¦

    <div class="participation">
      <p class="loader-loading"><img alt="Octocat-spinner-32-eaf2f5" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32-EAF2F5.gif" width="16" /></p>
      <p class="loader-error">Cannot retrieve contributors at this time</p>
    </div>
  </div>

<div class="file-box">
  <div class="file">
    <div class="meta clearfix">
      <div class="info file-name">
        <span class="icon"><b class="octicon octicon-file-text"></b></span>
        <span class="mode" title="File Mode">file</span>
        <span class="meta-divider"></span>
          <span>332 lines (330 sloc)</span>
          <span class="meta-divider"></span>
        <span>158.423 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
            <a class="minibutton tooltipped tooltipped-w js-conduit-openfile-check"
               href="http://mac.github.com"
               data-url="github-mac://openRepo/https://github.com/yathit/ydn-db?branch=master&amp;filepath=jsc%2Fydn.db-dev.js"
               aria-label="Open this file in GitHub for Mac"
               data-failed-title="Your version of GitHub for Mac is too old to open this file. Try checking for updates.">
                <span class="octicon octicon-device-desktop"></span> Open
            </a>
                <a class="minibutton tooltipped tooltipped-n js-update-url-with-hash"
                   aria-label="Clicking this button will automatically fork this project so you can edit the file"
                   href="/yathit/ydn-db/edit/master/jsc/ydn.db-dev.js"
                   data-method="post" rel="nofollow">Edit</a>
          <a href="/yathit/ydn-db/raw/master/jsc/ydn.db-dev.js" class="button minibutton " id="raw-url">Raw</a>
            <a href="/yathit/ydn-db/blame/master/jsc/ydn.db-dev.js" class="button minibutton js-update-url-with-hash">Blame</a>
          <a href="/yathit/ydn-db/commits/master/jsc/ydn.db-dev.js" class="button minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->

            <a class="minibutton danger empty-icon tooltipped tooltipped-s"
               href="/yathit/ydn-db/delete/master/jsc/ydn.db-dev.js"
               aria-label="Fork this project and delete file"
               data-method="post" data-test-id="delete-blob-file" rel="nofollow">

          Delete
        </a>
      </div><!-- /.actions -->
    </div>
        <div class="blob-wrapper data type-javascript js-blob-data">
        <table class="file-code file-diff tab-size-8">
          <tr class="file-code-line">
            <td class="blob-line-nums">
              <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>
<span id="L19" rel="#L19">19</span>
<span id="L20" rel="#L20">20</span>
<span id="L21" rel="#L21">21</span>
<span id="L22" rel="#L22">22</span>
<span id="L23" rel="#L23">23</span>
<span id="L24" rel="#L24">24</span>
<span id="L25" rel="#L25">25</span>
<span id="L26" rel="#L26">26</span>
<span id="L27" rel="#L27">27</span>
<span id="L28" rel="#L28">28</span>
<span id="L29" rel="#L29">29</span>
<span id="L30" rel="#L30">30</span>
<span id="L31" rel="#L31">31</span>
<span id="L32" rel="#L32">32</span>
<span id="L33" rel="#L33">33</span>
<span id="L34" rel="#L34">34</span>
<span id="L35" rel="#L35">35</span>
<span id="L36" rel="#L36">36</span>
<span id="L37" rel="#L37">37</span>
<span id="L38" rel="#L38">38</span>
<span id="L39" rel="#L39">39</span>
<span id="L40" rel="#L40">40</span>
<span id="L41" rel="#L41">41</span>
<span id="L42" rel="#L42">42</span>
<span id="L43" rel="#L43">43</span>
<span id="L44" rel="#L44">44</span>
<span id="L45" rel="#L45">45</span>
<span id="L46" rel="#L46">46</span>
<span id="L47" rel="#L47">47</span>
<span id="L48" rel="#L48">48</span>
<span id="L49" rel="#L49">49</span>
<span id="L50" rel="#L50">50</span>
<span id="L51" rel="#L51">51</span>
<span id="L52" rel="#L52">52</span>
<span id="L53" rel="#L53">53</span>
<span id="L54" rel="#L54">54</span>
<span id="L55" rel="#L55">55</span>
<span id="L56" rel="#L56">56</span>
<span id="L57" rel="#L57">57</span>
<span id="L58" rel="#L58">58</span>
<span id="L59" rel="#L59">59</span>
<span id="L60" rel="#L60">60</span>
<span id="L61" rel="#L61">61</span>
<span id="L62" rel="#L62">62</span>
<span id="L63" rel="#L63">63</span>
<span id="L64" rel="#L64">64</span>
<span id="L65" rel="#L65">65</span>
<span id="L66" rel="#L66">66</span>
<span id="L67" rel="#L67">67</span>
<span id="L68" rel="#L68">68</span>
<span id="L69" rel="#L69">69</span>
<span id="L70" rel="#L70">70</span>
<span id="L71" rel="#L71">71</span>
<span id="L72" rel="#L72">72</span>
<span id="L73" rel="#L73">73</span>
<span id="L74" rel="#L74">74</span>
<span id="L75" rel="#L75">75</span>
<span id="L76" rel="#L76">76</span>
<span id="L77" rel="#L77">77</span>
<span id="L78" rel="#L78">78</span>
<span id="L79" rel="#L79">79</span>
<span id="L80" rel="#L80">80</span>
<span id="L81" rel="#L81">81</span>
<span id="L82" rel="#L82">82</span>
<span id="L83" rel="#L83">83</span>
<span id="L84" rel="#L84">84</span>
<span id="L85" rel="#L85">85</span>
<span id="L86" rel="#L86">86</span>
<span id="L87" rel="#L87">87</span>
<span id="L88" rel="#L88">88</span>
<span id="L89" rel="#L89">89</span>
<span id="L90" rel="#L90">90</span>
<span id="L91" rel="#L91">91</span>
<span id="L92" rel="#L92">92</span>
<span id="L93" rel="#L93">93</span>
<span id="L94" rel="#L94">94</span>
<span id="L95" rel="#L95">95</span>
<span id="L96" rel="#L96">96</span>
<span id="L97" rel="#L97">97</span>
<span id="L98" rel="#L98">98</span>
<span id="L99" rel="#L99">99</span>
<span id="L100" rel="#L100">100</span>
<span id="L101" rel="#L101">101</span>
<span id="L102" rel="#L102">102</span>
<span id="L103" rel="#L103">103</span>
<span id="L104" rel="#L104">104</span>
<span id="L105" rel="#L105">105</span>
<span id="L106" rel="#L106">106</span>
<span id="L107" rel="#L107">107</span>
<span id="L108" rel="#L108">108</span>
<span id="L109" rel="#L109">109</span>
<span id="L110" rel="#L110">110</span>
<span id="L111" rel="#L111">111</span>
<span id="L112" rel="#L112">112</span>
<span id="L113" rel="#L113">113</span>
<span id="L114" rel="#L114">114</span>
<span id="L115" rel="#L115">115</span>
<span id="L116" rel="#L116">116</span>
<span id="L117" rel="#L117">117</span>
<span id="L118" rel="#L118">118</span>
<span id="L119" rel="#L119">119</span>
<span id="L120" rel="#L120">120</span>
<span id="L121" rel="#L121">121</span>
<span id="L122" rel="#L122">122</span>
<span id="L123" rel="#L123">123</span>
<span id="L124" rel="#L124">124</span>
<span id="L125" rel="#L125">125</span>
<span id="L126" rel="#L126">126</span>
<span id="L127" rel="#L127">127</span>
<span id="L128" rel="#L128">128</span>
<span id="L129" rel="#L129">129</span>
<span id="L130" rel="#L130">130</span>
<span id="L131" rel="#L131">131</span>
<span id="L132" rel="#L132">132</span>
<span id="L133" rel="#L133">133</span>
<span id="L134" rel="#L134">134</span>
<span id="L135" rel="#L135">135</span>
<span id="L136" rel="#L136">136</span>
<span id="L137" rel="#L137">137</span>
<span id="L138" rel="#L138">138</span>
<span id="L139" rel="#L139">139</span>
<span id="L140" rel="#L140">140</span>
<span id="L141" rel="#L141">141</span>
<span id="L142" rel="#L142">142</span>
<span id="L143" rel="#L143">143</span>
<span id="L144" rel="#L144">144</span>
<span id="L145" rel="#L145">145</span>
<span id="L146" rel="#L146">146</span>
<span id="L147" rel="#L147">147</span>
<span id="L148" rel="#L148">148</span>
<span id="L149" rel="#L149">149</span>
<span id="L150" rel="#L150">150</span>
<span id="L151" rel="#L151">151</span>
<span id="L152" rel="#L152">152</span>
<span id="L153" rel="#L153">153</span>
<span id="L154" rel="#L154">154</span>
<span id="L155" rel="#L155">155</span>
<span id="L156" rel="#L156">156</span>
<span id="L157" rel="#L157">157</span>
<span id="L158" rel="#L158">158</span>
<span id="L159" rel="#L159">159</span>
<span id="L160" rel="#L160">160</span>
<span id="L161" rel="#L161">161</span>
<span id="L162" rel="#L162">162</span>
<span id="L163" rel="#L163">163</span>
<span id="L164" rel="#L164">164</span>
<span id="L165" rel="#L165">165</span>
<span id="L166" rel="#L166">166</span>
<span id="L167" rel="#L167">167</span>
<span id="L168" rel="#L168">168</span>
<span id="L169" rel="#L169">169</span>
<span id="L170" rel="#L170">170</span>
<span id="L171" rel="#L171">171</span>
<span id="L172" rel="#L172">172</span>
<span id="L173" rel="#L173">173</span>
<span id="L174" rel="#L174">174</span>
<span id="L175" rel="#L175">175</span>
<span id="L176" rel="#L176">176</span>
<span id="L177" rel="#L177">177</span>
<span id="L178" rel="#L178">178</span>
<span id="L179" rel="#L179">179</span>
<span id="L180" rel="#L180">180</span>
<span id="L181" rel="#L181">181</span>
<span id="L182" rel="#L182">182</span>
<span id="L183" rel="#L183">183</span>
<span id="L184" rel="#L184">184</span>
<span id="L185" rel="#L185">185</span>
<span id="L186" rel="#L186">186</span>
<span id="L187" rel="#L187">187</span>
<span id="L188" rel="#L188">188</span>
<span id="L189" rel="#L189">189</span>
<span id="L190" rel="#L190">190</span>
<span id="L191" rel="#L191">191</span>
<span id="L192" rel="#L192">192</span>
<span id="L193" rel="#L193">193</span>
<span id="L194" rel="#L194">194</span>
<span id="L195" rel="#L195">195</span>
<span id="L196" rel="#L196">196</span>
<span id="L197" rel="#L197">197</span>
<span id="L198" rel="#L198">198</span>
<span id="L199" rel="#L199">199</span>
<span id="L200" rel="#L200">200</span>
<span id="L201" rel="#L201">201</span>
<span id="L202" rel="#L202">202</span>
<span id="L203" rel="#L203">203</span>
<span id="L204" rel="#L204">204</span>
<span id="L205" rel="#L205">205</span>
<span id="L206" rel="#L206">206</span>
<span id="L207" rel="#L207">207</span>
<span id="L208" rel="#L208">208</span>
<span id="L209" rel="#L209">209</span>
<span id="L210" rel="#L210">210</span>
<span id="L211" rel="#L211">211</span>
<span id="L212" rel="#L212">212</span>
<span id="L213" rel="#L213">213</span>
<span id="L214" rel="#L214">214</span>
<span id="L215" rel="#L215">215</span>
<span id="L216" rel="#L216">216</span>
<span id="L217" rel="#L217">217</span>
<span id="L218" rel="#L218">218</span>
<span id="L219" rel="#L219">219</span>
<span id="L220" rel="#L220">220</span>
<span id="L221" rel="#L221">221</span>
<span id="L222" rel="#L222">222</span>
<span id="L223" rel="#L223">223</span>
<span id="L224" rel="#L224">224</span>
<span id="L225" rel="#L225">225</span>
<span id="L226" rel="#L226">226</span>
<span id="L227" rel="#L227">227</span>
<span id="L228" rel="#L228">228</span>
<span id="L229" rel="#L229">229</span>
<span id="L230" rel="#L230">230</span>
<span id="L231" rel="#L231">231</span>
<span id="L232" rel="#L232">232</span>
<span id="L233" rel="#L233">233</span>
<span id="L234" rel="#L234">234</span>
<span id="L235" rel="#L235">235</span>
<span id="L236" rel="#L236">236</span>
<span id="L237" rel="#L237">237</span>
<span id="L238" rel="#L238">238</span>
<span id="L239" rel="#L239">239</span>
<span id="L240" rel="#L240">240</span>
<span id="L241" rel="#L241">241</span>
<span id="L242" rel="#L242">242</span>
<span id="L243" rel="#L243">243</span>
<span id="L244" rel="#L244">244</span>
<span id="L245" rel="#L245">245</span>
<span id="L246" rel="#L246">246</span>
<span id="L247" rel="#L247">247</span>
<span id="L248" rel="#L248">248</span>
<span id="L249" rel="#L249">249</span>
<span id="L250" rel="#L250">250</span>
<span id="L251" rel="#L251">251</span>
<span id="L252" rel="#L252">252</span>
<span id="L253" rel="#L253">253</span>
<span id="L254" rel="#L254">254</span>
<span id="L255" rel="#L255">255</span>
<span id="L256" rel="#L256">256</span>
<span id="L257" rel="#L257">257</span>
<span id="L258" rel="#L258">258</span>
<span id="L259" rel="#L259">259</span>
<span id="L260" rel="#L260">260</span>
<span id="L261" rel="#L261">261</span>
<span id="L262" rel="#L262">262</span>
<span id="L263" rel="#L263">263</span>
<span id="L264" rel="#L264">264</span>
<span id="L265" rel="#L265">265</span>
<span id="L266" rel="#L266">266</span>
<span id="L267" rel="#L267">267</span>
<span id="L268" rel="#L268">268</span>
<span id="L269" rel="#L269">269</span>
<span id="L270" rel="#L270">270</span>
<span id="L271" rel="#L271">271</span>
<span id="L272" rel="#L272">272</span>
<span id="L273" rel="#L273">273</span>
<span id="L274" rel="#L274">274</span>
<span id="L275" rel="#L275">275</span>
<span id="L276" rel="#L276">276</span>
<span id="L277" rel="#L277">277</span>
<span id="L278" rel="#L278">278</span>
<span id="L279" rel="#L279">279</span>
<span id="L280" rel="#L280">280</span>
<span id="L281" rel="#L281">281</span>
<span id="L282" rel="#L282">282</span>
<span id="L283" rel="#L283">283</span>
<span id="L284" rel="#L284">284</span>
<span id="L285" rel="#L285">285</span>
<span id="L286" rel="#L286">286</span>
<span id="L287" rel="#L287">287</span>
<span id="L288" rel="#L288">288</span>
<span id="L289" rel="#L289">289</span>
<span id="L290" rel="#L290">290</span>
<span id="L291" rel="#L291">291</span>
<span id="L292" rel="#L292">292</span>
<span id="L293" rel="#L293">293</span>
<span id="L294" rel="#L294">294</span>
<span id="L295" rel="#L295">295</span>
<span id="L296" rel="#L296">296</span>
<span id="L297" rel="#L297">297</span>
<span id="L298" rel="#L298">298</span>
<span id="L299" rel="#L299">299</span>
<span id="L300" rel="#L300">300</span>
<span id="L301" rel="#L301">301</span>
<span id="L302" rel="#L302">302</span>
<span id="L303" rel="#L303">303</span>
<span id="L304" rel="#L304">304</span>
<span id="L305" rel="#L305">305</span>
<span id="L306" rel="#L306">306</span>
<span id="L307" rel="#L307">307</span>
<span id="L308" rel="#L308">308</span>
<span id="L309" rel="#L309">309</span>
<span id="L310" rel="#L310">310</span>
<span id="L311" rel="#L311">311</span>
<span id="L312" rel="#L312">312</span>
<span id="L313" rel="#L313">313</span>
<span id="L314" rel="#L314">314</span>
<span id="L315" rel="#L315">315</span>
<span id="L316" rel="#L316">316</span>
<span id="L317" rel="#L317">317</span>
<span id="L318" rel="#L318">318</span>
<span id="L319" rel="#L319">319</span>
<span id="L320" rel="#L320">320</span>
<span id="L321" rel="#L321">321</span>
<span id="L322" rel="#L322">322</span>
<span id="L323" rel="#L323">323</span>
<span id="L324" rel="#L324">324</span>
<span id="L325" rel="#L325">325</span>
<span id="L326" rel="#L326">326</span>
<span id="L327" rel="#L327">327</span>
<span id="L328" rel="#L328">328</span>
<span id="L329" rel="#L329">329</span>
<span id="L330" rel="#L330">330</span>
<span id="L331" rel="#L331">331</span>
<span id="L332" rel="#L332">332</span>

            </td>
            <td class="blob-line-code"><div class="code-body highlight"><pre><div class='line' id='LC1'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){}}</span><span class="kd">function</span> <span class="nx">s</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="p">]}}</span><span class="kd">function</span> <span class="nx">aa</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">}}</span><span class="kd">var</span> <span class="nx">t</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="kd">function</span> <span class="nx">ba</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">u</span><span class="p">,</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">shift</span><span class="p">();)</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="k">else</span> <span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span></div><div class='line' id='LC2'><span class="kd">function</span> <span class="nx">ca</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nb">Array</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;array&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nb">Object</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;[object Window]&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;object&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;[object Array]&quot;</span><span class="o">==</span><span class="nx">c</span><span class="o">||</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">splice</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">propertyIsEnumerable</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">propertyIsEnumerable</span><span class="p">(</span><span class="s2">&quot;splice&quot;</span><span class="p">))</span><span class="k">return</span><span class="s2">&quot;array&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;[object Function]&quot;</span><span class="o">==</span><span class="nx">c</span><span class="o">||</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">propertyIsEnumerable</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">propertyIsEnumerable</span><span class="p">(</span><span class="s2">&quot;call&quot;</span><span class="p">))</span><span class="k">return</span><span class="s2">&quot;function&quot;</span><span class="p">}</span><span class="k">else</span> <span class="k">return</span><span class="s2">&quot;null&quot;</span><span class="p">;</span></div><div class='line' id='LC3'><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;object&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">void</span> <span class="mi">0</span><span class="o">!==</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;array&quot;</span><span class="o">==</span><span class="nx">ca</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">ca</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span><span class="s2">&quot;array&quot;</span><span class="o">==</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">}</span><span class="kd">function</span> <span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">da</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;boolean&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">ea</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">fa</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="nx">ca</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">B</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">;</span><span class="k">return</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">ga</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="nx">ha</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">ha</span><span class="p">]</span><span class="o">=++</span><span class="nx">ia</span><span class="p">)}</span></div><div class='line' id='LC4'><span class="kd">var</span> <span class="nx">ha</span><span class="o">=</span><span class="s2">&quot;closure_uid_&quot;</span><span class="o">+</span><span class="p">(</span><span class="mi">1</span><span class="nx">E9</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span><span class="o">&gt;&gt;&gt;</span><span class="mi">0</span><span class="p">),</span><span class="nx">ia</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kd">function</span> <span class="nx">ja</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">bind</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">ka</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="mi">2</span><span class="o">&lt;</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">);</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">unshift</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}}</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}}</span></div><div class='line' id='LC5'><span class="kd">function</span> <span class="nx">la</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">la</span><span class="o">=</span><span class="nb">Function</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">bind</span><span class="o">&amp;&amp;-</span><span class="mi">1</span><span class="o">!=</span><span class="nb">Function</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">bind</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;native code&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">ja</span><span class="o">:</span><span class="nx">ka</span><span class="p">;</span><span class="k">return</span> <span class="nx">la</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">ma</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">unshift</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">)}}</span><span class="kd">var</span> <span class="nx">na</span><span class="o">=</span><span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="o">||</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">+</span><span class="k">new</span> <span class="nb">Date</span><span class="p">};</span></div><div class='line' id='LC6'><span class="kd">function</span> <span class="nx">oa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">u</span><span class="p">;</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="k">in</span> <span class="nx">d</span><span class="o">||!</span><span class="nx">d</span><span class="p">.</span><span class="nx">execScript</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">execScript</span><span class="p">(</span><span class="s2">&quot;var &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">shift</span><span class="p">());)</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="k">void</span> <span class="mi">0</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">?</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">:</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="p">{}</span><span class="o">:</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">C</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(){}</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">p</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="k">new</span> <span class="nx">c</span><span class="p">};</span><span class="kd">function</span> <span class="nx">pa</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="o">?</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">pa</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="o">=</span><span class="nb">Error</span><span class="p">().</span><span class="nx">stack</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">))}</span><span class="nx">C</span><span class="p">(</span><span class="nx">pa</span><span class="p">,</span><span class="nb">Error</span><span class="p">);</span><span class="nx">pa</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;CustomError&quot;</span><span class="p">;</span><span class="kd">function</span> <span class="nx">qa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">c</span><span class="p">]).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\$/g</span><span class="p">,</span><span class="s2">&quot;$$$$&quot;</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\%s/</span><span class="p">,</span><span class="nx">d</span><span class="p">)}</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">sa</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="sr">/^[\s\xa0]*$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">ta</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/(\r\n|\r|\n)/g</span><span class="p">,</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;&lt;br /&gt;&quot;</span><span class="o">:</span><span class="s2">&quot;&lt;br&gt;&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">ua</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">va</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="o">-</span><span class="mi">1</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;&amp;&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">wa</span><span class="p">,</span><span class="s2">&quot;&amp;amp;&quot;</span><span class="p">));</span><span class="o">-</span><span class="mi">1</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;&lt;&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">xa</span><span class="p">,</span><span class="s2">&quot;&amp;lt;&quot;</span><span class="p">));</span><span class="o">-</span><span class="mi">1</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;&gt;&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">ya</span><span class="p">,</span><span class="s2">&quot;&amp;gt;&quot;</span><span class="p">));</span><span class="o">-</span><span class="mi">1</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s1">&#39;&quot;&#39;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">Aa</span><span class="p">,</span><span class="s2">&quot;&amp;quot;&quot;</span><span class="p">));</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span></div><div class='line' id='LC7'><span class="kd">var</span> <span class="nx">wa</span><span class="o">=</span><span class="sr">/&amp;/g</span><span class="p">,</span><span class="nx">xa</span><span class="o">=</span><span class="sr">/&lt;/g</span><span class="p">,</span><span class="nx">ya</span><span class="o">=</span><span class="sr">/&gt;/g</span><span class="p">,</span><span class="nx">Aa</span><span class="o">=</span><span class="sr">/\&quot;/g</span><span class="p">,</span><span class="nx">va</span><span class="o">=</span><span class="sr">/[&amp;&lt;&gt;\&quot;]/</span><span class="p">;</span><span class="kd">function</span> <span class="nx">Ba</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">ta</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/  /g</span><span class="p">,</span><span class="s2">&quot; &amp;#160;&quot;</span><span class="p">),</span><span class="k">void</span> <span class="mi">0</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">Ca</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">1</span><span class="o">==</span><span class="nx">c</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">==</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">==</span><span class="nx">e</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">)}</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">var</span> <span class="nx">Da</span><span class="o">=</span><span class="p">{</span><span class="s2">&quot;\x00&quot;</span><span class="o">:</span><span class="s2">&quot;\\0&quot;</span><span class="p">,</span><span class="s2">&quot;\b&quot;</span><span class="o">:</span><span class="s2">&quot;\\b&quot;</span><span class="p">,</span><span class="s2">&quot;\f&quot;</span><span class="o">:</span><span class="s2">&quot;\\f&quot;</span><span class="p">,</span><span class="s2">&quot;\n&quot;</span><span class="o">:</span><span class="s2">&quot;\\n&quot;</span><span class="p">,</span><span class="s2">&quot;\r&quot;</span><span class="o">:</span><span class="s2">&quot;\\r&quot;</span><span class="p">,</span><span class="s2">&quot;\t&quot;</span><span class="o">:</span><span class="s2">&quot;\\t&quot;</span><span class="p">,</span><span class="s2">&quot;\x0B&quot;</span><span class="o">:</span><span class="s2">&quot;\\x0B&quot;</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="o">:</span><span class="s1">&#39;\\&quot;&#39;</span><span class="p">,</span><span class="s2">&quot;\\&quot;</span><span class="o">:</span><span class="s2">&quot;\\\\&quot;</span><span class="p">},</span><span class="nx">Ea</span><span class="o">=</span><span class="p">{</span><span class="s2">&quot;&#39;&quot;</span><span class="o">:</span><span class="s2">&quot;\\&#39;&quot;</span><span class="p">};</span></div><div class='line' id='LC8'><span class="kd">function</span> <span class="nx">Fa</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">quote</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">quote</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;&quot;&#39;</span><span class="p">],</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">Da</span><span class="p">[</span><span class="nx">d</span><span class="p">])){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="mi">31</span><span class="o">&lt;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="mi">127</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">Ea</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">Ea</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">Da</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">Ea</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">Da</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">else</span><span class="p">{</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">31</span><span class="o">&lt;</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="mi">127</span><span class="o">&gt;</span><span class="nx">h</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="mi">256</span><span class="o">&gt;</span><span class="nx">h</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;\\x&quot;</span><span class="p">,</span><span class="mi">16</span><span class="o">&gt;</span><span class="nx">h</span><span class="o">||</span><span class="mi">256</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">)</span><span class="nx">e</span><span class="o">+=</span><span class="s2">&quot;0&quot;</span><span class="p">}</span><span class="k">else</span> <span class="nx">e</span><span class="o">=</span><span class="s2">&quot;\\u&quot;</span><span class="p">,</span><span class="mi">4096</span><span class="o">&gt;</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">+=</span><span class="s2">&quot;0&quot;</span><span class="p">);</span><span class="nx">e</span><span class="o">+=</span><span class="nx">h</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="mi">16</span><span class="p">).</span><span class="nx">toUpperCase</span><span class="p">()}</span><span class="nx">d</span><span class="o">=</span><span class="nx">Ea</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">}</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">}</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="p">}</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s1">&#39;&quot;&#39;</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">Ga</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">pa</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">qa</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">));</span><span class="nx">b</span><span class="p">.</span><span class="nx">shift</span><span class="p">()}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Ga</span><span class="p">,</span><span class="nx">pa</span><span class="p">);</span><span class="nx">Ga</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;AssertionError&quot;</span><span class="p">;</span><span class="kd">function</span> <span class="nx">Ha</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">Ga</span><span class="p">(</span><span class="s2">&quot;Failure&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">a</span><span class="o">?</span><span class="s2">&quot;: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">));};</span><span class="kd">var</span> <span class="nx">Ia</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">Ja</span><span class="o">=</span><span class="nx">Ia</span><span class="p">.</span><span class="nx">indexOf</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">Ia</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="kc">null</span><span class="o">==</span><span class="nx">c</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">c</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="nx">y</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">:-</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">===</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">;</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">},</span><span class="nx">Ka</span><span class="o">=</span><span class="nx">Ia</span><span class="p">.</span><span class="nx">forEach</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">Ia</span><span class="p">.</span><span class="nx">forEach</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">f</span> <span class="k">in</span> <span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">La</span><span class="o">=</span><span class="nx">Ia</span><span class="p">.</span><span class="nx">map</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">Ia</span><span class="p">.</span><span class="nx">map</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nb">Array</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span></div><div class='line' id='LC9'><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">g</span> <span class="k">in</span> <span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">g</span><span class="p">,</span><span class="nx">a</span><span class="p">));</span><span class="k">return</span> <span class="nx">e</span><span class="p">},</span><span class="nx">Ma</span><span class="o">=</span><span class="nx">Ia</span><span class="p">.</span><span class="nx">some</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">Ia</span><span class="p">.</span><span class="nx">some</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span> <span class="k">in</span> <span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">};</span><span class="kd">function</span> <span class="nx">Na</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">Oa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">);</span><span class="k">return</span> <span class="mi">0</span><span class="o">&gt;</span><span class="nx">c</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">Oa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span> <span class="k">in</span> <span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="nx">f</span><span class="p">;</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">}</span></div><div class='line' id='LC10'><span class="kd">function</span> <span class="nx">Pa</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">--</span><span class="p">)</span><span class="k">delete</span> <span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Qa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">Ja</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="p">;(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">Ia</span><span class="p">.</span><span class="nx">splice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Ra</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">Array</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="k">return</span><span class="p">[]}</span><span class="kd">function</span> <span class="nx">Sa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="mi">2</span><span class="o">&gt;=</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">Ia</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">Ia</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">Ta</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||!</span><span class="nx">x</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">Ua</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Ua</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">===</span><span class="nx">b</span><span class="p">};</span><span class="kd">function</span> <span class="nx">Va</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">throw</span> <span class="nx">a</span><span class="p">;}};</span><span class="cm">/*</span></div><div class='line' id='LC11'><span class="cm"> Portions of this code are from MochiKit, received by</span></div><div class='line' id='LC12'><span class="cm"> The Closure Authors under the MIT license. All other code is Copyright</span></div><div class='line' id='LC13'><span class="cm"> 2005-2009 The Closure Authors. All Rights Reserved.</span></div><div class='line' id='LC14'><span class="cm">*/</span></div><div class='line' id='LC15'><span class="kd">function</span> <span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">u</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="kc">null</span><span class="p">}</span><span class="nx">t</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">Ha</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">Ia</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">wb</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">oc</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">cc</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">pc</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">Sb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">wb</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">Wa</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">Wa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">Ha</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">Ia</span><span class="o">=!</span><span class="nx">b</span><span class="p">;</span><span class="nx">Xa</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">Ya</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">Ha</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">cc</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">Za</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">cc</span><span class="o">=!</span><span class="mi">1</span><span class="p">}}</span><span class="nx">t</span><span class="p">.</span><span class="nx">r</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">Ya</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">Wa</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">o</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">Ya</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">Wa</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">aa</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">S</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Qb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">S</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">sb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">S</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)};</span></div><div class='line' id='LC16'><span class="nx">t</span><span class="p">.</span><span class="nx">S</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">Ha</span><span class="o">&amp;&amp;</span><span class="nx">Xa</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="kd">function</span> <span class="nx">$a</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">Ma</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">fa</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])})}</span></div><div class='line' id='LC17'><span class="kd">function</span> <span class="nx">Xa</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">Ha</span><span class="o">&amp;&amp;</span><span class="nx">$a</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">h</span><span class="p">),</span><span class="k">delete</span> <span class="nx">a</span><span class="p">.</span><span class="nx">h</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">l</span><span class="p">.</span><span class="nx">pc</span><span class="o">--</span><span class="p">,</span><span class="k">delete</span> <span class="nx">a</span><span class="p">.</span><span class="nx">l</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">,</span><span class="nx">c</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">wb</span><span class="p">;){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">shift</span><span class="p">(),</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">Ia</span><span class="o">?</span><span class="nx">g</span><span class="o">:</span><span class="nx">f</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">u</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">v</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">Ia</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">Ia</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">==</span><span class="nx">b</span><span class="o">||</span><span class="nx">h</span> <span class="k">instanceof</span> <span class="nb">Error</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="o">=</span><span class="nx">h</span><span class="p">);</span><span class="nx">b</span> <span class="k">instanceof</span> <span class="nx">D</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">wb</span><span class="o">=!</span><span class="mi">0</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">l</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">l</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">Ia</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">$a</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="o">=!</span><span class="mi">0</span><span class="p">)}}</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">S</span><span class="p">(</span><span class="nx">la</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">Sb</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">la</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">Sb</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)),</span><span class="nx">b</span><span class="p">.</span><span class="nx">oc</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">h</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">Va</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="mi">0</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">ab</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span></div><div class='line' id='LC18'><span class="kd">function</span> <span class="nx">bb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="o">?</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">bb</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="o">=</span><span class="nb">Error</span><span class="p">().</span><span class="nx">stack</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">))}</span><span class="nx">C</span><span class="p">(</span><span class="nx">bb</span><span class="p">,</span><span class="nb">Error</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Za</span><span class="p">(){</span><span class="nx">bb</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">)}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Za</span><span class="p">,</span><span class="nx">bb</span><span class="p">);</span><span class="nx">Za</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="s2">&quot;Deferred has already fired&quot;</span><span class="p">;</span><span class="nx">Za</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;AlreadyCalledError&quot;</span><span class="p">;</span><span class="nx">D</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">done</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">aa</span><span class="p">;</span><span class="nx">D</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">fail</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Qb</span><span class="p">;</span><span class="nx">D</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">then</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">S</span><span class="p">;</span><span class="nx">D</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">always</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">sb</span><span class="p">;</span><span class="kd">function</span> <span class="nx">cb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">db</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">arguments</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">]],</span><span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="nx">c</span><span class="o">++</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">var</span> <span class="nx">eb</span><span class="o">=</span><span class="s2">&quot;constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="kd">function</span> <span class="nx">fb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">d</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">eb</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="nx">eb</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">])}};</span><span class="kd">var</span> <span class="nx">gb</span><span class="o">=</span><span class="s2">&quot;StopIteration&quot;</span><span class="k">in</span> <span class="nx">u</span><span class="o">?</span><span class="nx">u</span><span class="p">.</span><span class="nx">StopIteration</span><span class="o">:</span><span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;StopIteration&quot;</span><span class="p">);</span><span class="kd">function</span> <span class="nx">hb</span><span class="p">(){}</span><span class="nx">hb</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">throw</span> <span class="nx">gb</span><span class="p">;};</span><span class="nx">hb</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">rb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="kd">function</span> <span class="nx">ib</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">hb</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">rb</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">rb</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">hb</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(;;){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">throw</span> <span class="nx">gb</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="o">++</span><span class="p">];</span><span class="nx">b</span><span class="o">++</span><span class="p">}};</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Not implemented&quot;</span><span class="p">);}</span></div><div class='line' id='LC19'><span class="kd">function</span> <span class="nx">jb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">try</span><span class="p">{</span><span class="nx">Ka</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">!==</span><span class="nx">gb</span><span class="p">)</span><span class="k">throw</span> <span class="nx">c</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="nx">a</span><span class="o">=</span><span class="nx">ib</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">try</span><span class="p">{</span><span class="k">for</span><span class="p">(;;)</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">(),</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">!==</span><span class="nx">gb</span><span class="p">)</span><span class="k">throw</span> <span class="nx">d</span><span class="p">;}}};</span><span class="kd">function</span> <span class="nx">kb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="p">[];</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">%</span><span class="mi">2</span><span class="p">)</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Uneven number of arguments&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">d</span><span class="o">+=</span><span class="mi">2</span><span class="p">)</span><span class="nx">mb</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="p">])}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">kb</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">ua</span><span class="p">(),</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">Za</span><span class="p">();</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="p">[];</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">mb</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">])}}</span><span class="nx">t</span><span class="o">=</span><span class="nx">kb</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">t</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">$a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">Bb</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;t&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">Za</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">nb</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">[],</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]]);</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span></div><div class='line' id='LC20'><span class="nx">t</span><span class="p">.</span><span class="nx">ua</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">nb</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">concat</span><span class="p">()};</span><span class="nx">t</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">$a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">};</span><span class="kd">function</span> <span class="nx">nb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">t</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">);</span><span class="nx">b</span><span class="o">++</span><span class="p">}</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="nx">c</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">t</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">{},</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;)</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="o">++</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="nx">c</span><span class="p">}}</span><span class="nx">t</span><span class="p">.</span><span class="nx">get</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">:</span><span class="nx">b</span><span class="p">};</span></div><div class='line' id='LC21'><span class="kd">function</span> <span class="nx">mb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">t</span><span class="o">++</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">$a</span><span class="o">++</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">}</span><span class="nx">t</span><span class="p">.</span><span class="nx">ta</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">kb</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">rb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">nb</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">$a</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">new</span> <span class="nx">hb</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(;;){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">!=</span><span class="nx">f</span><span class="p">.</span><span class="nx">$a</span><span class="p">)</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;The map has changed since the iterator was created&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&gt;=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">throw</span> <span class="nx">gb</span><span class="p">;</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="o">++</span><span class="p">];</span><span class="k">return</span> <span class="nx">a</span><span class="o">?</span><span class="nx">g</span><span class="o">:</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="p">]}};</span><span class="k">return</span> <span class="nx">g</span><span class="p">};</span><span class="kd">var</span> <span class="nx">ob</span><span class="p">,</span><span class="nx">pb</span><span class="p">,</span><span class="nx">qb</span><span class="p">,</span><span class="nx">rb</span><span class="p">;</span><span class="kd">function</span> <span class="nx">sb</span><span class="p">(){</span><span class="k">return</span> <span class="nx">u</span><span class="p">.</span><span class="nx">navigator</span><span class="o">?</span><span class="nx">u</span><span class="p">.</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="o">:</span><span class="kc">null</span><span class="p">}</span><span class="nx">rb</span><span class="o">=</span><span class="nx">qb</span><span class="o">=</span><span class="nx">pb</span><span class="o">=</span><span class="nx">ob</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">tb</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">tb</span><span class="o">=</span><span class="nx">sb</span><span class="p">()){</span><span class="kd">var</span> <span class="nx">ub</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">navigator</span><span class="p">;</span><span class="nx">ob</span><span class="o">=</span><span class="mi">0</span><span class="o">==</span><span class="nx">tb</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;Opera&quot;</span><span class="p">);</span><span class="nx">pb</span><span class="o">=!</span><span class="nx">ob</span><span class="o">&amp;&amp;-</span><span class="mi">1</span><span class="o">!=</span><span class="nx">tb</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;MSIE&quot;</span><span class="p">);</span><span class="nx">qb</span><span class="o">=!</span><span class="nx">ob</span><span class="o">&amp;&amp;-</span><span class="mi">1</span><span class="o">!=</span><span class="nx">tb</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;WebKit&quot;</span><span class="p">);</span><span class="nx">rb</span><span class="o">=!</span><span class="nx">ob</span><span class="o">&amp;&amp;!</span><span class="nx">qb</span><span class="o">&amp;&amp;</span><span class="s2">&quot;Gecko&quot;</span><span class="o">==</span><span class="nx">ub</span><span class="p">.</span><span class="nx">product</span><span class="p">}</span><span class="kd">var</span> <span class="nx">vb</span><span class="o">=</span><span class="nx">ob</span><span class="p">,</span><span class="nx">wb</span><span class="o">=</span><span class="nx">pb</span><span class="p">,</span><span class="nx">xb</span><span class="o">=</span><span class="nx">rb</span><span class="p">,</span><span class="nx">yb</span><span class="o">=</span><span class="nx">qb</span><span class="p">;</span><span class="kd">function</span> <span class="nx">zb</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nb">document</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">documentMode</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">}</span><span class="kd">var</span> <span class="nx">Ab</span><span class="p">;</span></div><div class='line' id='LC22'><span class="nx">a</span><span class="o">:</span><span class="p">{</span><span class="kd">var</span> <span class="nx">Bb</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">Cb</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">vb</span><span class="o">&amp;&amp;</span><span class="nx">u</span><span class="p">.</span><span class="nx">opera</span><span class="p">)</span><span class="kd">var</span> <span class="nx">Fb</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">opera</span><span class="p">.</span><span class="nx">version</span><span class="p">,</span><span class="nx">Bb</span><span class="o">=</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">Fb</span><span class="o">?</span><span class="nx">Fb</span><span class="p">()</span><span class="o">:</span><span class="nx">Fb</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">xb</span><span class="o">?</span><span class="nx">Cb</span><span class="o">=</span><span class="sr">/rv\:([^\);]+)(\)|;)/</span><span class="o">:</span><span class="nx">wb</span><span class="o">?</span><span class="nx">Cb</span><span class="o">=</span><span class="sr">/MSIE\s+([^\);]+)(\)|;)/</span><span class="o">:</span><span class="nx">yb</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">Cb</span><span class="o">=</span><span class="sr">/WebKit\/(\S+)/</span><span class="p">),</span><span class="nx">Cb</span><span class="p">)</span><span class="kd">var</span> <span class="nx">Gb</span><span class="o">=</span><span class="nx">Cb</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">sb</span><span class="p">()),</span><span class="nx">Bb</span><span class="o">=</span><span class="nx">Gb</span><span class="o">?</span><span class="nx">Gb</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">wb</span><span class="p">){</span><span class="kd">var</span> <span class="nx">Hb</span><span class="o">=</span><span class="nx">zb</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">Hb</span><span class="o">&gt;</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">Bb</span><span class="p">)){</span><span class="nx">Ab</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">Hb</span><span class="p">);</span><span class="k">break</span> <span class="nx">a</span><span class="p">}}</span><span class="nx">Ab</span><span class="o">=</span><span class="nx">Bb</span><span class="p">}</span><span class="kd">var</span> <span class="nx">Ib</span><span class="o">=</span><span class="p">{};</span></div><div class='line' id='LC23'><span class="kd">function</span> <span class="nx">Jb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">Ib</span><span class="p">[</span><span class="nx">a</span><span class="p">])){</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">Ab</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^[\s\xa0]+|[\s\xa0]+$/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^[\s\xa0]+|[\s\xa0]+$/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">0</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;(\\d*)(\\D*)&quot;</span><span class="p">,</span><span class="s2">&quot;g&quot;</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;(\\d*)(\\D*)&quot;</span><span class="p">,</span><span class="s2">&quot;g&quot;</span><span class="p">);</span><span class="k">do</span><span class="p">{</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">||</span><span class="p">[</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">],</span><span class="nx">p</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">||</span><span class="p">[</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">m</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">==</span><span class="nx">p</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">length</span><span class="p">)</span><span class="k">break</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="p">((</span><span class="mi">0</span><span class="o">==</span><span class="nx">m</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">length</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">m</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="mi">10</span><span class="p">))</span><span class="o">&lt;</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">p</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">length</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">p</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="mi">10</span><span class="p">))</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">m</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">length</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">m</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span></div><div class='line' id='LC24'><span class="mi">10</span><span class="p">))</span><span class="o">&gt;</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">p</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">length</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">p</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="mi">10</span><span class="p">))</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span><span class="o">||</span><span class="p">((</span><span class="mi">0</span><span class="o">==</span><span class="nx">m</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nx">length</span><span class="p">)</span><span class="o">&lt;</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">p</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nx">length</span><span class="p">)</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">m</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nx">length</span><span class="p">)</span><span class="o">&gt;</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">p</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nx">length</span><span class="p">)</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">m</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">&lt;</span><span class="nx">p</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="nx">m</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">&gt;</span><span class="nx">p</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">)}</span><span class="k">while</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">b</span><span class="p">)}</span><span class="nx">b</span><span class="o">=</span><span class="nx">Ib</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">b</span><span class="p">}</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="kd">var</span> <span class="nx">Kb</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nb">document</span><span class="p">,</span><span class="nx">Lb</span><span class="o">=</span><span class="nx">Kb</span><span class="o">&amp;&amp;</span><span class="nx">wb</span><span class="o">?</span><span class="nx">zb</span><span class="p">()</span><span class="o">||</span><span class="p">(</span><span class="s2">&quot;CSS1Compat&quot;</span><span class="o">==</span><span class="nx">Kb</span><span class="p">.</span><span class="nx">compatMode</span><span class="o">?</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">Ab</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">:</span><span class="mi">5</span><span class="p">)</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="kd">function</span> <span class="nx">Mb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">Nb</span><span class="p">(</span><span class="nx">a</span><span class="o">||</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">callee</span><span class="p">.</span><span class="nx">caller</span><span class="p">,[])}</span></div><div class='line' id='LC25'><span class="kd">function</span> <span class="nx">Nb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">Ja</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">))</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;[...circular reference...]&quot;</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="mi">50</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">Ob</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;(&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">arguments</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;, &quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="k">switch</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">f</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;object&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="o">?</span><span class="s2">&quot;object&quot;</span><span class="o">:</span><span class="s2">&quot;null&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;string&quot;</span><span class="o">:</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;number&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;boolean&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="o">?</span><span class="s2">&quot;true&quot;</span><span class="o">:</span><span class="s2">&quot;false&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;function&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">Ob</span><span class="p">(</span><span class="nx">f</span><span class="p">))</span><span class="o">?</span><span class="nx">f</span><span class="o">:</span><span class="s2">&quot;[fn]&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">f</span><span class="p">}</span><span class="mi">40</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">40</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;...&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">)}</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;)\n&quot;</span><span class="p">);</span><span class="k">try</span><span class="p">{</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">Nb</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">caller</span><span class="p">,</span><span class="nx">b</span><span class="p">))}</span><span class="k">catch</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;[exception trying to get caller]\n&quot;</span><span class="p">)}}</span><span class="k">else</span> <span class="nx">a</span><span class="o">?</span></div><div class='line' id='LC26'><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;[...long stack...]&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;[end]&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">Ob</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">Pb</span><span class="p">[</span><span class="nx">a</span><span class="p">])</span><span class="k">return</span> <span class="nx">Pb</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="nx">a</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">Pb</span><span class="p">[</span><span class="nx">a</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="sr">/function ([^\(]+)/</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">Pb</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span><span class="s2">&quot;[Anonymous]&quot;</span><span class="p">}</span><span class="k">return</span> <span class="nx">Pb</span><span class="p">[</span><span class="nx">a</span><span class="p">]}</span><span class="kd">var</span> <span class="nx">Pb</span><span class="o">=</span><span class="p">{};</span><span class="kd">function</span> <span class="nx">Qb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">e</span><span class="o">||</span><span class="nx">Rb</span><span class="o">++</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="o">||</span><span class="nx">na</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">;</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">}</span><span class="nx">Qb</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">Qb</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">Rb</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kd">function</span> <span class="nx">Sb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">}</span><span class="nx">Sb</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">Sb</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">Sb</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">Sb</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="kd">function</span> <span class="nx">Tb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="nx">Tb</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">Ub</span><span class="o">=</span><span class="k">new</span> <span class="nx">Tb</span><span class="p">(</span><span class="s2">&quot;SHOUT&quot;</span><span class="p">,</span><span class="mi">1200</span><span class="p">),</span><span class="nx">Vb</span><span class="o">=</span><span class="k">new</span> <span class="nx">Tb</span><span class="p">(</span><span class="s2">&quot;SEVERE&quot;</span><span class="p">,</span><span class="mi">1</span><span class="nx">E3</span><span class="p">),</span><span class="nx">Wb</span><span class="o">=</span><span class="k">new</span> <span class="nx">Tb</span><span class="p">(</span><span class="s2">&quot;WARNING&quot;</span><span class="p">,</span><span class="mi">900</span><span class="p">),</span><span class="nx">Xb</span><span class="o">=</span><span class="k">new</span> <span class="nx">Tb</span><span class="p">(</span><span class="s2">&quot;INFO&quot;</span><span class="p">,</span><span class="mi">800</span><span class="p">),</span><span class="nx">Yb</span><span class="o">=</span><span class="k">new</span> <span class="nx">Tb</span><span class="p">(</span><span class="s2">&quot;CONFIG&quot;</span><span class="p">,</span><span class="mi">700</span><span class="p">),</span><span class="nx">Zb</span><span class="o">=</span><span class="k">new</span> <span class="nx">Tb</span><span class="p">(</span><span class="s2">&quot;FINE&quot;</span><span class="p">,</span><span class="mi">500</span><span class="p">),</span><span class="nx">$b</span><span class="o">=</span><span class="k">new</span> <span class="nx">Tb</span><span class="p">(</span><span class="s2">&quot;FINER&quot;</span><span class="p">,</span><span class="mi">400</span><span class="p">),</span><span class="nx">ac</span><span class="o">=</span><span class="k">new</span> <span class="nx">Tb</span><span class="p">(</span><span class="s2">&quot;FINEST&quot;</span><span class="p">,</span><span class="mi">300</span><span class="p">),</span><span class="nx">bc</span><span class="o">=</span><span class="p">[</span><span class="k">new</span> <span class="nx">Tb</span><span class="p">(</span><span class="s2">&quot;OFF&quot;</span><span class="p">,</span><span class="kc">Infinity</span><span class="p">),</span><span class="nx">Ub</span><span class="p">,</span><span class="nx">Vb</span><span class="p">,</span><span class="nx">Wb</span><span class="p">,</span><span class="nx">Xb</span><span class="p">,</span><span class="nx">Yb</span><span class="p">,</span><span class="nx">Zb</span><span class="p">,</span><span class="nx">$b</span><span class="p">,</span><span class="nx">ac</span><span class="p">,</span><span class="k">new</span> <span class="nx">Tb</span><span class="p">(</span><span class="s2">&quot;ALL&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">)],</span><span class="nx">cc</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">Sb</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getName</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;f&quot;</span><span class="p">);</span></div><div class='line' id='LC27'><span class="kd">function</span> <span class="nx">dc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span> <span class="nx">dc</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">);</span><span class="nx">Ha</span><span class="p">(</span><span class="s2">&quot;Root logger has no level set.&quot;</span><span class="p">);</span><span class="k">return</span> <span class="kc">null</span><span class="p">}</span><span class="nx">Sb</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">log</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="o">&gt;=</span><span class="nx">dc</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">value</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;log:&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">,</span><span class="nx">u</span><span class="p">.</span><span class="nx">console</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">console</span><span class="p">.</span><span class="nx">timeStamp</span><span class="o">?</span><span class="nx">u</span><span class="p">.</span><span class="nx">console</span><span class="p">.</span><span class="nx">timeStamp</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">u</span><span class="p">.</span><span class="nx">console</span><span class="p">.</span><span class="nx">markTimeline</span><span class="o">&amp;&amp;</span><span class="nx">u</span><span class="p">.</span><span class="nx">console</span><span class="p">.</span><span class="nx">markTimeline</span><span class="p">(</span><span class="nx">b</span><span class="p">)),</span><span class="nx">u</span><span class="p">.</span><span class="nx">msWriteProfilerMark</span><span class="o">&amp;&amp;</span><span class="nx">u</span><span class="p">.</span><span class="nx">msWriteProfilerMark</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">b</span><span class="p">;){</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">a</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">f</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">d</span><span class="p">}};</span></div><div class='line' id='LC28'><span class="nx">Sb</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nx">Qb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nb">String</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">callee</span><span class="p">.</span><span class="nx">caller</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">g</span><span class="p">;</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">ba</span><span class="p">(</span><span class="s2">&quot;window.location.href&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="nx">g</span><span class="o">=</span><span class="p">{</span><span class="nx">message</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;Unknown error&quot;</span><span class="p">,</span><span class="nx">lineNumber</span><span class="o">:</span><span class="s2">&quot;Not available&quot;</span><span class="p">,</span><span class="nx">fileName</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">stack</span><span class="o">:</span><span class="s2">&quot;Not available&quot;</span><span class="p">};</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">l</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">m</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">l</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineNumber</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">Qc</span><span class="o">||</span><span class="s2">&quot;Not available&quot;</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">p</span><span class="p">){</span><span class="nx">l</span><span class="o">=</span><span class="s2">&quot;Not available&quot;</span><span class="p">,</span><span class="nx">m</span><span class="o">=!</span><span class="mi">0</span><span class="p">}</span><span class="k">try</span><span class="p">{</span><span class="nx">n</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">fileName</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">filename</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">sourceURL</span><span class="o">||</span><span class="nx">u</span><span class="p">.</span><span class="nx">$googDebugFname</span><span class="o">||</span><span class="nx">h</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">q</span><span class="p">){</span><span class="nx">n</span><span class="o">=</span><span class="s2">&quot;Not available&quot;</span><span class="p">,</span><span class="nx">m</span><span class="o">=!</span><span class="mi">0</span><span class="p">}</span><span class="nx">g</span><span class="o">=!</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineNumber</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">fileName</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">stack</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="p">{</span><span class="nx">message</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">message</span><span class="p">,</span></div><div class='line' id='LC29'><span class="nx">name</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">lineNumber</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="nx">fileName</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">stack</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">stack</span><span class="o">||</span><span class="s2">&quot;Not available&quot;</span><span class="p">}}</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;Message: &quot;</span><span class="o">+</span><span class="nx">ua</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">message</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;\nUrl: &lt;a href=&quot;view-source:&#39;</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">fileName</span><span class="o">+</span><span class="s1">&#39;&quot; target=&quot;_new&quot;&gt;&#39;</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">fileName</span><span class="o">+</span><span class="s2">&quot;&lt;/a&gt;\nLine: &quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">lineNumber</span><span class="o">+</span><span class="s2">&quot;\n\nBrowser stack:\n&quot;</span><span class="o">+</span><span class="nx">ua</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">stack</span><span class="o">+</span><span class="s2">&quot;-&gt; &quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;[end]\n\nJS stack traversal:\n&quot;</span><span class="o">+</span><span class="nx">ua</span><span class="p">(</span><span class="nx">Mb</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;-&gt; &quot;</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">r</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;Exception trying to expose exception! You win, we lose. &quot;</span><span class="o">+</span><span class="nx">r</span><span class="p">}</span><span class="nx">d</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">}</span><span class="k">return</span> <span class="nx">d</span><span class="p">};</span><span class="kd">function</span> <span class="nx">ec</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">Vb</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">Wb</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">fc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">Zb</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">)}</span></div><div class='line' id='LC30'><span class="kd">function</span> <span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">$b</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">ac</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">gc</span><span class="o">=</span><span class="p">{},</span><span class="nx">hc</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="kd">function</span> <span class="nx">ic</span><span class="p">(){</span><span class="nx">hc</span><span class="o">||</span><span class="p">(</span><span class="nx">hc</span><span class="o">=</span><span class="k">new</span> <span class="nx">Sb</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">gc</span><span class="p">[</span><span class="s2">&quot;&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">hc</span><span class="p">,</span><span class="nx">hc</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">Yb</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">jc</span><span class="p">(){</span><span class="nx">ic</span><span class="p">();</span><span class="k">return</span> <span class="nx">hc</span><span class="p">}</span><span class="kd">function</span> <span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">ic</span><span class="p">();</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">gc</span><span class="p">[</span><span class="nx">a</span><span class="p">])){</span><span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">Sb</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">));</span><span class="nx">c</span><span class="p">.</span><span class="nx">e</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="p">{});</span><span class="nx">c</span><span class="p">.</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">gc</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="k">return</span> <span class="nx">b</span><span class="p">};</span><span class="kd">function</span> <span class="nx">kc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">D</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="p">[]}</span><span class="nx">C</span><span class="p">(</span><span class="nx">kc</span><span class="p">,</span><span class="nx">D</span><span class="p">);</span><span class="nx">kc</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">r</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">kc</span><span class="p">.</span><span class="nx">p</span><span class="p">.</span><span class="nx">r</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">)};</span><span class="nx">kc</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">o</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">kc</span><span class="p">.</span><span class="nx">p</span><span class="p">.</span><span class="nx">o</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">)};</span><span class="kd">var</span> <span class="nx">lc</span><span class="o">=</span><span class="p">{</span><span class="nx">READ_ONLY</span><span class="o">:</span><span class="s2">&quot;readonly&quot;</span><span class="p">,</span><span class="nx">READ_WRITE</span><span class="o">:</span><span class="s2">&quot;readwrite&quot;</span><span class="p">,</span><span class="nx">VERSION_CHANGE</span><span class="o">:</span><span class="s2">&quot;versionchange&quot;</span><span class="p">},</span><span class="nx">mc</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">IDBRequest</span><span class="o">&amp;&amp;</span><span class="s2">&quot;LOADING&quot;</span><span class="k">in</span> <span class="nx">u</span><span class="p">.</span><span class="nx">IDBRequest</span><span class="o">?</span><span class="nx">u</span><span class="p">.</span><span class="nx">IDBTransaction</span><span class="o">:</span><span class="nx">u</span><span class="p">.</span><span class="nx">webkitIDBRequest</span><span class="o">&amp;&amp;</span><span class="s2">&quot;LOADING&quot;</span><span class="k">in</span> <span class="nx">u</span><span class="p">.</span><span class="nx">webkitIDBRequest</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">===</span><span class="nx">u</span><span class="p">.</span><span class="nx">webkitIDBTransaction</span><span class="p">.</span><span class="nx">READ_WRITE</span><span class="o">?</span><span class="nx">u</span><span class="p">.</span><span class="nx">webkitIDBTransaction</span><span class="o">:</span><span class="nx">lc</span><span class="p">,</span><span class="nx">nc</span><span class="o">=</span><span class="nx">mc</span><span class="p">.</span><span class="nx">READ_ONLY</span><span class="p">,</span><span class="nx">K</span><span class="o">=</span><span class="nx">mc</span><span class="p">.</span><span class="nx">READ_WRITE</span><span class="p">,</span><span class="nx">oc</span><span class="o">=</span><span class="nx">mc</span><span class="p">.</span><span class="nx">VERSION_CHANGE</span><span class="p">,</span><span class="nx">pc</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">indexedDB</span><span class="o">||</span><span class="nx">u</span><span class="p">.</span><span class="nx">mozIndexedDB</span><span class="o">||</span><span class="nx">u</span><span class="p">.</span><span class="nx">webkitIndexedDB</span><span class="o">||</span><span class="nx">u</span><span class="p">.</span><span class="nx">moz_indexedDB</span><span class="o">||</span><span class="nx">u</span><span class="p">.</span><span class="nx">msIndexedDB</span><span class="p">;</span><span class="kd">function</span> <span class="nx">qc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="mi">2</span><span class="o">==</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">))</span><span class="o">:</span><span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">arguments</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">]],</span><span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="nx">c</span><span class="o">++</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">var</span> <span class="nx">rc</span><span class="o">=</span><span class="p">{};</span></div><div class='line' id='LC31'><span class="kd">function</span> <span class="nx">sc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">tc</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="k">void</span> <span class="mi">0</span><span class="o">!==</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">pop</span><span class="p">());){</span><span class="mi">0</span><span class="o">===</span><span class="nx">c</span><span class="o">%</span><span class="mi">4</span><span class="o">&amp;&amp;</span><span class="mi">12</span><span class="o">&lt;</span><span class="nx">c</span><span class="o">+</span><span class="mi">4</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">e</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span> <span class="k">instanceof</span> <span class="nb">Array</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">+=</span><span class="mi">4</span><span class="p">,</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">rc</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">--</span><span class="p">;)</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="p">]);</span><span class="k">continue</span><span class="p">}</span><span class="k">else</span> <span class="nx">a</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;number&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">)</span><span class="nx">c</span><span class="o">+=</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">uc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">e</span> <span class="k">instanceof</span> <span class="nb">Date</span><span class="p">)</span><span class="nx">c</span><span class="o">+=</span><span class="mi">2</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">uc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">valueOf</span><span class="p">());</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">){</span><span class="nx">c</span><span class="o">+=</span><span class="mi">3</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="mi">126</span><span class="o">&gt;=</span><span class="nx">f</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="nx">f</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="mi">16510</span><span class="o">&gt;=</span><span class="nx">f</span><span class="o">?</span><span class="p">(</span><span class="nx">f</span><span class="o">-=</span><span class="mi">127</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="mi">128</span><span class="o">|</span><span class="nx">f</span><span class="o">&gt;&gt;</span><span class="mi">8</span><span class="p">,</span><span class="nx">f</span><span class="o">&amp;</span><span class="mi">255</span><span class="p">))</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="mi">192</span><span class="o">|</span><span class="nx">f</span><span class="o">&gt;&gt;</span><span class="mi">10</span><span class="p">,</span></div><div class='line' id='LC32'><span class="nx">f</span><span class="o">&gt;&gt;</span><span class="mi">2</span><span class="o">|</span><span class="mi">255</span><span class="p">,(</span><span class="nx">f</span><span class="o">|</span><span class="mi">3</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">6</span><span class="p">)}</span><span class="nx">c</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="mi">0</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">===</span><span class="nx">rc</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="k">else</span> <span class="k">return</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="s2">&quot;00&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="o">--</span><span class="nx">b</span><span class="p">];);</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">=++</span><span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">toString</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">vc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">new</span> <span class="nx">wc</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kc">null</span><span class="o">!=</span><span class="nx">xc</span><span class="p">(</span><span class="nx">g</span><span class="p">);)</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">a</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">a</span><span class="p">)</span><span class="k">break</span><span class="p">;</span><span class="k">do</span><span class="p">{</span><span class="nx">e</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">a</span><span class="o">/</span><span class="mi">4</span><span class="o">|</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">a</span><span class="o">%</span><span class="mi">4</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="mi">12</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">.</span><span class="nx">a</span><span class="o">+</span><span class="mi">4</span><span class="p">)</span><span class="nx">xc</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="k">else</span> <span class="k">break</span><span class="p">}</span><span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span><span class="mi">1</span><span class="o">===</span><span class="nx">a</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">yc</span><span class="p">(</span><span class="nx">g</span><span class="p">))</span><span class="o">:</span><span class="mi">2</span><span class="o">===</span><span class="nx">a</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">yc</span><span class="p">(</span><span class="nx">g</span><span class="p">)))</span><span class="o">:</span><span class="mi">3</span><span class="o">===</span><span class="nx">a</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">zc</span><span class="p">(</span><span class="nx">g</span><span class="p">))</span><span class="o">:</span><span class="mi">0</span><span class="o">===</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">pop</span><span class="p">())}</span><span class="k">return</span> <span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]}</span></div><div class='line' id='LC33'><span class="kd">function</span> <span class="nx">uc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">!==</span><span class="nx">c</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nb">isFinite</span><span class="p">(</span><span class="nx">c</span><span class="p">)){</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="o">=-</span><span class="nx">c</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mf">2.2250738585072014</span><span class="nx">E</span><span class="o">-</span><span class="mi">308</span><span class="o">&lt;=</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;)</span><span class="nx">f</span><span class="o">--</span><span class="p">,</span><span class="nx">e</span><span class="o">*=</span><span class="mi">2</span><span class="p">;</span><span class="k">for</span><span class="p">(;</span><span class="mi">2</span><span class="o">&lt;=</span><span class="nx">e</span><span class="p">;)</span><span class="nx">f</span><span class="o">++</span><span class="p">,</span><span class="nx">e</span><span class="o">/=</span><span class="mi">2</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="o">+</span><span class="mi">1023</span><span class="p">}</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="mi">4503599627370496</span><span class="o">*</span><span class="p">(</span><span class="nx">c</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="nx">f</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">c</span><span class="o">/</span><span class="mf">4.9</span><span class="nx">E</span><span class="o">-</span><span class="mi">324</span><span class="p">)}</span><span class="k">else</span> <span class="nx">e</span><span class="o">=</span><span class="mi">2047</span><span class="p">,</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="nx">f</span><span class="o">=</span><span class="mh">0x8000000000000</span><span class="o">:-</span><span class="kc">Infinity</span><span class="o">===</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">1</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mh">0xfffffffffffff</span><span class="o">-</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">2047</span><span class="o">-</span><span class="nx">d</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">write</span><span class="p">((</span><span class="nx">c</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">128</span><span class="p">)</span><span class="o">|</span><span class="nx">d</span><span class="o">&gt;&gt;</span><span class="mi">4</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">write</span><span class="p">((</span><span class="nx">d</span><span class="o">&amp;</span><span class="mi">15</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">4</span><span class="o">|</span><span class="mi">0</span><span class="o">|</span><span class="nx">e</span><span class="o">/</span><span class="mi">281474976710656</span><span class="p">);</span><span class="nx">e</span><span class="o">%=</span><span class="mi">281474976710656</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="o">|</span><span class="nx">e</span><span class="o">/</span><span class="mi">4294967296</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="nx">c</span><span class="o">&gt;&gt;</span><span class="mi">8</span><span class="p">,</span><span class="nx">c</span><span class="o">&amp;</span><span class="mi">255</span><span class="p">);</span><span class="nx">e</span><span class="o">%=</span><span class="mi">4294967296</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="o">|</span><span class="nx">e</span><span class="o">/</span><span class="mi">65536</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="nx">c</span><span class="o">&gt;&gt;</span></div><div class='line' id='LC34'><span class="mi">8</span><span class="p">,</span><span class="nx">c</span><span class="o">&amp;</span><span class="mi">255</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="o">%</span><span class="mi">65536</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="nx">c</span><span class="o">&gt;&gt;</span><span class="mi">8</span><span class="p">,</span><span class="nx">c</span><span class="o">&amp;</span><span class="mi">255</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">yc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">xc</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">|</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="o">&gt;&gt;</span><span class="mi">7</span><span class="o">?!</span><span class="mi">1</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;</span><span class="mi">127</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">4</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">xc</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">|</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="o">&gt;&gt;</span><span class="mi">4</span><span class="p">);</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">2047</span><span class="o">-</span><span class="nx">e</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[</span><span class="nx">c</span><span class="o">?</span><span class="mi">15</span><span class="o">-</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;</span><span class="mi">15</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="o">&amp;</span><span class="mi">15</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="mi">6</span><span class="p">;</span><span class="nx">f</span><span class="o">--</span><span class="p">;)</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="o">?</span><span class="mi">255</span><span class="o">-</span><span class="p">(</span><span class="nx">xc</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">|</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">xc</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">|</span><span class="mi">0</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">7</span><span class="p">;</span><span class="nx">f</span><span class="o">--</span><span class="p">;)</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">/</span><span class="mi">256</span><span class="o">+</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="nx">a</span><span class="o">/=</span><span class="mi">16</span><span class="p">;</span><span class="k">return</span> <span class="mi">0</span><span class="o">===</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">===</span><span class="nx">e</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="nx">e</span><span class="o">-</span><span class="mi">1023</span><span class="p">)</span><span class="o">*</span><span class="nx">d</span><span class="p">}</span></div><div class='line' id='LC35'><span class="kd">function</span> <span class="nx">zc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">;;){</span><span class="nx">f</span><span class="o">=</span><span class="nx">xc</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">f</span><span class="o">||</span><span class="kc">null</span><span class="o">==</span><span class="nx">f</span><span class="p">)</span><span class="k">break</span><span class="p">;</span><span class="mi">0</span><span class="o">===</span><span class="nx">c</span><span class="o">?</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="o">&gt;&gt;</span><span class="mi">6</span><span class="p">,</span><span class="mi">2</span><span class="o">&gt;</span><span class="nx">g</span><span class="o">&amp;&amp;!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nb">String</span><span class="p">.</span><span class="nx">fromCharCode</span><span class="p">(</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">g</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="o">&lt;&lt;</span><span class="mi">10</span><span class="p">,</span><span class="nx">e</span><span class="o">++</span><span class="p">))</span><span class="o">:</span><span class="mi">2</span><span class="o">===</span><span class="nx">c</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nb">String</span><span class="p">.</span><span class="nx">fromCharCode</span><span class="p">(</span><span class="nx">d</span><span class="o">+</span><span class="nx">f</span><span class="o">+</span><span class="mi">127</span><span class="p">)),</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="mi">2</span><span class="o">===</span><span class="nx">e</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="o">+=</span><span class="nx">f</span><span class="o">&lt;&lt;</span><span class="mi">2</span><span class="p">,</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nb">String</span><span class="p">.</span><span class="nx">fromCharCode</span><span class="p">(</span><span class="nx">d</span><span class="o">|</span><span class="nx">f</span><span class="o">&gt;&gt;</span><span class="mi">6</span><span class="p">)),</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">)}</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">wc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">index</span><span class="o">=-</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">xc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">index</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="o">?</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">[</span><span class="o">++</span><span class="nx">a</span><span class="p">.</span><span class="nx">index</span><span class="p">]</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">[</span><span class="o">++</span><span class="nx">a</span><span class="p">.</span><span class="nx">index</span><span class="p">],</span><span class="mi">16</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">}</span><span class="kd">function</span> <span class="nx">tc</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">}</span></div><div class='line' id='LC36'><span class="nx">tc</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">write</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">toString</span><span class="p">(</span><span class="mi">16</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="mi">2</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;0&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">)};</span><span class="nx">tc</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">};</span><span class="kd">function</span> <span class="nx">Ac</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">sc</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">sc</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="o">&gt;</span><span class="nx">d</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="nx">c</span><span class="o">==</span><span class="nx">d</span><span class="o">?</span><span class="mi">0</span><span class="o">:-</span><span class="mi">1</span><span class="p">};</span><span class="kd">var</span> <span class="nx">M</span><span class="o">=</span><span class="nx">pc</span><span class="o">&amp;&amp;</span><span class="nx">pc</span><span class="p">.</span><span class="nx">cmp</span><span class="o">?</span><span class="nx">la</span><span class="p">(</span><span class="nx">pc</span><span class="p">.</span><span class="nx">cmp</span><span class="p">,</span><span class="nx">pc</span><span class="p">)</span><span class="o">:</span><span class="nx">Ac</span><span class="p">,</span><span class="nx">Bc</span><span class="o">=</span><span class="p">[];</span><span class="kd">function</span> <span class="nx">N</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">pa</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;ydn.error.ArgumentException&quot;</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">N</span><span class="p">,</span><span class="nx">pa</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Cc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">pa</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;ydn.error.NotSupportedException&quot;</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Cc</span><span class="p">,</span><span class="nx">pa</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Dc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">pa</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;ydn.error.NotImplementedException&quot;</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Dc</span><span class="p">,</span><span class="nx">pa</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Ec</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">pa</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;ydn.error.InvalidOperationException&quot;</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Ec</span><span class="p">,</span><span class="nx">pa</span><span class="p">);</span></div><div class='line' id='LC37'><span class="kd">function</span> <span class="nx">Fc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="o">?</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">Fc</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="o">=</span><span class="nb">Error</span><span class="p">().</span><span class="nx">stack</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;ydn.error.InternalError&quot;</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Fc</span><span class="p">,</span><span class="nb">Error</span><span class="p">);</span><span class="nx">Fc</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;ydn.error.InternalError&quot;</span><span class="p">;</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.Cursor&quot;</span><span class="p">);</span><span class="kd">function</span> <span class="nx">O</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">lower</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">upper</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">lowerOpen</span><span class="o">=!!</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">upperOpen</span><span class="o">=!!</span><span class="nx">d</span><span class="p">;</span><span class="nx">fa</span><span class="p">(</span><span class="nb">Object</span><span class="p">.</span><span class="nx">freeze</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nb">Object</span><span class="p">.</span><span class="nx">freeze</span><span class="p">(</span><span class="k">this</span><span class="p">)}</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">lower</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">upper</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toJSON</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Gc</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">Hc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">Ic</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="nx">O</span><span class="p">.</span><span class="nx">only</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">O</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)};</span><span class="nx">O</span><span class="p">.</span><span class="nx">bound</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">O</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)};</span><span class="nx">O</span><span class="p">.</span><span class="nx">upperBound</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">O</span><span class="p">(</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="o">!!</span><span class="nx">b</span><span class="p">)};</span><span class="nx">O</span><span class="p">.</span><span class="nx">lowerBound</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">O</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="o">!!</span><span class="nx">b</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">)};</span></div><div class='line' id='LC38'><span class="kd">function</span> <span class="nx">Jc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="nx">b</span><span class="o">=</span><span class="nx">Ra</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;\uffff&quot;</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;\uffff&quot;</span><span class="p">;</span><span class="k">else</span> <span class="k">return</span> <span class="nx">O</span><span class="p">.</span><span class="nx">only</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">O</span><span class="p">.</span><span class="nx">bound</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">Gc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="p">{};</span><span class="k">return</span><span class="p">{</span><span class="nx">lower</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">lower</span><span class="p">,</span><span class="nx">upper</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">upper</span><span class="p">,</span><span class="nx">lowerOpen</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">lowerOpen</span><span class="p">,</span><span class="nx">upperOpen</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">upperOpen</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">Ic</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="o">?</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">upper</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">lower</span><span class="o">?</span><span class="nx">Kc</span><span class="p">.</span><span class="nx">bound</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">lower</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">upper</span><span class="p">,</span><span class="o">!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">lowerOpen</span><span class="p">,</span><span class="o">!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">upperOpen</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">upper</span><span class="o">?</span><span class="nx">Kc</span><span class="p">.</span><span class="nx">upperBound</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">upper</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">upperOpen</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">lower</span><span class="o">?</span><span class="nx">Kc</span><span class="p">.</span><span class="nx">lowerBound</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">lower</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">lowerOpen</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="o">:</span><span class="kc">null</span><span class="p">}</span></div><div class='line' id='LC39'><span class="kd">function</span> <span class="nx">Lc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">O</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">Ja</span><span class="p">([</span><span class="s2">&quot;lower&quot;</span><span class="p">,</span><span class="s2">&quot;upper&quot;</span><span class="p">,</span><span class="s2">&quot;lowerOpen&quot;</span><span class="p">,</span><span class="s2">&quot;upperOpen&quot;</span><span class="p">],</span><span class="nx">b</span><span class="p">)))</span><span class="k">return</span><span class="s1">&#39;invalid attribute &quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s1">&#39;&quot; in key range object&#39;</span><span class="p">;</span><span class="k">return</span><span class="s2">&quot;&quot;</span><span class="p">}</span><span class="k">return</span><span class="s2">&quot;key range must be an object&quot;</span><span class="p">}</span><span class="k">return</span><span class="s2">&quot;&quot;</span><span class="p">}</span></div><div class='line' id='LC40'><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">vb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lower</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">upper</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lowerOpen</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">upperOpen</span><span class="p">;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">lower</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">lower</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">lower</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">lower</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">lower</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">lowerOpen</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">lowerOpen</span><span class="p">);</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">upper</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">upper</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">upper</span><span class="o">&lt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">upper</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">upper</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">upperOpen</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">upperOpen</span><span class="p">);</span><span class="k">return</span> <span class="nx">O</span><span class="p">.</span><span class="nx">bound</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">Mc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">lowerOpen</span><span class="o">?</span><span class="s2">&quot;(&quot;</span><span class="o">:</span><span class="s2">&quot;[&quot;</span><span class="p">;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">lower</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">+=</span><span class="nx">a</span><span class="p">.</span><span class="nx">lower</span><span class="o">+</span><span class="s2">&quot;, &quot;</span><span class="p">);</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">upper</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">+=</span><span class="nx">a</span><span class="p">.</span><span class="nx">upper</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">+=</span><span class="nx">a</span><span class="p">.</span><span class="nx">upperOpen</span><span class="o">?</span><span class="s2">&quot;)&quot;</span><span class="o">:</span><span class="s2">&quot;]&quot;</span><span class="p">}</span></div><div class='line' id='LC41'><span class="kd">function</span> <span class="nx">Nc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">lowerOpen</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">upperOpen</span><span class="o">||</span><span class="kc">null</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">lower</span><span class="o">||</span><span class="kc">null</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">upper</span><span class="o">||</span><span class="mi">0</span><span class="o">!==</span><span class="nx">M</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">lower</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">upper</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">c</span><span class="p">.</span><span class="nx">lower</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">lowerOpen</span><span class="o">?</span><span class="s2">&quot; &gt; &quot;</span><span class="o">:</span><span class="s2">&quot; &gt;= &quot;</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="nx">f</span><span class="o">+</span><span class="s2">&quot;?&quot;</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">Oc</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">lower</span><span class="p">,</span><span class="nx">b</span><span class="p">))}</span><span class="kc">null</span><span class="o">!=</span><span class="nx">c</span><span class="p">.</span><span class="nx">upper</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">upperOpen</span><span class="o">?</span><span class="s2">&quot; &lt; &quot;</span><span class="o">:</span><span class="s2">&quot; &lt;= &quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="nx">f</span><span class="o">+</span><span class="s2">&quot;?&quot;</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">Oc</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">upper</span><span class="p">,</span><span class="nx">b</span><span class="p">)))}</span><span class="k">else</span> <span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; = ?&quot;</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">Oc</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">lower</span><span class="p">,</span><span class="nx">b</span><span class="p">))}</span></div><div class='line' id='LC42'><span class="kd">function</span> <span class="nx">Pc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;starts&quot;</span><span class="o">==</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;^&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">Jc</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&lt;&quot;</span><span class="o">==</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;&lt;=&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;&lt;&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;&gt;&quot;</span><span class="o">==</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;&gt;=&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="s2">&quot;&gt;&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;=&quot;</span><span class="o">==</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;==&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;invalid op: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&lt;&quot;</span><span class="o">==</span><span class="nx">c</span><span class="o">||</span><span class="s2">&quot;&lt;=&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;&lt;&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;&gt;&quot;</span><span class="o">==</span><span class="nx">c</span><span class="o">||</span><span class="s2">&quot;&gt;=&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="s2">&quot;&gt;&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;invalid op2: &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="nx">O</span><span class="p">.</span><span class="nx">bound</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">g</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">Kc</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">IDBKeyRange</span><span class="o">||</span><span class="nx">u</span><span class="p">.</span><span class="nx">webkitIDBKeyRange</span><span class="o">||</span><span class="nx">O</span><span class="p">;</span><span class="kd">function</span> <span class="nx">Qc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">b</span> <span class="k">instanceof</span> <span class="nx">O</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="nx">b</span><span class="o">=</span><span class="nx">Pc</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">b</span> <span class="k">instanceof</span> <span class="nx">O</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">O</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">lower</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">upper</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">lowerOpen</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">upperOpen</span><span class="p">);</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;Invalid key range: &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; of type &quot;</span><span class="o">+</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">);}</span><span class="k">else</span> <span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">qa</span><span class="o">=</span><span class="nx">a</span><span class="p">}</span><span class="nx">Qc</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">qa</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">Qc</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">vb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">qa</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">qa</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">vb</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="k">new</span> <span class="nx">Qc</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">qa</span><span class="p">,</span><span class="nx">a</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">P</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;store name&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">=!!</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">da</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;reverse value must be a boolean, but &quot;</span><span class="o">+</span><span class="k">typeof</span> <span class="nx">d</span><span class="o">+</span><span class="s2">&quot; found&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">da</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;unique value must be a boolean, but &quot;</span><span class="o">+</span><span class="k">typeof</span> <span class="nx">e</span><span class="o">+</span><span class="s2">&quot; found&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">da</span><span class="p">(</span><span class="nx">f</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;key_only value must be a boolean, but &quot;</span><span class="o">+</span><span class="k">typeof</span> <span class="nx">f</span><span class="o">+</span><span class="s2">&quot; found&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">v</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">?</span><span class="nx">f</span><span class="o">:!!</span><span class="nx">y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;next&quot;</span><span class="p">;</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">?</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;prevunique&quot;</span><span class="o">:</span><span class="nx">d</span><span class="o">?</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;prev&quot;</span><span class="o">:</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;nextunique&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">Lc</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;Invalid key range: &quot;</span><span class="o">+</span></div><div class='line' id='LC43'><span class="nx">d</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="nx">Ic</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="nx">Rc</span><span class="p">}</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">b</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="kd">function</span> <span class="nx">Sc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">3</span><span class="o">&lt;</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;too many argument&quot;</span><span class="p">);</span><span class="nx">P</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Sc</span><span class="p">,</span><span class="nx">P</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Tc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">y</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;index name must be string&quot;</span><span class="p">);</span><span class="nx">P</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Tc</span><span class="p">,</span><span class="nx">P</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Uc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">3</span><span class="o">&lt;</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;too many argument&quot;</span><span class="p">);</span><span class="nx">P</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Uc</span><span class="p">,</span><span class="nx">P</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Vc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">Uc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">Pc</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">))}</span></div><div class='line' id='LC44'><span class="kd">function</span> <span class="nx">Wc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">y</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;index name must be string&quot;</span><span class="p">);</span><span class="nx">P</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Wc</span><span class="p">,</span><span class="nx">P</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Xc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">Wc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">Pc</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">))}</span><span class="kd">var</span> <span class="nx">Rc</span><span class="o">=</span><span class="s2">&quot;init&quot;</span><span class="p">;</span><span class="nx">t</span><span class="o">=</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.Iterator&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">Ec</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">F</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;f&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">Ub</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;d&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">Na</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span> <span class="k">instanceof</span> <span class="nx">Kc</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">:</span><span class="nx">Kc</span><span class="p">.</span><span class="nx">bound</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">.</span><span class="nx">lower</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">.</span><span class="nx">upper</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">.</span><span class="nx">lowerOpen</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">.</span><span class="nx">upperOpen</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Fc</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;b&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">vc</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;e&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">ta</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">P</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">P</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">Q</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="p">)};</span></div><div class='line' id='LC45'><span class="nx">t</span><span class="p">.</span><span class="nx">unique</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">P</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">P</span><span class="p">(),</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">toJSON</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">store</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">index</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">,</span><span class="nx">keyRange</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">?</span><span class="nx">Gc</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">direction</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">i</span><span class="p">}};</span><span class="nx">t</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="nx">Mc</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="o">!=</span><span class="nx">Rc</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">+=</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot;{&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">+=</span><span class="s2">&quot;, &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">s</span><span class="p">),</span><span class="nx">a</span><span class="o">+=</span><span class="s2">&quot;}&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">?</span><span class="s2">&quot;Index&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;Key&quot;</span><span class="o">:</span><span class="s2">&quot;Value&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">+</span><span class="s2">&quot;Iterator:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">+</span><span class="nx">a</span><span class="p">};</span></div><div class='line' id='LC46'><span class="nx">t</span><span class="p">.</span><span class="nx">Gc</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">new</span> <span class="nx">P</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">P</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">Q</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="p">);</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;not possible&quot;</span><span class="p">);};</span><span class="nx">t</span><span class="p">.</span><span class="nx">reverse</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">P</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">P</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">Q</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">P</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;prev&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">i</span><span class="o">||</span><span class="s2">&quot;prevunique&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">i</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Q</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;nextunique&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">i</span><span class="o">||</span><span class="s2">&quot;prevunique&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">i</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">uc</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;g&quot;</span><span class="p">);</span></div><div class='line' id='LC47'><span class="nx">t</span><span class="p">.</span><span class="nx">load</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">Nb</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">i</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;busy&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">bc</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">l</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">s</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="o">?</span><span class="s2">&quot;rest&quot;</span><span class="o">:</span><span class="s2">&quot;done&quot;</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">openCursor</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">s</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Cc</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;l&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">Dc</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;s&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">fc</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="nx">Rc</span><span class="p">;</span><span class="s2">&quot;busy&quot;</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="o">?</span><span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="o">+</span><span class="s2">&quot;: resetting state to &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; ignore during iteration&quot;</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">s</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">stores</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">u</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">u</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">Ja</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">u</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">k</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">u</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">k</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="kd">function</span> <span class="nx">Yc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;transaction&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;objectStore&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">db</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">.</span><span class="nx">db</span><span class="p">.</span><span class="nx">objectStoreNames</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">Zc</span><span class="p">(</span><span class="s1">&#39;store &quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s1">&#39;&quot; not in transaction.&#39;</span><span class="p">);}</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">Zc</span><span class="p">(</span><span class="s2">&quot;storage instance require.&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">i</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">s</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">=!</span><span class="mi">1</span><span class="p">}</span><span class="nx">Yc</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.con.IdbCursorStream&quot;</span><span class="p">);</span><span class="nx">Yc</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">e</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">Yc</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="p">[];</span></div><div class='line' id='LC48'><span class="kd">function</span> <span class="nx">$c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">++</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">result</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">fa</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">s</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">s</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">primaryKey</span><span class="p">,</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">l</span><span class="o">?</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">l</span><span class="p">]</span><span class="o">:</span><span class="nx">d</span><span class="p">)}</span><span class="k">else</span> <span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;sink gone, dropping value for: &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">primaryKey</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="s2">&quot;continue&quot;</span><span class="p">](</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">shift</span><span class="p">());</span><span class="k">else</span> <span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">--</span><span class="p">,</span><span class="mi">0</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">ca</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">ca</span><span class="p">()}};</span><span class="nx">b</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;seeking fail. &quot;</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;error&quot;</span><span class="k">in</span> <span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">error</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">error</span><span class="p">.</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">));</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">--</span><span class="p">;</span><span class="mi">0</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">ca</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">ca</span><span class="p">()}}</span><span class="kd">function</span> <span class="nx">ad</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="mi">0</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">?</span><span class="nx">b</span><span class="p">()</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">ca</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span></div><div class='line' id='LC49'><span class="kd">function</span> <span class="nx">bd</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="s2">&quot;complete&quot;</span><span class="o">!==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">message</span><span class="p">);</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; transaction &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">)},</span><span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; transaction started for &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">objectStore</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">i</span><span class="p">);</span><span class="nx">$c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">openCursor</span><span class="p">(</span><span class="nx">c</span><span class="p">))};</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">)</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; using existing tx.&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">)</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; creating tx from IDBDatabase.&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">transaction</span><span class="p">([</span><span class="nx">a</span><span class="p">.</span><span class="nx">i</span><span class="p">],</span><span class="nx">nc</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">.</span><span class="nx">oncomplete</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">(</span><span class="s2">&quot;complete&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">(</span><span class="s2">&quot;error&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">.</span><span class="nx">onabort</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">(</span><span class="s2">&quot;abort&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)};</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">h</span><span class="p">)</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span></div><div class='line' id='LC50'><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; creating tx from ydn.db.con.IStorage.&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">h</span><span class="p">.</span><span class="nx">Ca</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="p">(</span><span class="nx">b</span><span class="p">)},[</span><span class="nx">a</span><span class="p">.</span><span class="nx">i</span><span class="p">],</span><span class="nx">nc</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">cd</span><span class="p">(</span><span class="s2">&quot;no way to create a transaction provided.&quot;</span><span class="p">);}};</span><span class="kd">function</span> <span class="nx">dd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">Q</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">Pa</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ia</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">db</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">Pa</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">db</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">ia</span><span class="o">=</span><span class="k">new</span> <span class="nx">Yc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">za</span><span class="p">,</span><span class="nx">la</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ca</span><span class="p">,</span><span class="k">this</span><span class="p">));</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;Invalid IndexedDB Transaction.&quot;</span><span class="p">);</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;ydn.db.Streamer: First argument requires storage or transaction instance required.&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">y</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;a store name required.&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">y</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;index name must be a string.&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">za</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ia</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">Y</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">oa</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">Ja</span><span class="o">=!</span><span class="mi">1</span><span class="p">}</span><span class="nx">t</span><span class="o">=</span><span class="nx">dd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.Streamer&quot;</span><span class="p">);</span></div><div class='line' id='LC51'><span class="nx">t</span><span class="p">.</span><span class="nx">Pa</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">Lb</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">oa</span><span class="o">=</span><span class="p">[];</span><span class="nx">t</span><span class="p">.</span><span class="nx">Y</span><span class="o">=</span><span class="p">[];</span><span class="nx">t</span><span class="p">.</span><span class="nx">ia</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">Bc</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">Lb</span><span class="o">=</span><span class="nx">a</span><span class="p">};</span><span class="kd">function</span> <span class="nx">ed</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">Y</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">Ja</span><span class="o">&amp;&amp;</span><span class="nx">fa</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">Lb</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">ed</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">oa</span><span class="p">.</span><span class="nx">shift</span><span class="p">(),</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">Y</span><span class="p">.</span><span class="nx">shift</span><span class="p">(),</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">Y</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">Lb</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="kc">null</span><span class="p">);</span><span class="nx">b</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">ed</span><span class="p">(</span><span class="nx">a</span><span class="p">)}}</span><span class="nx">t</span><span class="p">.</span><span class="nx">Ja</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">ba</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ia</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">Ja</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">ad</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ia</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">oa</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">Y</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">oa</span><span class="o">=</span><span class="p">[];</span><span class="nx">b</span><span class="p">.</span><span class="nx">Y</span><span class="o">=</span><span class="p">[];</span><span class="nx">b</span><span class="p">.</span><span class="nx">Ja</span><span class="o">=!</span><span class="mi">1</span><span class="p">})}</span><span class="k">else</span> <span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">oa</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">Y</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">oa</span><span class="o">=</span><span class="p">[],</span><span class="k">this</span><span class="p">.</span><span class="nx">Y</span><span class="o">=</span><span class="p">[]};</span><span class="nx">t</span><span class="p">.</span><span class="nx">ca</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">oa</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">Y</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">ed</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span></div><div class='line' id='LC52'><span class="nx">t</span><span class="p">.</span><span class="nx">push</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">Ja</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">fd</span><span class="p">(</span><span class="s2">&quot;push not allowed after a collection is started&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">2</span><span class="o">&lt;=</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">ca</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">ia</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">Pa</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">fd</span><span class="p">(</span><span class="s2">&quot;Database is not setup.&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">Pa</span><span class="p">.</span><span class="nx">Da</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;indexeddb&quot;</span><span class="o">===</span><span class="nx">c</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">ia</span><span class="o">=</span><span class="k">new</span> <span class="nx">Yc</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">Pa</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">za</span><span class="p">,</span><span class="nx">la</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ca</span><span class="p">,</span><span class="k">this</span><span class="p">));</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">gd</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">fd</span><span class="p">(</span><span class="s2">&quot;Database is not connected.&quot;</span><span class="p">);}</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ia</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">bd</span><span class="p">(</span><span class="nx">c</span><span class="p">)}};</span><span class="nx">t</span><span class="p">.</span><span class="nx">F</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;za&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;Streamer:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">+</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">za</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">hd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="s2">&quot;push&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">Zc</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">}</span><span class="nx">hd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.algo.AbstractSolver&quot;</span><span class="p">);</span><span class="nx">hd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">hd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;iterators must be array&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">2</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">RangeError</span><span class="p">(</span><span class="s2">&quot;ZigzagMerge require at least 2 iterators, but  only &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot; found.&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="k">instanceof</span> <span class="nx">P</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;item at iterators &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; is not an iterator.&quot;</span><span class="p">);</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">};</span></div><div class='line' id='LC53'><span class="kd">function</span> <span class="nx">id</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">v</span><span class="p">(</span><span class="nx">d</span><span class="p">)){</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="kc">null</span><span class="o">!=</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">==</span><span class="nx">M</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">d</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="o">=!</span><span class="mi">1</span><span class="p">)}</span><span class="k">return</span> <span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="o">++</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">)</span><span class="o">?</span><span class="p">[]</span><span class="o">:</span><span class="nx">b</span><span class="p">}</span><span class="nx">hd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">[]};</span><span class="kd">function</span> <span class="nx">jd</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="o">?</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">jd</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="o">=</span><span class="nb">Error</span><span class="p">().</span><span class="nx">stack</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;ConstraintError&quot;</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">jd</span><span class="p">,</span><span class="nb">Error</span><span class="p">);</span><span class="nx">jd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;ConstraintError&quot;</span><span class="p">;</span><span class="kd">function</span> <span class="nx">kd</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="o">?</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">kd</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="o">=</span><span class="nb">Error</span><span class="p">().</span><span class="nx">stack</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;ydn.db.InvalidKeyException&quot;</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">kd</span><span class="p">,</span><span class="nb">Error</span><span class="p">);</span></div><div class='line' id='LC54'><span class="kd">function</span> <span class="nx">ld</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="o">?</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">ld</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="o">=</span><span class="nb">Error</span><span class="p">().</span><span class="nx">stack</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;ydn.db.VersionError&quot;</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">ld</span><span class="p">,</span><span class="nb">Error</span><span class="p">);</span><span class="nx">ld</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;ydn.db.VersionError&quot;</span><span class="p">;</span><span class="kd">function</span> <span class="nx">md</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="o">?</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">md</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="o">=</span><span class="nb">Error</span><span class="p">().</span><span class="nx">stack</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">))}</span><span class="nx">C</span><span class="p">(</span><span class="nx">md</span><span class="p">,</span><span class="nb">Error</span><span class="p">);</span><span class="nx">md</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;ydn.db.InternalError&quot;</span><span class="p">;</span></div><div class='line' id='LC55'><span class="kd">function</span> <span class="nx">nd</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="o">?</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">nd</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="o">=</span><span class="nb">Error</span><span class="p">().</span><span class="nx">stack</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;InvalidStateError&quot;</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">nd</span><span class="p">,</span><span class="nb">Error</span><span class="p">);</span><span class="kd">function</span> <span class="nx">od</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="o">?</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">od</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="o">=</span><span class="nb">Error</span><span class="p">().</span><span class="nx">stack</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;InvalidAccessError&quot;</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">od</span><span class="p">,</span><span class="nb">Error</span><span class="p">);</span><span class="kd">function</span> <span class="nx">pd</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="o">?</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">pd</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="o">=</span><span class="nb">Error</span><span class="p">().</span><span class="nx">stack</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;NotFoundError&quot;</span><span class="p">}</span></div><div class='line' id='LC56'><span class="nx">C</span><span class="p">(</span><span class="nx">pd</span><span class="p">,</span><span class="nb">Error</span><span class="p">);</span><span class="nx">pd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;NotFoundError&quot;</span><span class="p">;</span><span class="kd">function</span> <span class="nx">qd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="o">?</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">qd</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="o">=</span><span class="nb">Error</span><span class="p">().</span><span class="nx">stack</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">b</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">+=</span><span class="s2">&quot; :&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">message</span><span class="o">+</span><span class="s2">&quot; [&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">code</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;SQLError&quot;</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">qd</span><span class="p">,</span><span class="nb">Error</span><span class="p">);</span><span class="kd">function</span> <span class="nx">sd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="o">?</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">sd</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="o">=</span><span class="nb">Error</span><span class="p">().</span><span class="nx">stack</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">b</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">+=</span><span class="s2">&quot; :&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">message</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;SecurityError&quot;</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">sd</span><span class="p">,</span><span class="nb">Error</span><span class="p">);</span></div><div class='line' id='LC57'><span class="kd">function</span> <span class="nx">td</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="o">?</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">td</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="o">=</span><span class="nb">Error</span><span class="p">().</span><span class="nx">stack</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;ydn.db.SqlParseError&quot;</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">td</span><span class="p">,</span><span class="nb">Error</span><span class="p">);</span><span class="kd">function</span> <span class="nx">ud</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="o">?</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">ud</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="o">=</span><span class="nb">Error</span><span class="p">().</span><span class="nx">stack</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;ydn.db.TimeoutError&quot;</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">ud</span><span class="p">,</span><span class="nb">Error</span><span class="p">);</span><span class="kd">function</span> <span class="nx">vd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">store</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">vd</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">));</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="s2">&quot;^|&quot;</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">vd</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">))),</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;^:&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="o">!</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Invalid key value: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">k</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="kc">null</span><span class="p">}</span><span class="nx">t</span><span class="o">=</span><span class="nx">vd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">toJSON</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">store</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">k</span><span class="p">,</span><span class="nx">id</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">toJSON</span><span class="p">());</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span></div><div class='line' id='LC58'><span class="nx">t</span><span class="p">.</span><span class="nx">valueOf</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">valueOf</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;^|&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">k</span><span class="o">+</span><span class="s2">&quot;^:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">valueOf</span><span class="p">().</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;^|&quot;</span><span class="p">,</span><span class="s2">&quot;|&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;^:&quot;</span><span class="p">,</span><span class="s2">&quot;:&quot;</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Ic</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;k&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">rc</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">Hc</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;parent&quot;</span><span class="p">);</span><span class="kd">function</span> <span class="nx">wd</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="kd">function</span> <span class="nx">xd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="nx">xd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.crud.req.RequestExecuto&quot;</span><span class="p">);</span><span class="nx">xd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="nx">aa</span><span class="p">(</span><span class="s2">&quot;RequestExecutor&quot;</span><span class="p">);</span><span class="kd">function</span> <span class="nx">yd</span><span class="p">(){</span><span class="mi">0</span><span class="o">!=</span><span class="nx">zd</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">Ad</span><span class="p">[</span><span class="nx">ga</span><span class="p">(</span><span class="k">this</span><span class="p">)]</span><span class="o">=</span><span class="k">this</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">zd</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">Ad</span><span class="o">=</span><span class="p">{};</span><span class="nx">yd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">$b</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">yd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Ab</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">$b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$b</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ea</span><span class="p">(),</span><span class="mi">0</span><span class="o">!=</span><span class="nx">zd</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">ga</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">delete</span> <span class="nx">Ad</span><span class="p">[</span><span class="nx">a</span><span class="p">]}};</span><span class="nx">yd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ea</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ac</span><span class="p">)</span><span class="k">for</span><span class="p">(;</span><span class="k">this</span><span class="p">.</span><span class="nx">ac</span><span class="p">.</span><span class="nx">length</span><span class="p">;)</span><span class="k">this</span><span class="p">.</span><span class="nx">ac</span><span class="p">.</span><span class="nx">shift</span><span class="p">()()};</span><span class="kd">function</span> <span class="nx">Bd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">yd</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">k</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">getName</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">J</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">m</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">zc</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">t</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">eb</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ma</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">fa</span><span class="o">=</span><span class="nx">d</span><span class="o">||</span><span class="mi">4</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">Fc</span><span class="p">;};</span><span class="k">this</span><span class="p">.</span><span class="nx">s</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">Fc</span><span class="p">;};</span><span class="k">this</span><span class="p">.</span><span class="nx">bc</span><span class="o">=</span><span class="nx">k</span><span class="p">()}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Bd</span><span class="p">,</span><span class="nx">yd</span><span class="p">);</span><span class="nx">t</span><span class="o">=</span><span class="nx">Bd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span></div><div class='line' id='LC59'><span class="nx">t</span><span class="p">.</span><span class="nx">Nb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">J</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">F</span><span class="p">(</span><span class="nx">b</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="nx">y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">J</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">m</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">t</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">eb</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ma</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">reverse</span><span class="o">=</span><span class="s2">&quot;prev&quot;</span><span class="o">==</span><span class="nx">d</span><span class="o">||</span><span class="s2">&quot;prevunique&quot;</span><span class="o">==</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">unique</span><span class="o">=</span><span class="s2">&quot;nextunique&quot;</span><span class="o">==</span><span class="nx">d</span><span class="o">||</span><span class="s2">&quot;prevunique&quot;</span><span class="o">==</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">R</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">Ka</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">R</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">m</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">unique</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">reverse</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">Ka</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.core.req.AbstractCursor&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">Ob</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">s</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">Cd</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">ma</span><span class="o">=!</span><span class="mi">0</span><span class="p">};</span></div><div class='line' id='LC60'><span class="nx">t</span><span class="p">.</span><span class="nx">N</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="o">+</span><span class="s2">&quot; finished.&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">ma</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">i</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">t</span><span class="o">++</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ma</span><span class="o">?</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="o">+</span><span class="s2">&quot; DONE.&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="p">(),</span><span class="nx">Cd</span><span class="p">(</span><span class="k">this</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="o">+</span><span class="s2">&quot; new cursor position {&quot;</span><span class="o">+</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;, &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;}&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">))};</span><span class="nx">t</span><span class="p">.</span><span class="nx">ea</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="kc">null</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;Cursor:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">k</span><span class="o">+</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">J</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">J</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;[&quot;</span><span class="o">+</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="s2">&quot;~&quot;</span><span class="p">)</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">zc</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">};</span><span class="kd">function</span> <span class="nx">Cd</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="nx">wd</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">wd</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">bc</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">eb</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">)}</span></div><div class='line' id='LC61'><span class="kd">function</span> <span class="nx">Dd</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">eb</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;: exit&quot;</span><span class="p">);</span><span class="nx">Cd</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="nx">t</span><span class="p">.</span><span class="nx">Bb</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;t&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">Nc</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">C</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">ra</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">Ka</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">C</span><span class="p">()</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">i</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Ra</span><span class="o">=</span><span class="nx">k</span><span class="p">();</span><span class="nx">t</span><span class="p">.</span><span class="nx">Ea</span><span class="o">=</span><span class="nx">k</span><span class="p">();</span><span class="kd">function</span> <span class="nx">Ed</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; restarting&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">ma</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">eb</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">openCursor</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">Fd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">D</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">s</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ha</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Fd</span><span class="p">,</span><span class="nx">D</span><span class="p">);</span><span class="nx">t</span><span class="o">=</span><span class="nx">Fd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">ha</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.Request&quot;</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Gd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">ha</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; BEGIN&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">][</span><span class="mi">0</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">][</span><span class="mi">1</span><span class="p">],</span><span class="nx">b</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">}</span><span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; END&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">Hd</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">Fd</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">i</span><span class="o">++</span><span class="p">;</span><span class="nx">Gd</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">ha</span><span class="o">+</span><span class="s2">&quot;C&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">i</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="nx">t</span><span class="p">.</span><span class="nx">qc</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">};</span></div><div class='line' id='LC62'><span class="nx">t</span><span class="p">.</span><span class="nx">abort</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="o">+</span><span class="s2">&quot; aborting&quot;</span><span class="p">),</span><span class="nx">fa</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">abort</span><span class="p">))</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">abort</span><span class="p">();</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">fa</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">))</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">(</span><span class="s2">&quot;ABORT&quot;</span><span class="p">,[],</span><span class="nx">k</span><span class="p">(),</span><span class="nx">aa</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">));</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">Cc</span><span class="p">;</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">nd</span><span class="p">(</span><span class="s2">&quot;No active transaction&quot;</span><span class="p">);};</span><span class="kd">function</span> <span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">s</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span><span class="nx">c</span><span class="o">=!!</span><span class="nx">c</span><span class="p">;</span><span class="nx">d</span><span class="o">?</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)})</span><span class="o">:</span><span class="nx">c</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">o</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">r</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">Id</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">s</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">])}</span><span class="kd">function</span> <span class="nx">T</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">])}</span><span class="nx">t</span><span class="p">.</span><span class="nx">Jc</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">]);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span></div><div class='line' id='LC63'><span class="nx">t</span><span class="p">.</span><span class="nx">r</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="o">+</span><span class="s2">&quot; SUCCESS&quot;</span><span class="p">);</span><span class="nx">Fd</span><span class="p">.</span><span class="nx">p</span><span class="p">.</span><span class="nx">r</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">Jd</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">o</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="o">+</span><span class="s2">&quot; ERROR&quot;</span><span class="p">);</span><span class="nx">Fd</span><span class="p">.</span><span class="nx">p</span><span class="p">.</span><span class="nx">o</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">Jd</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">Jd</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">ha</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">ha</span><span class="p">}</span><span class="kd">function</span> <span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">ha</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">?</span><span class="s2">&quot;*&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;[&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">ha</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">+</span><span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Kd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">Fd</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">R</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="nx">t</span><span class="p">.</span><span class="nx">xc</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;Request:&quot;</span><span class="o">+</span><span class="nx">V</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span></div><div class='line' id='LC64'><span class="nx">t</span><span class="p">.</span><span class="nx">toJSON</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ha</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">match</span><span class="p">(</span><span class="sr">/B(\d+)T(\d+)(?:Q(\d+?))?(?:R(\d+))?/</span><span class="p">)</span><span class="o">||</span><span class="p">[];</span><span class="k">return</span><span class="p">{</span><span class="nx">method</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;:&quot;</span><span class="p">)</span><span class="o">:</span><span class="p">[],</span><span class="nx">branchNo</span><span class="o">:</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="nx">transactionNo</span><span class="o">:</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]),</span><span class="nx">queueNo</span><span class="o">:</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">]),</span><span class="nx">requestNo</span><span class="o">:</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">4</span><span class="p">])}};</span><span class="kd">function</span> <span class="nx">Ld</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">fa</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">abort</span><span class="p">))</span><span class="nx">a</span><span class="p">.</span><span class="nx">abort</span><span class="p">();</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">fa</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">))</span><span class="nx">a</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">(</span><span class="s2">&quot;ABORT&quot;</span><span class="p">,[],</span><span class="nx">k</span><span class="p">(),</span><span class="nx">aa</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">));</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">Cc</span><span class="p">;</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">nd</span><span class="p">(</span><span class="s2">&quot;No active transaction&quot;</span><span class="p">);};</span><span class="kd">function</span> <span class="nx">Md</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">}</span><span class="nx">Md</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.tr.Mutex&quot;</span><span class="p">);</span><span class="nx">Md</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">K</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">Md</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">G</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">Md</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;Mutex:&quot;</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;B&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;T&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">?</span><span class="s2">&quot;*&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">Nd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="s2">&quot;single&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">Md</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">qb</span><span class="o">=</span><span class="nx">f</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">i</span><span class="o">=!</span><span class="mi">1</span><span class="p">}</span><span class="nx">t</span><span class="o">=</span><span class="nx">Nd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">qb</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.tr.Serial&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">Sa</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">};</span></div><div class='line' id='LC65'><span class="kd">function</span> <span class="nx">Od</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;multi&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">)</span><span class="nx">a</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">K</span><span class="o">||!</span><span class="nx">a</span><span class="p">.</span><span class="nx">mode</span><span class="o">||</span><span class="nx">c</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">mode</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">mode</span><span class="o">!=</span><span class="nx">K</span><span class="o">||</span><span class="nx">c</span><span class="o">!=</span><span class="nx">nc</span><span class="p">)</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">K</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">b</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">K</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">])){</span><span class="nx">b</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">break</span> <span class="nx">a</span><span class="p">}</span><span class="nx">b</span><span class="o">=!</span><span class="mi">0</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;repeat&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">)</span><span class="nx">a</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">K</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">mode</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">mode</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">K</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">K</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">])){</span><span class="nx">b</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">break</span> <span class="nx">a</span><span class="p">}</span><span class="nx">b</span><span class="o">=!</span><span class="mi">0</span><span class="p">}</span><span class="k">else</span> <span class="nx">b</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">else</span> <span class="nx">b</span><span class="o">=</span><span class="s2">&quot;all&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="o">?!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="nx">t</span><span class="p">.</span><span class="nx">j</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;h&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="p">.</span><span class="nx">Da</span><span class="p">()};</span></div><div class='line' id='LC66'><span class="kd">function</span> <span class="nx">Pd</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">K</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">mode</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="k">return</span> <span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">c</span><span class="o">?</span><span class="nx">Od</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Qd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;push tx queue[&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">Xa</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">K</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">mode</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">G</span><span class="o">:</span><span class="nx">e</span><span class="p">})}</span><span class="nx">t</span><span class="p">.</span><span class="nx">abort</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="o">+</span><span class="s2">&quot;: aborting&quot;</span><span class="p">);</span><span class="nx">Ld</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">)};</span></div><div class='line' id='LC67'><span class="nx">t</span><span class="p">.</span><span class="nx">na</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">y</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">:</span><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">(</span><span class="nx">e</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;number of store names must more than 0&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">y</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">]))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;store name at &quot;</span><span class="o">+</span><span class="nx">f</span><span class="o">+</span><span class="s2">&quot; must be string but found &quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot; of type &quot;</span><span class="o">+</span><span class="k">typeof</span> <span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">Ja</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">])))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;store name &quot;&#39;</span><span class="o">+</span><span class="nx">f</span><span class="o">+</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;&quot; in scope of &#39;</span><span class="o">+</span><span class="k">this</span><span class="p">);}}</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;store names must be an array&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">nc</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">||!</span><span class="nx">Rd</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">j</span><span class="p">())</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">i</span><span class="p">)</span><span class="nx">Qd</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">A</span><span class="p">();</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span></div><div class='line' id='LC68'><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">qb</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">Sa</span><span class="p">()</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">qb</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">Ec</span><span class="p">(</span><span class="s2">&quot;Exceed maximum number of transactions of &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">qb</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">i</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="p">.</span><span class="nx">Ca</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">a</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">d</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">K</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">mode</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">b</span><span class="o">++</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">G</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">l</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">A</span><span class="p">();</span><span class="nx">fc</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot; BEGIN &quot;</span><span class="o">+</span><span class="nx">W</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">);</span><span class="nx">a</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">Pd</span><span class="p">(</span><span class="nx">h</span><span class="p">);)</span><span class="nx">c</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">shift</span><span class="p">(),</span><span class="nx">c</span><span class="p">.</span><span class="nx">G</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">G</span><span class="p">),</span><span class="nx">H</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;pop tx queue&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; reusing T&quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">Sa</span><span class="p">()),</span><span class="nx">c</span><span class="p">.</span><span class="nx">Xa</span><span class="p">()},</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">fc</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">a</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">K</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">mode</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">fa</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">G</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">G</span><span class="o">=</span><span class="kc">null</span><span class="p">)</span><span class="o">:</span><span class="nx">F</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot; has no TX to be unlocked for &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span></div><div class='line' id='LC69'><span class="nx">h</span><span class="p">.</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)(</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">e</span><span class="p">[</span><span class="nx">c</span><span class="p">])(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">;(</span><span class="nx">c</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">shift</span><span class="p">())</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">na</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">Xa</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">K</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">mode</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">G</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">})}};</span><span class="nx">t</span><span class="p">.</span><span class="nx">A</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;B&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;T&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">request</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">new</span> <span class="nx">Fd</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="nx">nc</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">Od</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">++</span><span class="p">,</span><span class="nx">Gd</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">A</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;R&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">),</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">na</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">d</span><span class="o">++</span><span class="p">;</span><span class="nx">Gd</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">A</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;R&quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">d</span><span class="p">)},</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="nx">e</span><span class="p">};</span></div><div class='line' id='LC70'><span class="nx">t</span><span class="p">.</span><span class="nx">$</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="o">||</span><span class="nx">nc</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">&amp;&amp;!</span><span class="nx">f</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">Od</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">d</span><span class="o">++</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">A</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;R&quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">d</span><span class="p">;</span><span class="nx">G</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot; BEGIN&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="nx">c</span><span class="o">?</span><span class="p">(</span><span class="nx">G</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot; ERROR&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">o</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">G</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot; SUCCESS&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">r</span><span class="p">(</span><span class="nx">b</span><span class="p">));</span><span class="nx">f</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">});</span><span class="nx">G</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot; END&quot;</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">else</span> <span class="nx">f</span><span class="p">.</span><span class="nx">na</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">d</span><span class="o">++</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">A</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;R&quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">d</span><span class="p">;</span><span class="nx">G</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot; BEGIN&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">d</span><span class="o">?</span><span class="p">(</span><span class="nx">G</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot; ERROR&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">o</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">G</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot; SUCCESS&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">r</span><span class="p">(</span><span class="nx">b</span><span class="p">));</span><span class="nx">f</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">});</span><span class="nx">G</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot; END&quot;</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">getName</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">j</span><span class="p">().</span><span class="nx">getName</span><span class="p">()};</span></div><div class='line' id='LC71'><span class="nx">t</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;Serial:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">A</span><span class="p">()</span><span class="o">+</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">?</span><span class="s2">&quot;*&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">Sd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">Nd</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Sd</span><span class="p">,</span><span class="nx">Nd</span><span class="p">);</span><span class="nx">Sd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.tr.AtomicSerial&quot;</span><span class="p">);</span><span class="nx">Sd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">request</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">Sd</span><span class="p">.</span><span class="nx">p</span><span class="p">.</span><span class="nx">request</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">g</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="s2">&quot;complete&quot;</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">ud</span><span class="p">;</span><span class="nx">R</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}});</span><span class="nx">Id</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">});</span><span class="k">return</span> <span class="nx">g</span><span class="p">};</span></div><div class='line' id='LC72'><span class="nx">Sd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">$</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">S</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">g</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">g</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">});</span><span class="nx">Sd</span><span class="p">.</span><span class="nx">p</span><span class="p">.</span><span class="nx">$</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;complete&quot;</span><span class="o">!=</span><span class="nx">b</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">o</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="o">===</span><span class="nx">g</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">o</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="o">===</span><span class="nx">g</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">r</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nx">ud</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">o</span><span class="p">(</span><span class="nx">d</span><span class="p">)}</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">)})};</span><span class="nx">Sd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;Atomic&quot;</span><span class="o">+</span><span class="nx">Sd</span><span class="p">.</span><span class="nx">p</span><span class="p">.</span><span class="nx">toString</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">Td</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="nx">t</span><span class="o">=</span><span class="nx">Td</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.tr.DbOperator&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">lc</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">Sa</span><span class="p">()};</span><span class="nx">t</span><span class="p">.</span><span class="nx">abort</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">abort</span><span class="p">()};</span><span class="kd">function</span> <span class="nx">X</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">Da</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;indexeddb&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">Ud</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">b</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;websql&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">Vd</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">b</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;memory&quot;</span><span class="o">==</span><span class="nx">c</span><span class="o">||</span><span class="s2">&quot;localstorage&quot;</span><span class="o">==</span><span class="nx">c</span><span class="o">||</span><span class="s2">&quot;sessionstorage&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">Wd</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">b</span><span class="p">);</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">Fc</span><span class="p">(</span><span class="s2">&quot;No executor for &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">}</span><span class="nx">t</span><span class="p">.</span><span class="nx">j</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;e&quot;</span><span class="p">);</span></div><div class='line' id='LC73'><span class="kd">function</span> <span class="nx">Xd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">j</span><span class="p">(),</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span> <span class="k">instanceof</span> <span class="nx">Yd</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">Zd</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">$d</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">).</span><span class="nx">length</span><span class="p">)</span><span class="nx">ab</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="o">?</span><span class="s2">&quot;update&quot;</span><span class="o">:</span><span class="s2">&quot;add&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">b</span> <span class="k">instanceof</span> <span class="nx">ae</span><span class="p">)</span><span class="nx">be</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">jb</span><span class="p">(),</span><span class="nx">c</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">ce</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="o">:</span><span class="nx">ab</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">de</span><span class="p">(</span><span class="s2">&quot;Cannot &quot;</span><span class="o">+</span><span class="nx">f</span><span class="o">+</span><span class="s2">&quot; store: &quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;. Not auto schema generation mode.&quot;</span><span class="p">);}</span><span class="nx">t</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;TxStorage:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">j</span><span class="p">().</span><span class="nx">getName</span><span class="p">()};</span><span class="kd">function</span> <span class="nx">ee</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">Td</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="nx">C</span><span class="p">(</span><span class="nx">ee</span><span class="p">,</span><span class="nx">Td</span><span class="p">);</span><span class="nx">t</span><span class="o">=</span><span class="nx">ee</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.crud.DbOperator&quot;</span><span class="p">);</span></div><div class='line' id='LC74'><span class="nx">t</span><span class="p">.</span><span class="nx">count</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">||</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;too many arguments.&quot;</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">l</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">fe</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">[</span><span class="nx">l</span><span class="p">]))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;store name &quot;&#39;</span><span class="o">+</span><span class="nx">f</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;&quot; at &#39;</span><span class="o">+</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot; not found.&quot;</span><span class="p">);</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;countStores: &quot;</span><span class="o">+</span><span class="nx">W</span><span class="p">(</span><span class="nx">f</span><span class="p">));</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;count&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="nx">T</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">X</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">Ua</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">)},</span><span class="k">this</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="nx">l</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">l</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;store name &quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s1">&#39;&quot; not found.&#39;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">da</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s1">&#39;unique value &quot;&#39;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s1">&#39;&quot; must be boolean, but found &#39;</span><span class="o">+</span><span class="k">typeof</span> <span class="nx">d</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span></div><div class='line' id='LC75'><span class="nx">b</span><span class="p">,</span><span class="nx">B</span><span class="p">(</span><span class="nx">c</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">Lc</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;invalid key range: &quot;</span><span class="o">+</span><span class="nx">ge</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">n</span><span class="p">);</span><span class="nx">h</span><span class="o">=</span><span class="nx">Ic</span><span class="p">(</span><span class="nx">c</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">c</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;invalid key range: &quot;</span><span class="o">+</span><span class="nx">ge</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; of type &quot;</span><span class="o">+</span><span class="k">typeof</span> <span class="nx">c</span><span class="p">);</span><span class="nx">h</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">Lc</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;invalid key range: &quot;</span><span class="o">+</span><span class="nx">ge</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">n</span><span class="p">);</span><span class="nx">h</span><span class="o">=</span><span class="nx">Ic</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;key range must be  an object but found &quot;</span><span class="o">+</span><span class="nx">ge</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; of type &quot;</span><span class="o">+</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">);</span><span class="nx">h</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;invalid second argument for count &quot;&#39;</span><span class="o">+</span><span class="nx">ge</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;&quot; of type &#39;</span><span class="o">+</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">);</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;countKeyRange: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">g</span><span class="o">?</span><span class="nx">g</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">W</span><span class="p">(</span><span class="nx">h</span><span class="p">));</span><span class="nx">e</span><span class="o">=</span></div><div class='line' id='LC76'><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;count&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="nx">he</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="nx">T</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">X</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">Ga</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">h</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="o">!!</span><span class="nx">d</span><span class="p">)},</span><span class="k">this</span><span class="p">)}</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;Invalid store name or store names.&quot;</span><span class="p">);</span><span class="k">else</span> <span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;count method requires store name(s)&quot;</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">ie</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;count&quot;</span><span class="p">,</span><span class="nx">l</span><span class="p">),</span><span class="nx">Id</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="o">+=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="nx">c</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)}},</span><span class="k">this</span><span class="p">),</span><span class="nx">T</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">X</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">Ua</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">)},</span><span class="k">this</span><span class="p">);</span><span class="k">return</span> <span class="nx">e</span><span class="p">};</span></div><div class='line' id='LC77'><span class="nx">t</span><span class="p">.</span><span class="nx">get</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">vd</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">k</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">f</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">M</span><span class="p">())</span><span class="k">return</span> <span class="nx">Kd</span><span class="p">(</span><span class="s2">&quot;get&quot;</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">);</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;Store: &quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot; not found.&quot;</span><span class="p">);}</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">id</span><span class="p">;</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;getByKey: &quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;get&quot;</span><span class="p">,[</span><span class="nx">e</span><span class="p">]);</span><span class="nx">he</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="nx">T</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">X</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">Ya</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">)},</span><span class="k">this</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">f</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">M</span><span class="p">())</span><span class="k">return</span> <span class="nx">Kd</span><span class="p">(</span><span class="s2">&quot;get&quot;</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">);</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;Store name &quot;&#39;</span><span class="o">+</span><span class="nx">h</span><span class="o">+</span><span class="s1">&#39;&quot; not found.&#39;</span><span class="p">);}</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;getById: &quot;</span><span class="o">+</span><span class="nx">h</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;get&quot;</span><span class="p">,[</span><span class="nx">h</span><span class="p">]);</span><span class="nx">he</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span></div><div class='line' id='LC78'><span class="nx">T</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">X</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">Ya</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">l</span><span class="p">)},</span><span class="k">this</span><span class="p">)}</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;get require valid input arguments.&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">};</span></div><div class='line' id='LC79'><span class="nx">t</span><span class="p">.</span><span class="nx">keys</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">m</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">p</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">q</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">y</span><span class="p">(</span><span class="nx">q</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;store name must be a string, but &quot;</span><span class="o">+</span><span class="nx">q</span><span class="o">+</span><span class="s2">&quot; of type &quot;</span><span class="o">+</span><span class="k">typeof</span> <span class="nx">q</span><span class="o">+</span><span class="s2">&quot; is not.&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">M</span><span class="p">()){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">r</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;store name &quot;&#39;</span><span class="o">+</span><span class="nx">q</span><span class="o">+</span><span class="s1">&#39;&quot; not found.&#39;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">je</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">b</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;index &quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s1">&#39;&quot; not found in store &quot;&#39;</span><span class="o">+</span><span class="nx">q</span><span class="o">+</span><span class="s1">&#39;&quot;.&#39;</span><span class="p">);}</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">M</span><span class="p">()</span><span class="o">&amp;&amp;!</span><span class="nx">r</span><span class="p">)</span><span class="k">return</span> <span class="nx">Kd</span><span class="p">(</span><span class="s2">&quot;keys&quot;</span><span class="p">,[]);</span><span class="kd">var</span> <span class="nx">z</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">I</span><span class="o">=</span><span class="nx">Lc</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">I</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;invalid key range: &quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">I</span><span class="p">);</span><span class="nx">n</span><span class="o">=</span><span class="nx">Ic</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">ea</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;limit must be a number&quot;</span><span class="p">);</span><span class="nx">h</span><span class="o">=</span></div><div class='line' id='LC80'><span class="mi">100</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">ea</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="nx">l</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;offset must be a number&quot;</span><span class="p">);</span><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">f</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">da</span><span class="p">(</span><span class="nx">f</span><span class="p">))</span><span class="nx">m</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;reverse must be a boolean&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">g</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">da</span><span class="p">(</span><span class="nx">g</span><span class="p">))</span><span class="nx">p</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;unique must be a boolean&quot;</span><span class="p">);</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;keysByIndexKeyRange: &quot;</span><span class="o">+</span><span class="nx">q</span><span class="p">);</span><span class="nx">z</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;keys:iter:index&quot;</span><span class="p">,[</span><span class="nx">q</span><span class="p">]);</span><span class="nx">he</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">z</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="nx">T</span><span class="p">(</span><span class="nx">z</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">X</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">Z</span><span class="p">(</span><span class="nx">z</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">p</span><span class="p">)},</span><span class="k">this</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">I</span><span class="o">=</span><span class="nx">Lc</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;invalid key range: &quot;</span><span class="o">+</span><span class="nx">ge</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">I</span><span class="p">);</span><span class="nx">n</span><span class="o">=</span><span class="nx">Ic</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;invalid key range: &quot;</span><span class="o">+</span><span class="nx">ge</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; of type &quot;</span><span class="o">+</span></div><div class='line' id='LC81'><span class="k">typeof</span> <span class="nx">b</span><span class="p">);</span><span class="nx">n</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">ea</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;limit must be a number&quot;</span><span class="p">);</span><span class="nx">h</span><span class="o">=</span><span class="mi">100</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">ea</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="nx">l</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;offset must be a number&quot;</span><span class="p">);</span><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">da</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="nx">m</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;reverse must be a boolean&quot;</span><span class="p">);</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;keysByKeyRange: &quot;</span><span class="o">+</span><span class="nx">q</span><span class="p">);</span><span class="nx">z</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;keys&quot;</span><span class="p">,[</span><span class="nx">q</span><span class="p">]);</span><span class="nx">he</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">z</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="nx">T</span><span class="p">(</span><span class="nx">z</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">X</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">Z</span><span class="p">(</span><span class="nx">z</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)},</span><span class="k">this</span><span class="p">)}</span><span class="k">return</span> <span class="nx">z</span><span class="p">};</span></div><div class='line' id='LC82'><span class="nx">t</span><span class="p">.</span><span class="nx">B</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">n</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">m</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">p</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">M</span><span class="p">())</span><span class="k">return</span> <span class="nx">Kd</span><span class="p">(</span><span class="s2">&quot;get&quot;</span><span class="p">,[]);</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">pd</span><span class="p">(</span><span class="nx">m</span><span class="p">);}</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">||</span><span class="nx">v</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;too many input arguments&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;listByIds: &quot;</span><span class="o">+</span><span class="nx">m</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">q</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot; ids&quot;</span><span class="p">);</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;values:array&quot;</span><span class="p">,[</span><span class="nx">m</span><span class="p">]);</span><span class="nx">he</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="nx">T</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">X</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">Cb</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">q</span><span class="p">)},</span><span class="k">this</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">ke</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">r</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;index &quot;&#39;</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="s1">&#39;&quot; not found in store &quot;&#39;</span><span class="o">+</span><span class="nx">m</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">z</span><span class="o">=</span><span class="nx">Lc</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">z</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;invalid key range: &quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">z</span><span class="p">);</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="nx">Ic</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span></div><div class='line' id='LC83'><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">ea</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;limit must be a number.&quot;</span><span class="p">);</span><span class="k">else</span> <span class="nx">h</span><span class="o">=</span><span class="mi">100</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">ea</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="nx">l</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;offset must be a number.&quot;</span><span class="p">);</span><span class="k">else</span> <span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">da</span><span class="p">(</span><span class="nx">f</span><span class="p">))</span><span class="nx">n</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">f</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;reverse must be a boolean, but &quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">);</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;listByIndexKeyRange: &quot;</span><span class="o">+</span><span class="nx">m</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">r</span><span class="p">);</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;values:iter:index&quot;</span><span class="p">,[</span><span class="nx">m</span><span class="p">]);</span><span class="nx">he</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="nx">T</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">X</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">Z</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)},</span><span class="k">this</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">A</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">z</span><span class="o">=</span><span class="nx">Lc</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;invalid key range: &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">z</span><span class="p">);</span><span class="nx">A</span><span class="o">=</span><span class="nx">Ic</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s1">&#39;expect key range object, but found &quot;&#39;</span><span class="o">+</span></div><div class='line' id='LC84'><span class="nx">ge</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;&quot; of type &#39;</span><span class="o">+</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">ea</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;limit must be a number, but &quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot; is &quot;</span><span class="o">+</span><span class="k">typeof</span> <span class="nx">c</span><span class="p">);</span><span class="k">else</span> <span class="nx">h</span><span class="o">=</span><span class="mi">100</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">ea</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="nx">l</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;offset must be a number, but &quot;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot; is &quot;</span><span class="o">+</span><span class="k">typeof</span> <span class="nx">d</span><span class="p">);</span><span class="k">else</span> <span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">da</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;reverse must be a boolean, but &quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot; is &quot;</span><span class="o">+</span><span class="k">typeof</span> <span class="nx">e</span><span class="p">);</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,(</span><span class="nx">A</span><span class="o">?</span><span class="s2">&quot;listByKeyRange: &quot;</span><span class="o">:</span><span class="s2">&quot;listByStore: &quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">m</span><span class="p">);</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;values&quot;</span><span class="p">,[</span><span class="nx">m</span><span class="p">]);</span><span class="nx">he</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="nx">T</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">X</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">Z</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)},</span><span class="k">this</span><span class="p">)}}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="k">instanceof</span></div><div class='line' id='LC85'><span class="nx">vd</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="p">[],</span><span class="nx">I</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">z</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">z</span><span class="o">&lt;</span><span class="nx">I</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">z</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="nx">I</span><span class="p">[</span><span class="nx">z</span><span class="p">].</span><span class="nx">k</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">fe</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">L</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">M</span><span class="p">())</span><span class="k">return</span> <span class="nx">p</span><span class="o">=</span><span class="p">[],</span><span class="nx">p</span><span class="p">[</span><span class="nx">I</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">Kd</span><span class="p">(</span><span class="s2">&quot;get&quot;</span><span class="p">,</span><span class="nx">p</span><span class="p">);</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;Store: &quot;</span><span class="o">+</span><span class="nx">L</span><span class="o">+</span><span class="s2">&quot; not found.&quot;</span><span class="p">);}</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">Ja</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">L</span><span class="p">)</span><span class="o">||</span><span class="nx">p</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">L</span><span class="p">)}</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;listByKeys: &quot;</span><span class="o">+</span><span class="nx">W</span><span class="p">(</span><span class="nx">p</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">I</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot; keys&quot;</span><span class="p">);</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;values:keys&quot;</span><span class="p">,</span><span class="nx">p</span><span class="p">);</span><span class="nx">T</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">X</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">Db</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">I</span><span class="p">)},</span><span class="k">this</span><span class="p">)}</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;first argumentmust be array of ydn.db.Key, but &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot; of &quot;</span><span class="o">+</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot; found.&quot;</span><span class="p">);</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;first argument &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; is invalid.&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">g</span><span class="p">};</span></div><div class='line' id='LC86'><span class="nx">t</span><span class="p">.</span><span class="nx">add</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">B</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">y</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;store name &quot;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot; must be a string, but &quot;</span><span class="o">+</span><span class="k">typeof</span> <span class="nx">d</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">M</span><span class="p">())</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;store name &quot;&#39;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s1">&#39;&quot; not found.&#39;</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nx">Zd</span><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="nx">d</span><span class="p">});</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;Adding object store: &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">);</span><span class="nx">Xd</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">M</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">B</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">Zd</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">$d</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">)))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">Cc</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;store name &quot;&#39;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s1">&#39;&quot; not found.&#39;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;key must not be provided while the store uses in-line key.&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="p">.</span><span class="nx">keyPath</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC87'><span class="o">!</span><span class="nx">e</span><span class="p">.</span><span class="nx">b</span><span class="o">&amp;&amp;!</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;out-of-line key must be provided.&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;addObjects: &quot;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot; objects&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="nx">le</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]);</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;add:array&quot;</span><span class="p">,[</span><span class="nx">d</span><span class="p">],</span><span class="nx">K</span><span class="p">);</span><span class="nx">T</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">X</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">ub</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="k">this</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">ka</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">aa</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">me</span><span class="p">(</span><span class="nx">ne</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">j</span><span class="p">(),</span><span class="nx">e</span><span class="p">.</span><span class="nx">getName</span><span class="p">(),</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">j</span><span class="p">().</span><span class="nx">I</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="k">this</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;store: &quot;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot; key: &quot;</span><span class="o">+</span><span class="nx">oe</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;addObject: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">),</span><span class="nx">le</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;add&quot;</span><span class="p">,[</span><span class="nx">d</span><span class="p">],</span><span class="nx">K</span><span class="p">),</span><span class="nx">T</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">X</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">tb</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="k">this</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">ka</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">aa</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">pe</span><span class="p">(</span><span class="nx">ne</span><span class="p">,</span></div><div class='line' id='LC88'><span class="k">this</span><span class="p">.</span><span class="nx">j</span><span class="p">(),</span><span class="nx">e</span><span class="p">.</span><span class="nx">getName</span><span class="p">(),</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">j</span><span class="p">().</span><span class="nx">I</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="k">this</span><span class="p">);</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;record must be an object or array list of objects, but &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; of type &quot;</span><span class="o">+</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">+</span><span class="s2">&quot; found.&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">f</span><span class="p">};</span><span class="kd">function</span> <span class="nx">qe</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">y</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">B</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">name</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">y</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;store name must be a string&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">M</span><span class="p">())</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">pd</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="nx">Zd</span><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="nx">c</span><span class="p">});</span><span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;Adding object store: &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">);</span><span class="nx">Xd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">M</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">B</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">Zd</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">$d</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">Cc</span><span class="p">(</span><span class="nx">e</span><span class="p">);}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">pd</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span></div><div class='line' id='LC89'><span class="nx">t</span><span class="p">.</span><span class="nx">load</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="s2">&quot;,&quot;</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">qe</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">).</span><span class="nx">getName</span><span class="p">();</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">kc</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">$</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">l</span><span class="p">){</span><span class="nx">X</span><span class="p">(</span><span class="nx">f</span><span class="p">).</span><span class="nx">Fb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">)},[</span><span class="nx">e</span><span class="p">],</span><span class="nx">K</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span></div><div class='line' id='LC90'><span class="nx">t</span><span class="p">.</span><span class="nx">put</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">vd</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">k</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">h</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;store &quot;&#39;</span><span class="o">+</span><span class="nx">g</span><span class="o">+</span><span class="s1">&#39;&quot; not found.&#39;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">oe</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">l</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">!=</span><span class="nx">M</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">id</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;Inline key must be &quot;</span><span class="o">+</span><span class="nx">f</span><span class="o">+</span><span class="s2">&quot; but &quot;</span><span class="o">+</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot; found.&quot;</span><span class="p">);}</span><span class="k">else</span> <span class="nx">re</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">id</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">id</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;too many arguments&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;record values required&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">){</span><span class="nx">l</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">k</span><span class="p">;</span><span class="o">-</span><span class="mi">1</span><span class="o">==</span><span class="nx">Ja</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">l</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">l</span><span class="p">);</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span></div><div class='line' id='LC91'><span class="nx">l</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">p</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;store &quot;&#39;</span><span class="o">+</span><span class="nx">l</span><span class="o">+</span><span class="s1">&#39;&quot; not found.&#39;</span><span class="p">);</span><span class="nx">p</span><span class="p">.</span><span class="nx">keyPath</span><span class="o">&amp;&amp;</span><span class="nx">re</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">m</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">n</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">id</span><span class="p">)}</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;putByKeys: to &quot;</span><span class="o">+</span><span class="nx">W</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot; objects&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">le</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">m</span><span class="p">[</span><span class="nx">g</span><span class="p">]);</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;put:keys&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">K</span><span class="p">);</span><span class="nx">he</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="nx">T</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">X</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">Eb</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">n</span><span class="p">)},</span><span class="k">this</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nx">B</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">qe</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">q</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">getName</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">keyPath</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;key must not be provided while the store uses in-line key.&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">p</span><span class="p">.</span><span class="nx">keyPath</span><span class="o">&amp;&amp;!</span><span class="nx">p</span><span class="p">.</span><span class="nx">b</span><span class="o">&amp;&amp;!</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;out-of-line key must be provided.&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">z</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span></div><div class='line' id='LC92'><span class="s2">&quot;putObjects: &quot;</span><span class="o">+</span><span class="nx">q</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot; objects&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">le</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">r</span><span class="p">[</span><span class="nx">g</span><span class="p">]);</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;put:array&quot;</span><span class="p">,[</span><span class="nx">q</span><span class="p">],</span><span class="nx">K</span><span class="p">);</span><span class="nx">he</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="nx">T</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">X</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">Hb</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">z</span><span class="p">)},</span><span class="k">this</span><span class="p">);</span><span class="nx">p</span><span class="p">.</span><span class="nx">ka</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">aa</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">me</span><span class="p">(</span><span class="nx">se</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">j</span><span class="p">(),</span><span class="nx">q</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">r</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">j</span><span class="p">().</span><span class="nx">I</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="k">this</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">I</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;putObject: &quot;</span><span class="o">+</span><span class="nx">q</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">I</span><span class="p">);</span><span class="nx">le</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">A</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;put&quot;</span><span class="p">,[</span><span class="nx">q</span><span class="p">],</span><span class="nx">K</span><span class="p">);</span><span class="nx">he</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="nx">T</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">X</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">Gb</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">I</span><span class="p">)},</span><span class="k">this</span><span class="p">);</span><span class="nx">p</span><span class="p">.</span><span class="nx">ka</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">aa</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">pe</span><span class="p">(</span><span class="nx">se</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">j</span><span class="p">(),</span><span class="nx">q</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">A</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">j</span><span class="p">().</span><span class="nx">I</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="k">this</span><span class="p">)}</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;put record value must be Object or array of Objects&quot;</span><span class="p">);</span></div><div class='line' id='LC93'><span class="p">}</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;the first argument of put must be store name, store schema or array of keys.&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">};</span></div><div class='line' id='LC94'><span class="nx">t</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;too many input arguments&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="nx">c</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;store name &quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s1">&#39;&quot; not found.&#39;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">Ic</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">===</span><span class="nx">e</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;clear method requires a valid non-null KeyRange object.&quot;</span><span class="p">);</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;clearByKeyRange: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">W</span><span class="p">(</span><span class="nx">e</span><span class="p">));</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;clear&quot;</span><span class="p">,[</span><span class="nx">a</span><span class="p">],</span><span class="nx">K</span><span class="p">);</span><span class="nx">he</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,[</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">]);</span><span class="nx">T</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">X</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">xb</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">)},</span><span class="k">this</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;clear method requires a valid KeyRange object as second argument, but found &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; of type &quot;</span><span class="o">+</span></div><div class='line' id='LC95'><span class="k">typeof</span> <span class="nx">b</span><span class="p">);</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;clearByStore: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;clear&quot;</span><span class="p">,[</span><span class="nx">a</span><span class="p">],</span><span class="nx">K</span><span class="p">);</span><span class="nx">T</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">X</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">Ta</span><span class="p">(</span><span class="nx">d</span><span class="p">,[</span><span class="nx">a</span><span class="p">])},</span><span class="k">this</span><span class="p">)}}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">])){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="nx">ie</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">);</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;clearByStores: &quot;</span><span class="o">+</span><span class="nx">W</span><span class="p">(</span><span class="nx">f</span><span class="p">));</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;clear&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">K</span><span class="p">);</span><span class="nx">T</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">X</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">Ta</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">)},</span><span class="k">this</span><span class="p">)}</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;first argument &quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s1">&#39;&quot; is invalid.&#39;</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">};</span></div><div class='line' id='LC96'><span class="nx">t</span><span class="p">.</span><span class="nx">ob</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;store name &quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s1">&#39;&quot; not found.&#39;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">je</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">f</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;index: &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; not found in &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">||</span><span class="kc">null</span><span class="o">===</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">Ic</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;removeByIndexKeyRange: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;rm:iter:index&quot;</span><span class="p">,[</span><span class="nx">a</span><span class="p">],</span><span class="nx">K</span><span class="p">);</span><span class="nx">T</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">X</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">Ib</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">getName</span><span class="p">(),</span><span class="nx">g</span><span class="p">)},</span><span class="k">this</span><span class="p">)}</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;key range &quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s1">&#39; is invalid type &quot;&#39;</span><span class="o">+</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">+</span><span class="s1">&#39;&quot;.&#39;</span><span class="p">);}</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;index name &quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s1">&#39;&quot; must be a string, but &#39;</span><span class="o">+</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">+</span></div><div class='line' id='LC97'><span class="s2">&quot; found.&quot;</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="nx">ea</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="nx">x</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="nx">b</span> <span class="k">instanceof</span> <span class="nb">Date</span><span class="p">)</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;removeById: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;rm&quot;</span><span class="p">,[</span><span class="nx">a</span><span class="p">],</span><span class="nx">K</span><span class="p">),</span><span class="nx">he</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">,[</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">]),</span><span class="nx">T</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">X</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">gb</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)},</span><span class="k">this</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">ka</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">aa</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">pe</span><span class="p">(</span><span class="nx">te</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">j</span><span class="p">(),</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">j</span><span class="p">().</span><span class="nx">I</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="k">this</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="nx">g</span><span class="o">=</span><span class="nx">Ic</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;removeByKeyRange: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">W</span><span class="p">(</span><span class="nx">g</span><span class="p">)),</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;rm:iter&quot;</span><span class="p">,[</span><span class="nx">a</span><span class="p">],</span><span class="nx">K</span><span class="p">),</span><span class="nx">he</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">,[</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">]),</span><span class="nx">T</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">X</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">hb</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">)},</span><span class="k">this</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">ka</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">aa</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">me</span><span class="p">(</span><span class="nx">te</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">j</span><span class="p">(),</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">j</span><span class="p">().</span><span class="nx">I</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="k">this</span><span class="p">);</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;Invalid key or key range &quot;&#39;</span><span class="o">+</span></div><div class='line' id='LC98'><span class="nx">b</span><span class="o">+</span><span class="s1">&#39;&quot; of type &#39;</span><span class="o">+</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">);}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">vd</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">k</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;rm&quot;</span><span class="p">,[</span><span class="nx">h</span><span class="p">],</span><span class="nx">K</span><span class="p">);</span><span class="nx">he</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">,[</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="p">]);</span><span class="nx">T</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">X</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">gb</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="p">)},</span><span class="k">this</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="nx">c</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="k">instanceof</span> <span class="nx">vd</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;key list element at &quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot; of &quot;</span><span class="o">+</span><span class="nx">l</span><span class="o">+</span><span class="s1">&#39; must be yn.db.Key, but &quot;&#39;</span><span class="o">+</span><span class="nx">ge</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">])</span><span class="o">+</span><span class="s1">&#39;&quot; (&#39;</span><span class="o">+</span><span class="nx">ca</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">])</span><span class="o">+</span><span class="s2">&quot;) is not ydn.db.Key.&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">k</span><span class="p">;</span><span class="o">-</span><span class="mi">1</span><span class="o">==</span><span class="nx">Ja</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">n</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">n</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;at least one valid key required in key list &quot;&#39;</span><span class="o">+</span><span class="nx">ge</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;rm:keys&quot;</span><span class="p">,</span></div><div class='line' id='LC99'><span class="nx">c</span><span class="p">,</span><span class="nx">K</span><span class="p">);</span><span class="nx">T</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">X</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">Jb</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="k">this</span><span class="p">)}</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;first argument requires store name, key (ydn.db.Key) or list of keys (array) , but &quot;&#39;</span><span class="o">+</span><span class="nx">ge</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;&quot; (&#39;</span><span class="o">+</span><span class="nx">ca</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;) found.&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;DbOperator:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">j</span><span class="p">().</span><span class="nx">getName</span><span class="p">()};</span><span class="kd">function</span> <span class="nx">we</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">Td</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="nx">C</span><span class="p">(</span><span class="nx">we</span><span class="p">,</span><span class="nx">ee</span><span class="p">);</span><span class="nx">t</span><span class="o">=</span><span class="nx">we</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.core.DbOperator&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">get</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">P</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;store &quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s1">&#39;&quot; not found.&#39;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">F</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">ke</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;index &quot;&#39;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s1">&#39;&quot; not found in store &quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s1">&#39;&quot;.&#39;</span><span class="p">);</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;getByIterator:&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;get:iter&quot;</span><span class="p">,[</span><span class="nx">c</span><span class="p">]);</span><span class="nx">T</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">xe</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="mi">1</span><span class="p">)},</span><span class="k">this</span><span class="p">);</span><span class="k">return</span> <span class="nx">f</span><span class="p">}</span><span class="k">return</span> <span class="nx">we</span><span class="p">.</span><span class="nx">p</span><span class="p">.</span><span class="nx">get</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)};</span></div><div class='line' id='LC100'><span class="nx">t</span><span class="p">.</span><span class="nx">keys</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">P</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="mi">100</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">ea</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">h</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;limit must be a positive value, but &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">);}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;limit must be a number,  but &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;offset must not be specified&quot;</span><span class="p">);</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;keysByIterator:&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;keys:iter&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">stores</span><span class="p">());</span><span class="nx">T</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">?</span><span class="nx">xe</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">)</span><span class="o">:</span><span class="nx">xe</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">)},</span><span class="k">this</span><span class="p">);</span><span class="k">return</span> <span class="nx">l</span><span class="p">}</span><span class="k">return</span> <span class="nx">we</span><span class="p">.</span><span class="nx">p</span><span class="p">.</span><span class="nx">keys</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">)};</span></div><div class='line' id='LC101'><span class="nx">t</span><span class="p">.</span><span class="nx">count</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">P</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;too many arguments.&quot;</span><span class="p">);</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;countIterator:&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;count&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">stores</span><span class="p">());</span><span class="nx">T</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">xe</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="k">this</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="k">return</span> <span class="nx">we</span><span class="p">.</span><span class="nx">p</span><span class="p">.</span><span class="nx">count</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)};</span></div><div class='line' id='LC102'><span class="nx">t</span><span class="p">.</span><span class="nx">B</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">P</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">ea</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">g</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;limit must be a positive value, but &quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">);}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;limit must be a number, but &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;offset must not be specified&quot;</span><span class="p">);</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;listByIterator:&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;values:iter&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">stores</span><span class="p">());</span><span class="nx">T</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="o">?</span><span class="nx">xe</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">)</span><span class="o">:</span><span class="nx">xe</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">)},</span><span class="k">this</span><span class="p">);</span><span class="k">return</span> <span class="nx">h</span><span class="p">}</span><span class="k">return</span> <span class="nx">we</span><span class="p">.</span><span class="nx">p</span><span class="p">.</span><span class="nx">B</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">)};</span></div><div class='line' id='LC103'><span class="nx">t</span><span class="p">.</span><span class="nx">hc</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">kc</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">w</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;Iterator argument must be an array.&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="k">instanceof</span> <span class="nx">P</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;Iterator at &quot;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot; must be cursor range iterator.&quot;</span><span class="p">);}</span><span class="kd">var</span> <span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">stores</span><span class="p">(),</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">Ja</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">[</span><span class="nx">h</span><span class="p">])</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">h</span><span class="p">]);</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="o">+</span><span class="s2">&quot;: scan for &quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot; iterators on &quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">);</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">$</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span></div><div class='line' id='LC104'><span class="nx">q</span><span class="o">=</span><span class="nx">X</span><span class="p">(</span><span class="nx">l</span><span class="p">).</span><span class="nx">b</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">p</span><span class="p">.</span><span class="nx">a</span><span class="p">);</span><span class="nx">p</span><span class="p">.</span><span class="nx">load</span><span class="p">(</span><span class="nx">q</span><span class="p">);</span><span class="nx">q</span><span class="p">.</span><span class="nx">s</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="nx">q</span><span class="p">.</span><span class="nx">l</span><span class="o">=</span><span class="nx">ma</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">S</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">q</span><span class="p">;</span><span class="nx">E</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">}</span><span class="nx">L</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">}</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">S</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">Dd</span><span class="p">(</span><span class="nx">S</span><span class="p">[</span><span class="nx">b</span><span class="p">]);</span><span class="nx">Pa</span><span class="p">(</span><span class="nx">S</span><span class="p">);</span><span class="nx">G</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">A</span><span class="o">+</span><span class="s2">&quot; error&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">I</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">cd</span><span class="p">;</span><span class="nx">za</span><span class="o">++</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">za</span><span class="o">===</span><span class="nx">L</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">E</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">m</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">S</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">C</span><span class="p">(),</span><span class="nx">n</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">ra</span><span class="p">();</span><span class="nx">U</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">ra</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">e</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">b</span><span class="o">?</span><span class="nx">g</span><span class="o">:</span><span class="nx">n</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">b</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">n</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">q</span><span class="p">;</span><span class="nx">q</span><span class="o">=</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">hd</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">U</span><span class="p">,</span><span class="nx">ra</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">(</span><span class="nx">U</span><span class="p">,</span><span class="nx">ra</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="p">[];</span><span class="nx">m</span><span class="o">=</span><span class="p">[];</span><span class="nx">g</span><span class="o">=</span><span class="p">[];</span><span class="nx">n</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="nx">q</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">r</span><span class="o">&lt;</span><span class="nx">q</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">r</span><span class="o">++</span><span class="p">)</span><span class="o">!</span><span class="mi">0</span><span class="o">===</span><span class="nx">q</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">?</span><span class="nx">g</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="o">:!</span><span class="mi">1</span><span class="o">===</span><span class="nx">q</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">?</span><span class="nx">n</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">=!</span><span class="mi">0</span><span class="o">:</span><span class="nx">m</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">=</span><span class="nx">q</span><span class="p">[</span><span class="nx">r</span><span class="p">];</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">===</span><span class="nx">q</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="p">[];</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">q</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="nx">q</span><span class="p">)){</span><span class="nx">f</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;advance&quot;</span><span class="p">,</span><span class="s2">&quot;continue&quot;</span><span class="p">,</span><span class="s2">&quot;continuePrimary&quot;</span><span class="p">,</span></div><div class='line' id='LC105'><span class="s2">&quot;restart&quot;</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">r</span> <span class="k">in</span> <span class="nx">q</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">Ja</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">r</span><span class="p">)))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">Ec</span><span class="p">(</span><span class="s1">&#39;Unknown attribute &quot;&#39;</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="s1">&#39;&quot; in cursor advancement object&#39;</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">continuePrimary</span><span class="o">||</span><span class="p">[];</span><span class="nx">m</span><span class="o">=</span><span class="nx">q</span><span class="p">[</span><span class="s2">&quot;continue&quot;</span><span class="p">]</span><span class="o">||</span><span class="p">[];</span><span class="nx">g</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">advance</span><span class="o">||</span><span class="p">[];</span><span class="nx">n</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">restart</span><span class="o">||</span><span class="p">[]}</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">ye</span><span class="p">(</span><span class="s2">&quot;scan callback output&quot;</span><span class="p">);</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">r</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">r</span><span class="o">++</span><span class="p">)</span><span class="nx">v</span><span class="p">(</span><span class="nx">E</span><span class="p">[</span><span class="nx">r</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="nx">za</span><span class="o">=</span><span class="nx">q</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">r</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">r</span><span class="o">++</span><span class="p">)</span><span class="kc">null</span><span class="o">!=</span><span class="nx">f</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">||</span><span class="nx">v</span><span class="p">(</span><span class="nx">m</span><span class="p">[</span><span class="nx">r</span><span class="p">])</span><span class="o">||</span><span class="kc">null</span><span class="o">!=</span><span class="nx">n</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">||</span><span class="kc">null</span><span class="o">!=</span><span class="nx">g</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">||</span><span class="nx">za</span><span class="o">++</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">r</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">r</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">f</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">||</span><span class="nx">v</span><span class="p">(</span><span class="nx">m</span><span class="p">[</span><span class="nx">r</span><span class="p">])</span><span class="o">||</span><span class="kc">null</span><span class="o">!=</span><span class="nx">n</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">||</span><span class="kc">null</span><span class="o">!=</span><span class="nx">g</span><span class="p">[</span><span class="nx">r</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">z</span><span class="o">=</span><span class="nx">E</span><span class="p">[</span><span class="nx">r</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">v</span><span class="p">(</span><span class="nx">z</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">ye</span><span class="p">(</span><span class="nx">r</span><span class="o">+</span><span class="s2">&quot; is not an iterator.&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">z</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">z</span><span class="p">],</span><span class="nx">Eb</span><span class="o">=</span></div><div class='line' id='LC106'><span class="nx">S</span><span class="p">[</span><span class="nx">r</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">U</span><span class="p">[</span><span class="nx">r</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">ve</span><span class="o">=</span><span class="nx">r</span><span class="o">+</span><span class="s2">&quot;/&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">g</span><span class="p">[</span><span class="nx">r</span><span class="p">])</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">fd</span><span class="p">(</span><span class="nx">Eb</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">ve</span><span class="o">+</span><span class="s2">&quot; must not advance &quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot; steps&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">m</span><span class="p">[</span><span class="nx">r</span><span class="p">]))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">fd</span><span class="p">(</span><span class="nx">Eb</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">ve</span><span class="o">+</span><span class="s2">&quot; must not continue to key &quot;</span><span class="o">+</span><span class="nx">m</span><span class="p">[</span><span class="nx">r</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">f</span><span class="p">[</span><span class="nx">r</span><span class="p">])</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">fd</span><span class="p">(</span><span class="nx">Eb</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">ve</span><span class="o">+</span><span class="s2">&quot; must not continue to primary key &quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">[</span><span class="nx">r</span><span class="p">]);}</span><span class="nx">U</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="nx">ra</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">n</span><span class="p">[</span><span class="nx">r</span><span class="p">])</span><span class="nx">Ed</span><span class="p">(</span><span class="nx">Eb</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">m</span><span class="p">[</span><span class="nx">r</span><span class="p">]))</span><span class="nx">Eb</span><span class="p">.</span><span class="nx">Ea</span><span class="p">(</span><span class="nx">m</span><span class="p">[</span><span class="nx">r</span><span class="p">]);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">f</span><span class="p">[</span><span class="nx">r</span><span class="p">])</span><span class="nx">Eb</span><span class="p">.</span><span class="nx">Ra</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">r</span><span class="p">]);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">g</span><span class="p">[</span><span class="nx">r</span><span class="p">])</span><span class="nx">Eb</span><span class="p">.</span><span class="nx">advance</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">cd</span><span class="p">(</span><span class="nx">z</span><span class="o">+</span><span class="s2">&quot;: has no action&quot;</span><span class="p">);</span><span class="nx">q</span><span class="o">++</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">q</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">r</span><span class="o">&lt;</span><span class="nx">S</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">r</span><span class="o">++</span><span class="p">)</span><span class="nx">Dd</span><span class="p">(</span><span class="nx">S</span><span class="p">[</span><span class="nx">r</span><span class="p">]);</span><span class="nx">I</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">Pa</span><span class="p">(</span><span class="nx">S</span><span class="p">);</span><span class="nx">G</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span></div><div class='line' id='LC107'><span class="s2">&quot;success &quot;</span><span class="o">+</span><span class="nx">A</span><span class="p">);</span><span class="nx">d</span><span class="p">(</span><span class="k">void</span> <span class="mi">0</span><span class="p">)}}}</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot; scanning&quot;</span><span class="p">;</span><span class="nx">H</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">A</span><span class="p">);</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">L</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="p">[],</span><span class="nx">U</span><span class="o">=</span><span class="p">[],</span><span class="nx">ra</span><span class="o">=</span><span class="p">[],</span><span class="nx">S</span><span class="o">=</span><span class="p">[],</span><span class="nx">za</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">hd</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">f</span><span class="p">()})</span><span class="o">||</span><span class="nx">f</span><span class="p">()</span><span class="o">:</span><span class="nx">f</span><span class="p">()},</span><span class="nx">f</span><span class="p">,</span><span class="nx">nc</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">};</span></div><div class='line' id='LC108'><span class="nx">t</span><span class="p">.</span><span class="nx">gc</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">b</span> <span class="k">instanceof</span> <span class="nx">P</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;Second argument must be cursor range iterator.&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">Y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">a</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;Store &quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">a</span><span class="o">+</span><span class="s1">&#39;&quot; not found.&#39;</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="nx">nc</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;open&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">stores</span><span class="p">(),</span><span class="nx">c</span><span class="p">);</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;open:&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">);</span><span class="nx">T</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">V</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="nx">G</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="o">+</span><span class="s2">&quot; iterating &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">);</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">X</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">b</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">a</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">load</span><span class="p">(</span><span class="nx">l</span><span class="p">);</span><span class="nx">l</span><span class="p">.</span><span class="nx">s</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">R</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)};</span><span class="nx">l</span><span class="p">.</span><span class="nx">l</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">l</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="nx">Ed</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span><span class="o">:</span><span class="nx">B</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?!</span><span class="mi">0</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">restart</span><span class="o">?</span><span class="nx">Ed</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="s2">&quot;continue&quot;</span><span class="p">],</span><span class="nx">b</span><span class="p">.</span><span class="nx">continuePrimary</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="p">[</span><span class="s2">&quot;continue&quot;</span><span class="p">]</span><span class="o">?</span><span class="nx">l</span><span class="p">.</span><span class="nx">Ea</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="s2">&quot;continue&quot;</span><span class="p">])</span><span class="o">:</span></div><div class='line' id='LC109'><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">continuePrimary</span><span class="o">?</span><span class="nx">l</span><span class="p">.</span><span class="nx">Ra</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">continuePrimary</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">Dd</span><span class="p">(</span><span class="nx">l</span><span class="p">),</span><span class="nx">R</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">))</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">advance</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">Dd</span><span class="p">(</span><span class="nx">l</span><span class="p">),</span><span class="nx">R</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">))}},</span><span class="k">this</span><span class="p">);</span><span class="k">return</span> <span class="nx">f</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">map</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">stores</span><span class="p">(),</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;Store &quot;&#39;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s1">&#39;&quot; not found.&#39;</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="k">new</span> <span class="nx">kc</span><span class="p">;</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;map:&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">$</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">H</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot; iterating &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">X</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">b</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">load</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="nx">n</span><span class="p">.</span><span class="nx">s</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)};</span><span class="nx">n</span><span class="p">.</span><span class="nx">l</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kc">null</span><span class="o">!=</span><span class="nx">c</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">n</span><span class="p">.</span><span class="nx">C</span><span class="p">()</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">n</span><span class="p">.</span><span class="nx">ra</span><span class="p">(),</span><span class="nx">b</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">n</span><span class="p">.</span><span class="nx">advance</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">f</span><span class="p">(</span><span class="k">void</span> <span class="mi">0</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">)}},</span><span class="nx">d</span><span class="p">,</span><span class="nx">nc</span><span class="p">);</span><span class="k">return</span> <span class="nx">e</span><span class="p">};</span></div><div class='line' id='LC110'><span class="nx">t</span><span class="p">.</span><span class="nx">nb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">stores</span><span class="p">(),</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">g</span><span class="p">];</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">f</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;Store &quot;&#39;</span><span class="o">+</span><span class="nx">f</span><span class="o">+</span><span class="s1">&#39;&quot; not found.&#39;</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="k">new</span> <span class="nx">kc</span><span class="p">;</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="nx">ze</span><span class="p">(</span><span class="nx">W</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="o">:</span><span class="nx">c</span><span class="p">;</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;reduce:&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">$</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">X</span><span class="p">(</span><span class="nx">d</span><span class="p">).</span><span class="nx">b</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">load</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">s</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)};</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">l</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kc">null</span><span class="o">!=</span><span class="nx">c</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">C</span><span class="p">()</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">ra</span><span class="p">(),</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">q</span><span class="o">++</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">advance</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span><span class="o">:</span><span class="nx">f</span><span class="p">(</span><span class="nx">h</span><span class="p">)}},</span><span class="nx">e</span><span class="p">,</span><span class="nx">nc</span><span class="p">);</span><span class="k">return</span> <span class="nx">f</span><span class="p">};</span></div><div class='line' id='LC111'><span class="kd">function</span> <span class="nx">xe</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">V</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">h</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;ByIterator &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="o">+=</span><span class="s2">&quot; limit &quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">);</span><span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">l</span><span class="p">);</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">X</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">b</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">a</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">load</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="nx">n</span><span class="p">.</span><span class="nx">s</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">Dd</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="nx">R</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)};</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">p</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">n</span><span class="p">.</span><span class="nx">l</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="nx">p</span><span class="o">||</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot; starting&quot;</span><span class="p">),</span><span class="nx">p</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">e</span><span class="o">?</span><span class="nx">n</span><span class="p">.</span><span class="nx">C</span><span class="p">()</span><span class="o">:</span><span class="nx">g</span><span class="p">;</span><span class="nx">m</span><span class="o">++</span><span class="p">;</span><span class="mi">1</span><span class="o">==</span><span class="nx">b</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">:</span><span class="mi">2</span><span class="o">==</span><span class="nx">b</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">C</span><span class="p">())</span><span class="o">:</span><span class="mi">3</span><span class="o">==</span><span class="nx">b</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">g</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">C</span><span class="p">()])</span><span class="o">:</span><span class="mi">6</span><span class="o">!=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">b</span><span class="o">?</span><span class="nx">h</span><span class="o">:</span><span class="nx">n</span><span class="p">.</span><span class="nx">ra</span><span class="p">());</span><span class="mi">5</span><span class="o">==</span><span class="nx">b</span><span class="o">?</span><span class="p">(</span><span class="nx">Dd</span><span class="p">(</span><span class="nx">n</span><span class="p">),</span><span class="nx">R</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">]))</span><span class="o">:</span><span class="mi">6</span><span class="o">==</span><span class="nx">b</span><span class="o">||!</span><span class="nx">v</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">||</span><span class="nx">m</span><span class="o">&lt;</span><span class="nx">e</span><span class="o">?</span><span class="nx">n</span><span class="p">.</span><span class="nx">Ea</span><span class="p">()</span><span class="o">:</span><span class="p">(</span><span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;success:&quot;</span><span class="o">+</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot; yields &quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot; records&quot;</span><span class="p">),</span><span class="nx">Dd</span><span class="p">(</span><span class="nx">n</span><span class="p">),</span><span class="nx">R</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">))}</span><span class="k">else</span> <span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;success:&quot;</span><span class="o">+</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot; yields &quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span></div><div class='line' id='LC112'><span class="s2">&quot; records&quot;</span><span class="p">),</span><span class="nx">Dd</span><span class="p">(</span><span class="nx">n</span><span class="p">),</span><span class="nx">R</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">5</span><span class="o">==</span><span class="nx">b</span><span class="o">?</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="mi">6</span><span class="o">==</span><span class="nx">b</span><span class="o">?</span><span class="nx">m</span><span class="o">:</span><span class="nx">f</span><span class="p">)}};</span><span class="kd">function</span> <span class="nx">Ae</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="nx">Ae</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Ab</span><span class="o">=</span><span class="nx">k</span><span class="p">();</span><span class="nx">Ae</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">b</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">Ae</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">d</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">Ae</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">preventDefault</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=!</span><span class="mi">1</span><span class="p">};</span><span class="kd">var</span> <span class="nx">ne</span><span class="o">=</span><span class="s2">&quot;created&quot;</span><span class="p">,</span><span class="nx">te</span><span class="o">=</span><span class="s2">&quot;deleted&quot;</span><span class="p">,</span><span class="nx">se</span><span class="o">=</span><span class="s2">&quot;updated&quot;</span><span class="p">;</span><span class="kd">function</span> <span class="nx">Be</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">Ae</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Be</span><span class="p">,</span><span class="nx">Ae</span><span class="p">);</span><span class="nx">Be</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;k&quot;</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Ce</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">Ae</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">version</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ic</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">Zb</span><span class="o">=</span><span class="nx">e</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Ce</span><span class="p">,</span><span class="nx">Be</span><span class="p">);</span><span class="nx">t</span><span class="o">=</span><span class="nx">Ce</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;ReadyEvent&quot;</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">version</span><span class="o">=</span><span class="kc">NaN</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">ic</span><span class="o">=</span><span class="kc">NaN</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">Zb</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">Oc</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;version&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">tc</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;ic&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">sc</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;Zb&quot;</span><span class="p">);</span><span class="kd">function</span> <span class="nx">De</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">Ae</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="o">||</span><span class="s2">&quot;error&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">error</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">De</span><span class="p">,</span><span class="nx">Be</span><span class="p">);</span><span class="nx">De</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">error</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">error</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)};</span><span class="nx">De</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;ErrorEvent&quot;</span><span class="p">;</span></div><div class='line' id='LC113'><span class="nx">De</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">error</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">De</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;error&quot;</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Ee</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">De</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;fail&quot;</span><span class="p">)}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Ee</span><span class="p">,</span><span class="nx">De</span><span class="p">);</span><span class="nx">Ee</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;FailEvent&quot;</span><span class="p">;</span><span class="kd">function</span> <span class="nx">pe</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">Ae</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">k</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">key</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="nx">e</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">pe</span><span class="p">,</span><span class="nx">Be</span><span class="p">);</span><span class="nx">pe</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;RecordEvent&quot;</span><span class="p">;</span><span class="nx">pe</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;key&quot;</span><span class="p">);</span><span class="nx">pe</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">);</span><span class="kd">function</span> <span class="nx">me</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">Ae</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">k</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">keys</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">B</span><span class="o">=</span><span class="nx">e</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">me</span><span class="p">,</span><span class="nx">Be</span><span class="p">);</span><span class="nx">me</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;StoreEvent&quot;</span><span class="p">;</span><span class="nx">me</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ua</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;keys&quot;</span><span class="p">);</span><span class="nx">me</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Za</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;B&quot;</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Fe</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">v</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;, &quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;!</span><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;index keyPath for &quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot; must be a string or array, but &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; is &quot;</span><span class="o">+</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nb">Object</span><span class="p">.</span><span class="nx">freeze</span><span class="o">&amp;&amp;</span><span class="nb">Object</span><span class="p">.</span><span class="nx">freeze</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="o">!</span><span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">keyPath</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">Ge</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;type invalid in index: &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;composite key for store &quot;&#39;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">+</span><span class="s1">&#39;&quot; must not specified type&#39;</span><span class="p">);}</span><span class="k">this</span><span class="p">.</span><span class="nx">unique</span><span class="o">=!!</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">multiEntry</span><span class="o">=!!</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="o">=</span><span class="nx">y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="o">?</span></div><div class='line' id='LC114'><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">:</span><span class="nx">He</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="nx">y</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="nx">Fa</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">multiEntry</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="o">||</span><span class="kc">null</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Ie</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">)){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">qc</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">[</span><span class="nx">d</span><span class="p">]);</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">}</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="k">return</span> <span class="nx">qc</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">Je</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="o">?</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]]</span><span class="o">=</span><span class="nx">c</span><span class="o">:</span><span class="nx">B</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]])</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]]</span><span class="o">=</span><span class="p">{})}</span><span class="kd">var</span> <span class="nx">He</span><span class="o">=</span><span class="s2">&quot;TEXT&quot;</span><span class="p">;</span></div><div class='line' id='LC115'><span class="kd">function</span> <span class="nx">Oc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;DATE&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nb">Date</span><span class="p">)</span><span class="k">return</span><span class="o">+</span><span class="nx">a</span><span class="p">}</span><span class="k">else</span> <span class="k">return</span> <span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">sc</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">Ke</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;DATE&quot;</span><span class="o">==</span><span class="nx">b</span><span class="o">?</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">vc</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">Le</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;BLOB&quot;</span><span class="p">,</span><span class="s2">&quot;DATE&quot;</span><span class="p">,</span><span class="s2">&quot;INTEGER&quot;</span><span class="p">,</span><span class="s2">&quot;NUMERIC&quot;</span><span class="p">,</span><span class="nx">He</span><span class="p">];</span><span class="kd">function</span> <span class="nx">Ge</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="nx">a</span><span class="o">=</span><span class="nx">Ja</span><span class="p">(</span><span class="nx">Le</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">Le</span><span class="p">[</span><span class="nx">a</span><span class="p">]}</span><span class="nx">Fe</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getName</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">);</span><span class="nx">Fe</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toJSON</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">keyPath</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">unique</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">unique</span><span class="p">,</span><span class="nx">multiEntry</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">multiEntry</span><span class="p">}};</span></div><div class='line' id='LC116'><span class="nx">Fe</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ta</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">w</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">)</span><span class="o">?</span><span class="nx">Ra</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">;</span><span class="k">return</span> <span class="k">new</span> <span class="nx">Fe</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">unique</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">multiEntry</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">Me</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="o">||</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="o">?</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="o">?</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="o">?</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="nx">Ta</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="s2">&quot;expect: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;, but: &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">:</span><span class="nx">Ne</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="s2">&quot;expect: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;, but: &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">:</span><span class="s2">&quot;keyPath: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; no longer defined&quot;</span><span class="o">:</span><span class="s2">&quot;newly define &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">:</span><span class="kc">null</span><span class="p">}</span></div><div class='line' id='LC117'><span class="nx">Fe</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">hint</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">w</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">)</span><span class="o">?</span><span class="nx">Ra</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">;</span><span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;TEXT&quot;</span><span class="o">!=</span><span class="nx">c</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">);</span><span class="k">return</span> <span class="k">new</span> <span class="nx">Fe</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">unique</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">multiEntry</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">Yd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;store name must be a string&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">keyPath</span><span class="o">=</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">keyPath</span><span class="o">&amp;&amp;!</span><span class="nx">y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;keyPath must be a string or array&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="kd">var</span> <span class="nx">h</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">d</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="nx">Ge</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">v</span><span class="p">(</span><span class="nx">h</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;type &quot;&#39;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s1">&#39;&quot; for primary key in store &quot;&#39;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">+</span><span class="s1">&#39;&quot; is invalid.&#39;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;composite key for store &quot;&#39;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">+</span><span class="s1">&#39;&quot; must not specified type&#39;</span><span class="p">);}</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="nx">h</span><span class="o">?</span><span class="nx">h</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;INTEGER&quot;</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="nx">y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">)</span><span class="o">?</span></div><div class='line' id='LC118'><span class="k">this</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)</span><span class="o">:</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">ka</span><span class="o">=!!</span><span class="nx">f</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">jc</span><span class="o">=!!</span><span class="nx">g</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="o">=</span><span class="nx">y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">:</span><span class="nx">He</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="nx">w</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">keyPath</span><span class="o">:</span><span class="s2">&quot;_ROWID_&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="nx">Fa</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">i</span><span class="o">=</span><span class="p">[]}</span><span class="nx">t</span><span class="o">=</span><span class="nx">Yd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">ka</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">jc</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">toJSON</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">[],</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">toJSON</span><span class="p">());</span><span class="k">return</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">,</span><span class="nx">keyPath</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">,</span><span class="nx">autoIncrement</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">indexes</span><span class="o">:</span><span class="nx">a</span><span class="p">}};</span></div><div class='line' id='LC119'><span class="kd">function</span> <span class="nx">Zd</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="s2">&quot;name keyPath autoIncrement type indexes dispatchEvents fixed Sync&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;-</span><span class="mi">1</span><span class="o">==</span><span class="nx">Ja</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;Unknown attribute &quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="p">[];</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexes</span><span class="o">||</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="s2">&quot;name unique type keyPath multiEntry generator&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span> <span class="k">in</span> <span class="nx">e</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">&amp;&amp;-</span><span class="mi">1</span><span class="o">==</span><span class="nx">Ja</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;Unknown field: &quot;</span><span class="o">+</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot; in &quot;</span><span class="o">+</span><span class="nx">W</span><span class="p">(</span><span class="nx">e</span><span class="p">));</span><span class="nx">e</span><span class="o">=</span><span class="k">new</span> <span class="nx">Fe</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">unique</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">multiEntry</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">generator</span><span class="p">);</span><span class="nx">v</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">)</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC120'><span class="nx">e</span><span class="p">.</span><span class="nx">keyPath</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyPath</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">)}</span><span class="k">return</span> <span class="k">new</span> <span class="nx">Yd</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">autoIncrement</span><span class="p">,</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;null&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="k">void</span> <span class="mi">0</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">dispatchEvents</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">fixed</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">Oe</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">Pe</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="mi">0</span><span class="o">!=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">+=</span><span class="s2">&quot;SELECT &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">select</span><span class="p">);</span><span class="nx">b</span><span class="o">+=</span><span class="s2">&quot; FROM &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">da</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">+=</span><span class="s2">&quot; WHERE &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">n</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">group</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">+=</span><span class="s2">&quot; GROUP BY &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">group</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">W</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">+=</span><span class="s2">&quot; ORDER BY &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">W</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span></div><div class='line' id='LC121'><span class="kd">function</span> <span class="nx">Pe</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="p">{</span><span class="nx">select</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">da</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">n</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">group</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">W</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">},</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">d</span><span class="o">!==</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">je</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">));</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=!!</span><span class="nx">m</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">d</span><span class="o">||</span><span class="nx">l</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">Fa</span><span class="p">(</span><span class="nx">q</span><span class="p">),</span><span class="nx">z</span><span class="o">=</span><span class="nx">p</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">type</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">A</span><span class="o">=</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="p">.</span><span class="nx">multiEntry</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">da</span><span class="o">=</span><span class="nx">Qe</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="mi">6</span><span class="o">===</span><span class="nx">c</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">select</span><span class="o">=</span><span class="s2">&quot;COUNT(&quot;</span><span class="o">+</span><span class="nx">n</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="o">:</span><span class="mi">3</span><span class="o">===</span><span class="nx">c</span><span class="o">||</span><span class="mi">1</span><span class="o">===</span><span class="nx">c</span><span class="o">||</span><span class="mi">2</span><span class="o">===</span><span class="nx">c</span><span class="o">?</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">select</span><span class="o">=</span><span class="nx">n</span><span class="p">,</span><span class="kc">null</span><span class="o">!=</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">!=</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">select</span><span class="o">+=</span><span class="s2">&quot;, &quot;</span><span class="o">+</span><span class="nx">r</span><span class="p">))</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">select</span><span class="o">=</span><span class="s2">&quot;*&quot;</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">g</span><span class="o">?</span><span class="s2">&quot;DISTINCT &quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">l</span><span class="o">=</span><span class="p">[];</span><span class="nx">A</span><span class="o">?</span><span class="p">(</span><span class="nx">A</span><span class="o">=</span><span class="nx">Fa</span><span class="p">(</span><span class="s2">&quot;ydn.db.me:&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">m</span><span class="p">.</span><span class="nx">getName</span><span class="p">()),</span><span class="nx">h</span><span class="p">.</span><span class="nx">select</span><span class="o">=</span><span class="mi">6</span><span class="o">===</span><span class="nx">c</span><span class="o">?</span><span class="s2">&quot;COUNT(&quot;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="nx">A</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="o">:</span><span class="mi">3</span><span class="o">===</span><span class="nx">c</span><span class="o">||</span><span class="mi">1</span><span class="o">===</span><span class="nx">c</span><span class="o">||</span><span class="mi">2</span><span class="o">===</span><span class="nx">c</span><span class="o">?</span><span class="s2">&quot;DISTINCT &quot;</span><span class="o">+</span><span class="nx">Qe</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">n</span><span class="o">+</span><span class="s2">&quot;, &quot;</span><span class="o">+</span><span class="nx">A</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="s2">&quot; AS &quot;</span><span class="o">+</span><span class="nx">q</span><span class="o">:</span><span class="s2">&quot;DISTINCT &quot;</span><span class="o">+</span><span class="nx">Qe</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;.*, &quot;</span><span class="o">+</span><span class="nx">A</span><span class="o">+</span></div><div class='line' id='LC122'><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="s2">&quot; AS &quot;</span><span class="o">+</span><span class="nx">q</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">da</span><span class="o">=</span><span class="nx">A</span><span class="o">+</span><span class="s2">&quot; INNER JOIN &quot;</span><span class="o">+</span><span class="nx">Qe</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; USING (&quot;</span><span class="o">+</span><span class="nx">n</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">,</span><span class="kc">null</span><span class="o">!=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">Nc</span><span class="p">(</span><span class="nx">A</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">r</span><span class="p">,</span><span class="nx">z</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">n</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">n</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">n</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot; AND &quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; AND &quot;</span><span class="p">))</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; AND &quot;</span><span class="p">))))</span><span class="o">:</span><span class="kc">null</span><span class="o">!=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">Nc</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">z</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">n</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">n</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">n</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot; AND &quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; AND &quot;</span><span class="p">))</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; AND &quot;</span><span class="p">)));</span><span class="nx">p</span><span class="o">&amp;&amp;!</span><span class="nx">m</span><span class="p">.</span><span class="nx">unique</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">group</span><span class="o">=</span><span class="nx">r</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">f</span><span class="o">?</span><span class="s2">&quot;DESC&quot;</span><span class="o">:</span><span class="s2">&quot;ASC&quot;</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">W</span><span class="o">=</span><span class="nx">r</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">;</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">W</span><span class="o">+=</span><span class="s2">&quot;, &quot;</span><span class="o">+</span><span class="nx">n</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">h</span><span class="p">}</span></div><div class='line' id='LC123'><span class="kd">function</span> <span class="nx">Re</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">l</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">q</span><span class="p">;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">e</span><span class="o">?</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">lower</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">upper</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">lowerOpen</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">upperOpen</span><span class="p">,</span><span class="nx">f</span><span class="o">?</span><span class="kc">null</span><span class="o">!=</span><span class="nx">m</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">m</span><span class="p">),</span><span class="o">-</span><span class="mi">1</span><span class="o">==</span><span class="nx">e</span><span class="o">?</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">h</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">l</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="o">==</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">q</span><span class="o">=</span><span class="nx">l</span><span class="o">||</span><span class="nx">q</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">h</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">l</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="o">!=</span><span class="nx">n</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">n</span><span class="p">),</span><span class="mi">1</span><span class="o">==</span><span class="nx">e</span><span class="o">?</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">h</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">l</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="o">==</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nx">l</span><span class="o">||</span><span class="nx">p</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">h</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">l</span><span class="p">))</span><span class="o">:</span><span class="nx">f</span><span class="o">?</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">h</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">l</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">h</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">l</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="k">new</span> <span class="nx">O</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="o">!!</span><span class="nx">p</span><span class="p">,</span><span class="o">!!</span><span class="nx">q</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="o">?</span><span class="nx">je</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">Pe</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">e</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;SELECT &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">select</span><span class="o">+</span><span class="s2">&quot; FROM &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">da</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">n</span><span class="o">?</span><span class="s2">&quot; WHERE &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">n</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">group</span><span class="o">?</span><span class="s2">&quot; GROUP BY &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">group</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; ORDER BY &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">W</span><span class="p">;</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">+=</span><span class="s2">&quot;, &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="o">+</span><span class="p">(</span><span class="nx">f</span><span class="o">?</span><span class="s2">&quot;DESC&quot;</span><span class="o">:</span><span class="s2">&quot;ASC&quot;</span><span class="p">));</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span></div><div class='line' id='LC124'><span class="kd">function</span> <span class="nx">Se</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">je</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">e</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">d</span><span class="p">;</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">l</span><span class="o">?</span><span class="s2">&quot; &lt;&quot;</span><span class="o">:</span><span class="s2">&quot; &gt;&quot;</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">g</span><span class="o">?</span><span class="nx">r</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">:</span><span class="nx">r</span><span class="o">+</span><span class="s2">&quot;= &quot;</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">Oc</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">type</span><span class="p">);</span><span class="nx">h</span><span class="o">=</span><span class="nx">Oc</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">);</span><span class="nx">m</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">e</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">Pe</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">n</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">n</span><span class="o">+=</span><span class="s2">&quot; AND &quot;</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">d</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="s2">&quot;?&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">g</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">l</span><span class="o">?</span><span class="nx">O</span><span class="p">.</span><span class="nx">upperBound</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">O</span><span class="p">.</span><span class="nx">lowerBound</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">Pe</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">n</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">n</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">n</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">n</span><span class="o">+=</span><span class="s2">&quot;(&quot;</span><span class="o">+</span><span class="nx">m</span><span class="o">+</span><span class="s2">&quot; OR (&quot;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot; = ? AND &quot;</span><span class="o">+</span><span class="nx">q</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="s2">&quot;?))&quot;</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="k">return</span><span class="s2">&quot;SELECT &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">select</span><span class="o">+</span><span class="s2">&quot; FROM &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">da</span><span class="o">+</span><span class="s2">&quot; WHERE &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">n</span><span class="o">+</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">group</span><span class="o">?</span><span class="s2">&quot; GROUP BY &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">group</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; ORDER BY &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">W</span><span class="p">}</span><span class="nx">t</span><span class="p">.</span><span class="nx">ta</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Zd</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">toJSON</span><span class="p">())};</span></div><div class='line' id='LC125'><span class="nx">t</span><span class="p">.</span><span class="nx">index</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">||</span><span class="kc">null</span><span class="p">};</span><span class="kd">function</span> <span class="nx">je</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">Na</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">==</span><span class="nx">b</span><span class="p">})}</span><span class="kd">function</span> <span class="nx">ke</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyPath</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="nx">Ma</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">==</span><span class="nx">b</span><span class="p">})}</span><span class="kd">function</span> <span class="nx">Qe</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">Fa</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">)}</span></div><div class='line' id='LC126'><span class="nx">t</span><span class="p">.</span><span class="nx">hint</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">w</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">)</span><span class="o">?</span><span class="nx">Ra</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">La</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">ta</span><span class="p">()});</span><span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;TEXT&quot;</span><span class="o">!=</span><span class="nx">d</span><span class="o">||</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">Ra</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">));</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">g</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">getName</span><span class="p">(),</span><span class="nx">l</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">l</span><span class="p">;</span><span class="nx">l</span><span class="o">--</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">h</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">getName</span><span class="p">())){</span><span class="nx">e</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">ta</span><span class="p">();</span><span class="k">break</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)(</span><span class="nx">g</span><span class="o">=</span><span class="nx">je</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">getName</span><span class="p">()))</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">hint</span><span class="p">(</span><span class="nx">g</span><span class="p">));</span><span class="k">return</span> <span class="k">new</span> <span class="nx">Yd</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">)};</span></div><div class='line' id='LC127'><span class="nx">t</span><span class="p">.</span><span class="nx">getName</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;e&quot;</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Te</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="o">!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">}</span><span class="kd">function</span> <span class="nx">oe</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyPath</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">h</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">qc</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">[</span><span class="nx">d</span><span class="p">]));</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">)</span><span class="k">return</span> <span class="nx">db</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">re</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">){</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">])</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="p">{});</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]}}</span></div><div class='line' id='LC128'><span class="kd">function</span> <span class="nx">Ue</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="nx">c</span><span class="o">=</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">oe</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">Oc</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">)));</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">g</span><span class="p">.</span><span class="nx">multiEntry</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyPath</span><span class="o">&amp;&amp;</span><span class="s2">&quot;_default_&quot;</span><span class="o">!=</span><span class="nx">g</span><span class="p">.</span><span class="nx">getName</span><span class="p">()){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">Ie</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="kc">null</span><span class="o">!=</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">Oc</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">type</span><span class="p">)),</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">d</span><span class="p">))}}</span><span class="nx">a</span><span class="p">.</span><span class="nx">jc</span><span class="o">||</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">W</span><span class="p">(</span><span class="nx">b</span><span class="p">)),</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;_default_&quot;</span><span class="p">));</span><span class="nx">a</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">--</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;?&quot;</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">Rb</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">dc</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">B</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">key</span><span class="o">:</span><span class="nx">c</span><span class="p">}}</span></div><div class='line' id='LC129'><span class="kd">function</span> <span class="nx">$d</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;missing store: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">e</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;store name, expect: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;, but: &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">e</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">Me</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;keyPath, &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;autoIncrement, expect:  &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;, but: &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;indexes length, expect:  &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot;, but: &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="o">?!</span><span class="nx">Ta</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">))</span><span class="k">return</span><span class="s2">&quot;data type, expect:  &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">+</span><span class="s2">&quot;, but: &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">je</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">getName</span><span class="p">()),</span></div><div class='line' id='LC130'><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">a</span><span class="o">!=</span><span class="nx">d</span><span class="p">.</span><span class="nx">a</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;name, expect: &quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;, but: &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">a</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">Me</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="o">?</span><span class="s2">&quot;keyPath, &quot;</span><span class="o">+</span><span class="nx">f</span><span class="o">:</span><span class="kc">null</span><span class="o">!=</span><span class="nx">e</span><span class="p">.</span><span class="nx">unique</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">d</span><span class="p">.</span><span class="nx">unique</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">unique</span><span class="o">!=</span><span class="nx">d</span><span class="p">.</span><span class="nx">unique</span><span class="o">?</span><span class="s2">&quot;unique, expect: &quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">unique</span><span class="o">+</span><span class="s2">&quot;, but: &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">unique</span><span class="o">:</span><span class="kc">null</span><span class="o">!=</span><span class="nx">e</span><span class="p">.</span><span class="nx">multiEntry</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">d</span><span class="p">.</span><span class="nx">multiEntry</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">multiEntry</span><span class="o">!=</span><span class="nx">d</span><span class="p">.</span><span class="nx">multiEntry</span><span class="o">?</span><span class="s2">&quot;multiEntry, expect: &quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">multiEntry</span><span class="o">+</span><span class="s2">&quot;, but: &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">multiEntry</span><span class="o">:</span><span class="nx">v</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">x</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="o">?!</span><span class="nx">Ta</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="o">!=</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;data type, expect: &quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="o">+</span><span class="s2">&quot;, but: &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">}</span><span class="k">else</span> <span class="nx">e</span><span class="o">=</span><span class="s2">&quot;no index for &quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span><span class="s1">&#39;index &quot;&#39;</span><span class="o">+</span></div><div class='line' id='LC131'><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span><span class="s1">&#39;&quot; &#39;</span><span class="o">+</span><span class="nx">e</span><span class="p">}</span><span class="k">return</span><span class="s2">&quot;&quot;</span><span class="p">}</span><span class="kd">function</span> <span class="nx">le</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">f</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">f</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="nx">g</span><span class="o">||</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="nx">g</span><span class="o">||</span><span class="s2">&quot;array&quot;</span><span class="o">==</span><span class="nx">g</span><span class="o">||</span><span class="s2">&quot;undefined&quot;</span><span class="o">==</span><span class="nx">g</span><span class="o">||</span><span class="nx">f</span> <span class="k">instanceof</span> <span class="nb">Date</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">B</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">b</span><span class="p">[</span><span class="nx">g</span><span class="p">]])</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">b</span><span class="p">[</span><span class="nx">g</span><span class="p">]]</span><span class="o">=</span><span class="p">{});</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]]</span><span class="o">=</span><span class="nx">f</span><span class="p">}}}}</span><span class="kd">function</span> <span class="nx">he</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">void</span> <span class="mi">0</span><span class="o">!==</span><span class="nx">d</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">i</span><span class="p">[</span><span class="nx">d</span><span class="p">](</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span></div><div class='line' id='LC132'><span class="nx">t</span><span class="p">.</span><span class="nx">F</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="nx">a</span><span class="o">:</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">Me</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">keyPath</span><span class="p">,</span><span class="nx">a</span><span class="p">)){</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="k">break</span> <span class="nx">a</span><span class="p">}</span><span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;, &quot;</span><span class="p">)}</span><span class="k">else</span> <span class="nx">b</span><span class="o">=</span><span class="nx">je</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;require index &quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s1">&#39;&quot; not found in store &quot;&#39;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">getName</span><span class="p">()};</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn&quot;</span><span class="p">);</span><span class="kd">function</span> <span class="nx">ze</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="o">!</span><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nx">sa</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">{}</span><span class="o">:</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">ge</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">b</span><span class="o">=</span><span class="nx">W</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">}</span><span class="k">return</span> <span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">70</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="mi">70</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="s2">&quot;...&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">}</span><span class="kd">function</span> <span class="nx">W</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">Ve</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||</span><span class="nx">sa</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;store_name must be provided for primary full text index&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="o">||</span><span class="nx">sa</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;index_name must be provided for primary full text index&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">};</span><span class="kd">function</span> <span class="nx">We</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="o">==</span><span class="p">[</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="s2">&quot;en&quot;</span><span class="p">,</span><span class="s2">&quot;fr&quot;</span><span class="p">].</span><span class="nx">indexOf</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;Unsupported lang &quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot; for full text search index &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);}</span><span class="nx">We</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getName</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">);</span><span class="nx">We</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">count</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">};</span><span class="nx">We</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">index</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">a</span><span class="p">]};</span></div><div class='line' id='LC133'><span class="kd">function</span> <span class="nx">Xe</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">,</span><span class="s2">&quot;sources&quot;</span><span class="p">,</span><span class="s2">&quot;lang&quot;</span><span class="p">],</span><span class="nx">c</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;-</span><span class="mi">1</span><span class="o">==</span><span class="nx">Ja</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;Unknown field: &quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot; in &quot;</span><span class="o">+</span><span class="nx">W</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">sources</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;indexes require for full text search index &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;, but &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">sources</span><span class="o">+</span><span class="s2">&quot; of type &quot;</span><span class="o">+</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">sources</span><span class="o">+</span><span class="s2">&quot; found.&quot;</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">sources</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;storeName&quot;</span><span class="p">,</span><span class="s2">&quot;keyPath&quot;</span><span class="p">,</span><span class="s2">&quot;weight&quot;</span><span class="p">],</span><span class="nx">c</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;-</span><span class="mi">1</span><span class="o">==</span><span class="nx">Ja</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;Unknown field: &quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot; in &quot;</span><span class="o">+</span><span class="nx">ge</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">return</span> <span class="k">new</span> <span class="nx">Ve</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">storeName</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">)});</span><span class="k">return</span> <span class="k">new</span> <span class="nx">We</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span></div><div class='line' id='LC134'><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">lang</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">Ye</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;version&quot;</span><span class="p">,</span><span class="s2">&quot;stores&quot;</span><span class="p">,</span><span class="s2">&quot;fullTextCatalogs&quot;</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span> <span class="k">in</span> <span class="nx">d</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;&amp;-</span><span class="mi">1</span><span class="o">==</span><span class="nx">Ja</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;Unknown field: &quot;</span><span class="o">+</span><span class="nx">f</span><span class="o">+</span><span class="s2">&quot; in schema.&quot;</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">version</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">stores</span><span class="o">||</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">w</span><span class="p">(</span><span class="nx">g</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;stores must be array&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">Zd</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">f</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="o">!=</span><span class="nx">Oa</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="o">==</span><span class="nx">h</span><span class="p">.</span><span class="nx">getName</span><span class="p">()}))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;duplicate store name &quot;&#39;</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span><span class="s1">&#39;&quot;.&#39;</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">h</span><span class="p">)}}</span><span class="k">else</span> <span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="k">void</span> <span class="mi">0</span><span class="o">:</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">ea</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">ea</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="o">&gt;</span></div><div class='line' id='LC135'><span class="nx">c</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;Invalid version: &quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot; (&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">);</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">w</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="k">instanceof</span> <span class="nx">Yd</span><span class="p">)))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;stores&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">version</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">wa</span><span class="o">=!</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">version</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">stores</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="p">[];</span><span class="nx">c</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">fullTextCatalogs</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">fullTextCatalogs</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">Xe</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">fullTextCatalogs</span><span class="p">[</span><span class="nx">f</span><span class="p">]),</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">Y</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">getName</span><span class="p">())</span><span class="o">||</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="p">[</span><span class="k">new</span> <span class="nx">Fe</span><span class="p">(</span><span class="s2">&quot;k&quot;</span><span class="p">,</span><span class="nx">He</span><span class="p">),</span><span class="k">new</span> <span class="nx">Fe</span><span class="p">(</span><span class="s2">&quot;v&quot;</span><span class="p">,</span><span class="nx">He</span><span class="p">)],</span><span class="nx">e</span><span class="o">=</span><span class="k">new</span> <span class="nx">Yd</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">getName</span><span class="p">(),</span><span class="s2">&quot;id&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">stores</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">}</span><span class="nx">t</span><span class="o">=</span><span class="nx">Ye</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span></div><div class='line' id='LC136'><span class="nx">t</span><span class="p">.</span><span class="nx">toJSON</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">La</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">stores</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">toJSON</span><span class="p">()}),</span><span class="nx">b</span><span class="o">=</span><span class="p">{};</span><span class="nx">b</span><span class="p">.</span><span class="nx">stores</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">version</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">version</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">version</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">wa</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">M</span><span class="o">=</span><span class="nx">aa</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="kd">function</span> <span class="nx">ie</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">La</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">stores</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">getName</span><span class="p">()})}</span><span class="nx">t</span><span class="p">.</span><span class="nx">pa</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">stores</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">||</span><span class="kc">null</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">count</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">stores</span><span class="p">.</span><span class="nx">length</span><span class="p">};</span><span class="kd">function</span> <span class="nx">Y</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">Na</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">stores</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">==</span><span class="nx">b</span><span class="p">})}</span><span class="kd">function</span> <span class="nx">fe</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">Ma</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">stores</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">==</span><span class="nx">b</span><span class="p">})}</span></div><div class='line' id='LC137'><span class="kd">function</span> <span class="nx">Ze</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">stores</span><span class="p">.</span><span class="nx">length</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">stores</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;Number of store: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">stores</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot; vs &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">stores</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">stores</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">stores</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">getName</span><span class="p">()),</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">hint</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">stores</span><span class="p">[</span><span class="nx">d</span><span class="p">])</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">$d</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">stores</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">e</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span><span class="s1">&#39;store: &quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">stores</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span><span class="s1">&#39;&quot; &#39;</span><span class="o">+</span><span class="nx">e</span><span class="p">}</span><span class="k">return</span><span class="s2">&quot;&quot;</span><span class="p">};</span><span class="kd">function</span> <span class="nx">ae</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">Ye</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="nx">C</span><span class="p">(</span><span class="nx">ae</span><span class="p">,</span><span class="nx">Ye</span><span class="p">);</span><span class="nx">ae</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">M</span><span class="o">=</span><span class="nx">aa</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="kd">function</span> <span class="nx">be</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">stores</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">Zc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="o">?</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">Zc</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="o">=</span><span class="nb">Error</span><span class="p">().</span><span class="nx">stack</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;ydn.error.ArgumentException&quot;</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Zc</span><span class="p">,</span><span class="nb">Error</span><span class="p">);</span><span class="kd">function</span> <span class="nx">$e</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="o">?</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">$e</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="o">=</span><span class="nb">Error</span><span class="p">().</span><span class="nx">stack</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;ydn.error.NotSupportedException&quot;</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Zc</span><span class="p">,</span><span class="nb">Error</span><span class="p">);</span><span class="nx">$e</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;ydn.error.NotSupportedException&quot;</span><span class="p">;</span></div><div class='line' id='LC138'><span class="kd">function</span> <span class="nx">gd</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="o">?</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">gd</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="o">=</span><span class="nb">Error</span><span class="p">().</span><span class="nx">stack</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;ydn.error.NotImplementedException&quot;</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">gd</span><span class="p">,</span><span class="nb">Error</span><span class="p">);</span><span class="kd">function</span> <span class="nx">cd</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="o">?</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">cd</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="o">=</span><span class="nb">Error</span><span class="p">().</span><span class="nx">stack</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;ydn.error.InternalError&quot;</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">cd</span><span class="p">,</span><span class="nb">Error</span><span class="p">);</span><span class="nx">cd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;ydn.InternalError&quot;</span><span class="p">;</span></div><div class='line' id='LC139'><span class="kd">function</span> <span class="nx">de</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="o">?</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">de</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="o">=</span><span class="nb">Error</span><span class="p">().</span><span class="nx">stack</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;ydn.error.ConstraintError&quot;</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">de</span><span class="p">,</span><span class="nb">Error</span><span class="p">);</span><span class="nx">de</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;ydn.error.ConstraintError&quot;</span><span class="p">;</span><span class="kd">function</span> <span class="nx">ye</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="o">?</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">ye</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="o">=</span><span class="nb">Error</span><span class="p">().</span><span class="nx">stack</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;ydn.error.InvalidOperationException&quot;</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Zc</span><span class="p">,</span><span class="nb">Error</span><span class="p">);</span></div><div class='line' id='LC140'><span class="kd">function</span> <span class="nx">fd</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="o">?</span><span class="nb">Error</span><span class="p">.</span><span class="nx">captureStackTrace</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">fd</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="o">=</span><span class="nb">Error</span><span class="p">().</span><span class="nx">stack</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;ydn.error.InvalidOperationError&quot;</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">fd</span><span class="p">,</span><span class="nb">Error</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Ne</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="p">{};</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="o">==</span><span class="nx">Na</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">Ne</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">])}))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="mi">1</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">Ne</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span> <span class="mi">1</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">Ne</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">B</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">Ne</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">f</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">Ne</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]),</span><span class="o">!</span><span class="nx">f</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">}</span><span class="k">return</span> <span class="nx">a</span><span class="o">===</span><span class="nx">b</span><span class="p">}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span></div><div class='line' id='LC141'><span class="kd">function</span> <span class="nx">af</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]};</span><span class="cm">/*</span></div><div class='line' id='LC142'><span class="cm"> Copyright 2012 YDN Authors, Yathit. All Rights Reserved.</span></div><div class='line' id='LC143'><span class="cm"> Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);.</span></div><div class='line' id='LC144'><span class="cm">*/</span></div><div class='line' id='LC145'><span class="kd">function</span> <span class="nx">Q</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="s2">&quot;autoSchema connectionTimeout size mechanisms policy isSerial&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">e</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span> <span class="k">in</span> <span class="nx">c</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;-</span><span class="mi">1</span><span class="o">==</span><span class="nx">Ja</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;Unknown attribute &quot;&#39;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s1">&#39;&quot; in options.&#39;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">mechanisms</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">w</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">mechanisms</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;mechanisms attribute must be an array but &quot;</span><span class="o">+</span><span class="nx">ca</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">mechanisms</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; found.&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">mechanisms</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">Ja</span><span class="p">(</span><span class="nx">bf</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">mechanisms</span><span class="p">[</span><span class="nx">e</span><span class="p">])))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;Invalid mechanism &quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">mechanisms</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">);}</span><span class="k">this</span><span class="p">.</span><span class="nx">u</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">mechanisms</span><span class="o">||</span><span class="nx">bf</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">s</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">size</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">fa</span><span class="o">=</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">connectionTimeout</span><span class="p">)</span><span class="o">?</span></div><div class='line' id='LC146'><span class="nx">c</span><span class="p">.</span><span class="nx">connectionTimeout</span><span class="o">:</span><span class="mi">3</span><span class="nx">E4</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ec</span><span class="o">=</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">ec</span><span class="p">)</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">ec</span><span class="o">:!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">bb</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span> <span class="k">instanceof</span> <span class="nx">Ye</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">autoSchema</span><span class="o">||!</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">stores</span><span class="p">)</span><span class="o">?</span><span class="k">new</span> <span class="nx">ae</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="k">new</span> <span class="nx">Ye</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">stores</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">stores</span><span class="p">.</span><span class="nx">length</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">stores</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">name</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">stores</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">Sync</span><span class="o">&amp;&amp;</span><span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;Synchronization option for &quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot; ignored.&quot;</span><span class="p">)}</span><span class="k">else</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">ae</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">}</span><span class="nx">Q</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.con.Storage&quot;</span><span class="p">);</span></div><div class='line' id='LC147'><span class="nx">Q</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">la</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">toJSON</span><span class="p">())};</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">L</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">Ca</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">L</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="kc">null</span><span class="p">,</span><span class="nx">nc</span><span class="p">)}}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">toJSON</span><span class="p">()</span><span class="o">:</span><span class="kc">null</span><span class="p">};</span><span class="nx">Q</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">l</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">Ec</span><span class="p">(</span><span class="s2">&quot;Already connected with &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">ce</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span><span class="nx">Q</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getName</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;h&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">bf</span><span class="o">=</span><span class="s2">&quot;indexeddb websql localstorage sessionstorage userdata memory&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="nx">t</span><span class="o">=</span><span class="nx">Q</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">zb</span><span class="o">=</span><span class="nx">aa</span><span class="p">(</span><span class="kc">null</span><span class="p">);</span></div><div class='line' id='LC148'><span class="kd">function</span> <span class="nx">ce</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">b</span><span class="o">?</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;: ready.&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">Vb</span><span class="o">=</span><span class="kc">NaN</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">Qa</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">I</span><span class="p">(</span><span class="k">new</span> <span class="nx">De</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">))},</span><span class="nx">d</span><span class="p">.</span><span class="nx">mb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">I</span><span class="p">(</span><span class="k">new</span> <span class="nx">Ee</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">));</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="nx">d</span><span class="p">.</span><span class="nx">fb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">I</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">cf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="nx">df</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="mi">10</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">r</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;: database connection fail &quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">name</span><span class="p">),</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">cf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">new</span> <span class="nx">Ee</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">Xb</span><span class="p">,</span><span class="s2">&quot;Purging &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot; transactions request.&quot;</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">.</span><span class="nx">shift</span><span class="p">();)</span><span class="nx">b</span><span class="p">.</span><span class="nx">G</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">G</span><span class="p">(</span><span class="s2">&quot;error&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">)}},</span><span class="mi">10</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">o</span><span class="p">(</span><span class="nx">e</span><span class="p">))}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">u</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">();</span></div><div class='line' id='LC149'><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">zb</span><span class="p">(</span><span class="nx">g</span><span class="p">)){</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">zb</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="k">break</span><span class="p">}}</span><span class="kc">null</span><span class="o">===</span><span class="nx">d</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="k">new</span> <span class="nx">de</span><span class="p">(</span><span class="s2">&quot;No storage mechanism found.&quot;</span><span class="p">),</span><span class="nx">b</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="k">new</span> <span class="nx">Ee</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">)))</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">Aa</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">).</span><span class="nx">S</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">b</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="k">new</span> <span class="nx">Ce</span><span class="p">(</span><span class="s2">&quot;ready&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">kb</span><span class="p">()),</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="kc">null</span><span class="p">))},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="o">+</span><span class="s2">&quot;: opening fail&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">a</span><span class="p">)}</span><span class="nx">t</span><span class="p">.</span><span class="nx">Da</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">Ba</span><span class="p">()};</span><span class="nx">t</span><span class="p">.</span><span class="nx">wc</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">sb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">cf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span> <span class="k">instanceof</span> <span class="nx">De</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">o</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">error</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">r</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">I</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">Rd</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="o">!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">lb</span><span class="p">()}</span></div><div class='line' id='LC150'><span class="nx">t</span><span class="p">.</span><span class="nx">Kc</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">jb</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="o">+</span><span class="s2">&quot; closed&quot;</span><span class="p">))};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Vb</span><span class="o">=</span><span class="kc">NaN</span><span class="p">;</span><span class="kd">function</span> <span class="nx">df</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;pop tx queue[&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">Ca</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">Xa</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">Ac</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">mode</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">G</span><span class="p">));</span><span class="nx">a</span><span class="p">.</span><span class="nx">Vb</span><span class="o">=</span><span class="nx">na</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">ef</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;push tx queue[&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">Xa</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">Ac</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">mode</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">G</span><span class="o">:</span><span class="nx">e</span><span class="p">});</span><span class="mi">100</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">%</span><span class="mi">100</span><span class="o">&amp;&amp;</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;Transaction queue stack size is &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot;. It is too large, possibility due to incorrect usage.&quot;</span><span class="p">)}</span><span class="nx">t</span><span class="p">.</span><span class="nx">bb</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span></div><div class='line' id='LC151'><span class="nx">t</span><span class="p">.</span><span class="nx">Ca</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="nx">e</span><span class="o">=</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;number of store names must more than 0&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">y</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">]))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;store name at &quot;</span><span class="o">+</span><span class="nx">f</span><span class="o">+</span><span class="s2">&quot; must be string but found &quot;</span><span class="o">+</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">]);}</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;store names must be an array&quot;</span><span class="p">);</span><span class="k">else</span> <span class="nx">e</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">lb</span><span class="p">()</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">bb</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">nc</span><span class="p">;</span><span class="nx">h</span><span class="o">==</span><span class="nx">oc</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">bb</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">Wa</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">fa</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">);</span><span class="nx">h</span><span class="o">==</span><span class="nx">oc</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">bb</span><span class="o">=!</span><span class="mi">1</span><span class="p">);</span><span class="nx">df</span><span class="p">(</span><span class="nx">g</span><span class="p">)})}</span><span class="k">else</span> <span class="nx">ef</span><span class="p">(</span><span class="k">this</span><span class="p">,</span></div><div class='line' id='LC152'><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">I</span><span class="o">=</span><span class="nx">k</span><span class="p">();</span><span class="nx">t</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;Storage:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">};</span><span class="kd">function</span> <span class="nx">ff</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">Ra</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="p">[]}</span><span class="nx">ff</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="kd">function</span> <span class="nx">gf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">)</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">);</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">Fc</span><span class="p">(</span><span class="s2">&quot;tx committed on ParallelTxExecutor&quot;</span><span class="p">);}</span><span class="nx">ff</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;ParallelTxExecutor: txNo:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">+</span><span class="s2">&quot; mode:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; scopes:&quot;</span><span class="o">+</span><span class="nx">W</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">hf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">Fa</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">La</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ga</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="s2">&quot;single&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">pb</span><span class="o">=</span><span class="nx">f</span><span class="o">||</span><span class="mi">0</span><span class="p">}</span><span class="nx">t</span><span class="o">=</span><span class="nx">hf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">Fa</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">pb</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">ga</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">La</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.tr.Parallel&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">Sa</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;Fa&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">.</span><span class="nx">Da</span><span class="p">()};</span><span class="nx">t</span><span class="p">.</span><span class="nx">j</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;d&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">abort</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="o">+</span><span class="s2">&quot;: aborting&quot;</span><span class="p">);</span><span class="nx">Ld</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">La</span><span class="p">)};</span></div><div class='line' id='LC153'><span class="nx">t</span><span class="p">.</span><span class="nx">mc</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;multi&quot;</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">)</span><span class="nx">a</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ga</span><span class="p">,</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">a</span><span class="o">||!</span><span class="nx">c</span><span class="p">.</span><span class="nx">b</span><span class="o">||</span><span class="nx">b</span><span class="o">!=</span><span class="nx">c</span><span class="p">.</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">b</span><span class="o">!=</span><span class="nx">K</span><span class="o">||</span><span class="nx">b</span><span class="o">!=</span><span class="nx">nc</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">c</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">])){</span><span class="nx">c</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">break</span> <span class="nx">a</span><span class="p">}</span><span class="nx">c</span><span class="o">=!</span><span class="mi">0</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;repeat&quot;</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">)</span><span class="nx">a</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ga</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">])){</span><span class="nx">c</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">break</span> <span class="nx">a</span><span class="p">}</span><span class="nx">c</span><span class="o">=!</span><span class="mi">0</span><span class="p">}</span><span class="k">else</span> <span class="nx">c</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">else</span> <span class="nx">c</span><span class="o">=</span><span class="s2">&quot;all&quot;</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">?!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="p">};</span></div><div class='line' id='LC154'><span class="nx">t</span><span class="p">.</span><span class="nx">na</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">l</span><span class="p">.</span><span class="nx">Fa</span><span class="o">++</span><span class="p">;</span><span class="nx">n</span><span class="o">=</span><span class="k">new</span> <span class="nx">ff</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">Fa</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="nx">g</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">A</span><span class="p">();</span><span class="nx">fc</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot; BEGIN &quot;</span><span class="o">+</span><span class="nx">W</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">);</span><span class="nx">l</span><span class="p">.</span><span class="nx">ga</span><span class="o">=</span><span class="nx">n</span><span class="p">;</span><span class="nx">gf</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">ga</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">fc</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">n</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">d</span><span class="p">[</span><span class="nx">d</span><span class="p">](</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="nx">l</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">}</span><span class="kd">var</span> <span class="nx">g</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">);</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">nc</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">n</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ga</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">ga</span><span class="p">.</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">mc</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">))</span><span class="nx">gf</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ga</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pb</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">Fa</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">pb</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">Ec</span><span class="p">(</span><span class="s2">&quot;Exceed maximum number of transactions of &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">pb</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">.</span><span class="nx">Ca</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="p">)}};</span></div><div class='line' id='LC155'><span class="nx">t</span><span class="p">.</span><span class="nx">request</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">new</span> <span class="nx">Fd</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">na</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">a</span><span class="o">++</span><span class="p">;</span><span class="nx">Gd</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">A</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;R&quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">a</span><span class="p">)},</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">||</span><span class="nx">nc</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="nx">e</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">$</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">na</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">a</span><span class="o">++</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">A</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;R&quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">a</span><span class="p">;</span><span class="nx">G</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot; BEGIN&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">La</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">A</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;R&quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">a</span><span class="p">;</span><span class="nx">d</span><span class="o">?</span><span class="p">(</span><span class="nx">G</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot; ERROR&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">o</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">G</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot; SUCCESS&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">r</span><span class="p">(</span><span class="nx">b</span><span class="p">));</span><span class="nx">f</span><span class="p">.</span><span class="nx">La</span><span class="o">=</span><span class="kc">null</span><span class="p">});</span><span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">G</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot; END&quot;</span><span class="p">)},</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">A</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;B&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot;T&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">Fa</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;Parallel:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">A</span><span class="p">()</span><span class="o">+</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">La</span><span class="o">?</span><span class="s2">&quot;*&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">jf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">hf</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;single&quot;</span><span class="p">)}</span><span class="nx">C</span><span class="p">(</span><span class="nx">jf</span><span class="p">,</span><span class="nx">hf</span><span class="p">);</span><span class="nx">t</span><span class="o">=</span><span class="nx">jf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.tr.AtomicParallel&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">mc</span><span class="o">=</span><span class="nx">aa</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">request</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">jf</span><span class="p">.</span><span class="nx">p</span><span class="p">.</span><span class="nx">request</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">h</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">G</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;transaction &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="s2">&quot;complete&quot;</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">ud</span><span class="p">;</span><span class="nx">R</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}});</span><span class="nx">Id</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">});</span><span class="k">return</span> <span class="nx">h</span><span class="p">};</span></div><div class='line' id='LC156'><span class="nx">t</span><span class="p">.</span><span class="nx">$</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">S</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">g</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">g</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">});</span><span class="nx">jf</span><span class="p">.</span><span class="nx">p</span><span class="p">.</span><span class="nx">$</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;complete&quot;</span><span class="o">!=</span><span class="nx">b</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">o</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="o">===</span><span class="nx">g</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">o</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="o">===</span><span class="nx">g</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">r</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nx">ud</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">o</span><span class="p">(</span><span class="nx">d</span><span class="p">)}</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">)})};</span><span class="nx">t</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;Atomic&quot;</span><span class="o">+</span><span class="nx">jf</span><span class="p">.</span><span class="nx">p</span><span class="p">.</span><span class="nx">toString</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">kf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">Q</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">ya</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;single&quot;</span><span class="p">;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isSerial</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=!!</span><span class="nx">c</span><span class="p">.</span><span class="nx">isSerial</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">policy</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">policy</span><span class="p">));</span><span class="nx">c</span><span class="o">=</span><span class="nx">lf</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">i</span><span class="o">=</span><span class="nx">lf</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;atomic&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">xa</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">i</span><span class="p">)}</span><span class="nx">C</span><span class="p">(</span><span class="nx">kf</span><span class="p">,</span><span class="nx">Q</span><span class="p">);</span><span class="nx">t</span><span class="o">=</span><span class="nx">kf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">ya</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">nc</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="p">;</span><span class="s2">&quot;readonly&quot;</span><span class="o">==</span><span class="nx">d</span><span class="o">?</span><span class="nx">f</span><span class="o">=</span><span class="nx">nc</span><span class="o">:</span><span class="s2">&quot;readwrite&quot;</span><span class="o">==</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">K</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">lf</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">xa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">i</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">xa</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">Td</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)};</span></div><div class='line' id='LC157'><span class="kd">function</span> <span class="nx">lf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;multi&quot;</span><span class="o">==</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;repeat&quot;</span><span class="o">==</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;all&quot;</span><span class="o">==</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;single&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="k">new</span> <span class="nx">Nd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">ya</span><span class="o">++</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;atomic&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="k">new</span> <span class="nx">Sd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">ya</span><span class="o">++</span><span class="p">);</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;Invalid requestType &quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">);}</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;multi&quot;</span><span class="o">==</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;repeat&quot;</span><span class="o">==</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;all&quot;</span><span class="o">==</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;single&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="k">new</span> <span class="nx">hf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">ya</span><span class="o">++</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;atomic&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="k">new</span> <span class="nx">jf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">ya</span><span class="o">++</span><span class="p">);</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;Invalid requestType &quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">);}</span></div><div class='line' id='LC158'><span class="nx">t</span><span class="p">.</span><span class="nx">yc</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">3</span><span class="o">&lt;</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;too many input arguments, run accept not more than 3 input arguments, but &quot;</span><span class="o">+</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot; found.&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">ya</span><span class="o">++</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="nx">ie</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">nc</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;readwrite&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">K</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;readonly&quot;</span><span class="o">!=</span><span class="nx">c</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;Invalid transaction mode &quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">lf</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;all&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">xa</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">i</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="k">new</span> <span class="nx">Fd</span><span class="p">(</span><span class="s2">&quot;run&quot;</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">na</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">H</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;executing run in transaction on &quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">);</span><span class="nx">Gd</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">A</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;R0&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">(</span><span class="nx">g</span><span class="p">)},</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">h</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">R</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">Sa</span><span class="p">(),</span><span class="s2">&quot;complete&quot;</span><span class="o">!==</span><span class="nx">a</span><span class="p">)});</span></div><div class='line' id='LC159'><span class="k">return</span> <span class="nx">h</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Pc</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">.</span><span class="nx">lc</span><span class="p">()</span><span class="o">:</span><span class="kc">NaN</span><span class="p">};</span><span class="nx">kf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">branch</span><span class="o">=</span><span class="nx">kf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">nc</span><span class="p">;</span><span class="nx">kf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">run</span><span class="o">=</span><span class="nx">kf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">yc</span><span class="p">;</span><span class="nx">kf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getTxNo</span><span class="o">=</span><span class="nx">kf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Pc</span><span class="p">;</span><span class="nx">Td</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getTxNo</span><span class="o">=</span><span class="nx">Td</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">lc</span><span class="p">;</span><span class="kd">function</span> <span class="nx">Z</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">kf</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">getName</span><span class="p">());</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">ke</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;k&quot;</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;full text index store &quot;&#39;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span><span class="s1">&#39;&quot; must have &quot;keyword&quot; index&#39;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">ke</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;v&quot;</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;full text index store &quot;&#39;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span><span class="s1">&#39;&quot; must have &quot;keyword&quot; index&#39;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="o">!=</span><span class="nx">d</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;full text index store &quot;&#39;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span><span class="s1">&#39;&quot; must use &quot;id&quot; as key path.&#39;</span><span class="p">);}</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;full text index store &quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span><span class="s1">&#39;&quot; required.&#39;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">count</span><span class="p">();</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span></div><div class='line' id='LC160'><span class="nx">c</span><span class="p">.</span><span class="nx">index</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">k</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;Full text indexer option for &quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot; ignored.&quot;</span><span class="p">);</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;full text source store &quot;&#39;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">k</span><span class="o">+</span><span class="s1">&#39;&quot; does not exist for full text index &quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">);}}}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Z</span><span class="p">,</span><span class="nx">kf</span><span class="p">);</span><span class="nx">t</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">xa</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">ee</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">add</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">count</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">.</span><span class="nx">count</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">get</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">keys</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">)};</span></div><div class='line' id='LC161'><span class="nx">t</span><span class="p">.</span><span class="nx">B</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">.</span><span class="nx">B</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">load</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">.</span><span class="nx">load</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">put</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">.</span><span class="nx">clear</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">ob</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">.</span><span class="nx">ob</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="s2">&quot;Storage:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">getName</span><span class="p">();</span><span class="nx">Rd</span><span class="p">(</span><span class="k">this</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">+=</span><span class="s2">&quot; [&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">Da</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="kd">function</span> <span class="nx">mf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">Z</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="nx">C</span><span class="p">(</span><span class="nx">mf</span><span class="p">,</span><span class="nx">Z</span><span class="p">);</span><span class="nx">t</span><span class="o">=</span><span class="nx">mf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">xa</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">we</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Lc</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">.</span><span class="nx">gc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Mc</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">.</span><span class="nx">hc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">map</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">nb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">.</span><span class="nx">nb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">nf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">db</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">d</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">}</span><span class="nx">t</span><span class="o">=</span><span class="nx">nf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">reverse</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">nf</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">db</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">reverse</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">unique</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">da</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;unique value must be a boolean, but &quot;</span><span class="o">+</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">+</span><span class="s2">&quot; found&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;primary key query is already unique&quot;</span><span class="p">);</span><span class="k">return</span> <span class="k">new</span> <span class="nx">nf</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">db</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">unique</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">)};</span></div><div class='line' id='LC162'><span class="nx">t</span><span class="p">.</span><span class="nx">W</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">:</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Multi ordering not implemented, wait for next release&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">Na</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">F</span><span class="p">()</span><span class="o">!=</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">F</span><span class="p">(),</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]],</span><span class="nx">d</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">lower</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">upper</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">Jc</span><span class="p">([</span><span class="nx">d</span><span class="p">.</span><span class="nx">lower</span><span class="p">]),</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">P</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;, &quot;</span><span class="p">),</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">P</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">Q</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">else</span> <span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Not supported&quot;</span><span class="p">);</span><span class="k">else</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">P</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;, &quot;</span><span class="p">),</span><span class="kc">null</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">P</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">Q</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">!=</span><span class="nx">c</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Not possible without using in memory sorting.&quot;</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">Wc</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="kc">null</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">P</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">Q</span><span class="p">())}</span><span class="k">return</span> <span class="k">new</span> <span class="nx">nf</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">db</span><span class="p">,</span></div><div class='line' id='LC163'><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">n</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;joint query not implemented yet&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">==</span><span class="nx">g</span><span class="p">.</span><span class="nx">keyPath</span><span class="o">?</span><span class="nx">Vc</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">Xc</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">return</span> <span class="k">new</span> <span class="nx">nf</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">db</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">)};</span></div><div class='line' id='LC164'><span class="nx">t</span><span class="p">.</span><span class="nx">select</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">P</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">P</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">Q</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">h</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="s2">&quot;_ROWID_&quot;</span><span class="o">==</span><span class="nx">c</span><span class="o">||</span><span class="nx">c</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="s2">&quot;*&quot;</span><span class="o">!=</span><span class="nx">c</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">ke</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">F</span><span class="p">(),</span><span class="nx">c</span><span class="o">!=</span><span class="nx">b</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;select field name must be &quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s1">&#39;&quot;, but &quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s1">&#39;&quot; found.&#39;</span><span class="p">);}</span><span class="k">else</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">P</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">Na</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">P</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">Q</span><span class="p">(),</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="mi">1</span><span class="p">}</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;Invalid select &quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s1">&#39;&quot;, index not found in store &quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">);</span><span class="k">else</span> <span class="nx">d</span><span class="o">=</span><span class="mi">4</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="mi">2</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;Only primary key can be selected for this query.&quot;</span><span class="p">);</span></div><div class='line' id='LC165'><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">2</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;_ROWID_&quot;</span><span class="o">!=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="mi">1</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">keyPath</span><span class="o">===</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">:</span><span class="nx">x</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nx">Ta</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">g</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">])))){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">F</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">!=</span><span class="nx">e</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;select field name must be &quot;&#39;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s1">&#39;&quot;, but &quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;&quot; found.&#39;</span><span class="p">);}</span><span class="nx">d</span><span class="o">=</span><span class="mi">3</span><span class="p">}</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;Selecting more than 2 field names is not supported, but &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot; fields selected.&quot;</span><span class="p">);</span><span class="k">return</span> <span class="k">new</span> <span class="nx">nf</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">db</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">)};</span></div><div class='line' id='LC166'><span class="nx">t</span><span class="p">.</span><span class="nx">count</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">Q</span><span class="p">()</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">db</span><span class="p">.</span><span class="nx">count</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">db</span><span class="p">.</span><span class="nx">count</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">F</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">Na</span><span class="p">())</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">db</span><span class="p">.</span><span class="nx">count</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">Na</span><span class="p">());</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="o">!=</span><span class="nx">Rc</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">sb</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="s2">&quot;busy&quot;</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">fc</span><span class="p">()});</span><span class="k">return</span> <span class="nx">b</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">db</span><span class="p">.</span><span class="nx">clear</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">F</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">Ub</span><span class="p">())</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">db</span><span class="p">.</span><span class="nx">clear</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">Ub</span><span class="p">())};</span></div><div class='line' id='LC167'><span class="nx">mf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">da</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s1">&#39;store name &quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">fe</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;Store &quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s1">&#39;&quot; not found.&#39;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;boundary value must be defined.&quot;</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="nx">Pc</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;second boundary must not be defined.&quot;</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">Uc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="k">return</span> <span class="k">new</span> <span class="nx">nf</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)};</span></div><div class='line' id='LC168'><span class="nx">we</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">da</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s1">&#39;store name &quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">fe</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;Store &quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s1">&#39;&quot; not found.&#39;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;boundary value must be defined.&quot;</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="nx">Pc</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;second boundary must not be defined.&quot;</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">j</span><span class="p">();</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">Uc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="k">return</span> <span class="k">new</span> <span class="nx">nf</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">of</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">Zc</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">H</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="nx">K</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="p">[];</span><span class="nx">pf</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">Oa</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">}</span><span class="nx">t</span><span class="o">=</span><span class="nx">of</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">H</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">Wb</span><span class="o">=</span><span class="kc">NaN</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">Yb</span><span class="o">=</span><span class="kc">NaN</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">Kb</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">Oa</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span></div><div class='line' id='LC169'><span class="kd">function</span> <span class="nx">pf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\sFROM\s/i</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">2</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">match</span><span class="p">(</span><span class="sr">/\s*?(SELECT|INSERT|UPDATE|DELETE)\s+(.*)/i</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">3</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">toUpperCase</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;SELECT&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="nx">nc</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;INSERT&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="nx">K</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;UPDATE&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="nx">K</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;DELETE&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="nx">K</span><span class="p">;</span><span class="k">else</span> <span class="k">return</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nx">trim</span><span class="p">(),</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/^(MIN|MAX|COUNT|AVG|SUM)/i</span><span class="p">);</span><span class="nx">e</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">toUpperCase</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^(MIN|MAX|COUNT|AVG|SUM)/i</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">trim</span><span class="p">())</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="s2">&quot;(&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;)&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">?</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span></div><div class='line' id='LC170'><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="k">new</span> <span class="nx">td</span><span class="p">(</span><span class="s2">&quot;missing closing parentheses&quot;</span><span class="p">));</span><span class="nx">a</span><span class="p">.</span><span class="nx">l</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="sr">/(ORDER BY|LIMIT|OFFSET)/i</span><span class="p">);</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">c</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">))</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="sr">/WHERE/i</span><span class="p">);</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">c</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="mi">6</span><span class="p">).</span><span class="nx">trim</span><span class="p">(),</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">))</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">trim</span><span class="p">().</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">).</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">Ca</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">Ca</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;&#39;&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">trim</span><span class="p">()})}}}</span></div><div class='line' id='LC171'><span class="kd">function</span> <span class="nx">qf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">H</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">H</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;?&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="nx">pf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">H</span><span class="p">)}</span><span class="nx">a</span><span class="p">.</span><span class="nx">h</span><span class="o">=</span><span class="nx">rf</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">h</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">Oa</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="sr">/OFFSET\s+(\d+)/i</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">);</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">Yb</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="mi">10</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="sr">/OFFSET/i</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="sr">/LIMIT\s+(\d+)/i</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">))</span><span class="nx">a</span><span class="p">.</span><span class="nx">Wb</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="mi">10</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="sr">/LIMIT/i</span><span class="p">),</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">);(</span><span class="nx">c</span><span class="o">=</span><span class="sr">/ORDER BY\s+(.+)/i</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">)))</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">trim</span><span class="p">(),(</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/(ASC|DESC)/i</span><span class="p">))</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">Kb</span><span class="o">=</span><span class="s2">&quot;DESC&quot;</span><span class="o">==</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">toUpperCase</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\s+(ASC|DESC)/i</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">))</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">Kb</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">i</span><span class="o">=</span><span class="nx">Ca</span><span class="p">(</span><span class="nx">Ca</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="p">),</span><span class="s2">&quot;&#39;&quot;</span><span class="p">))</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">i</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="k">return</span><span class="s2">&quot;&quot;</span><span class="p">}</span></div><div class='line' id='LC172'><span class="kd">function</span> <span class="nx">sf</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">l</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">l</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">Ca</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">trim</span><span class="p">(),</span><span class="s1">&#39;&quot;&#39;</span><span class="p">)})}</span><span class="nx">t</span><span class="p">.</span><span class="nx">toJSON</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">sql</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">H</span><span class="p">}};</span></div><div class='line' id='LC173'><span class="kd">function</span> <span class="nx">rf</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">Oa</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">qa</span><span class="o">==</span><span class="nx">a</span><span class="p">})}</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="sr">/(.+?)(&lt;=|&gt;=|=|&gt;|&lt;)(.+)/i</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;AND&quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">trim</span><span class="p">(),</span><span class="nx">l</span><span class="o">=</span><span class="nx">Ca</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">Ca</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="s2">&quot;&#39;&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="mi">3</span><span class="p">].</span><span class="nx">trim</span><span class="p">(),</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="o">==</span><span class="nx">n</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="s1">&#39;&quot;&#39;</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">?</span><span class="nx">Ca</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="o">==</span><span class="nx">n</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="s2">&quot;&#39;&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">?</span><span class="nx">Ca</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="s2">&quot;&#39;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">n</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="k">new</span> <span class="nx">Qc</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">h</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">n</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">l</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">l</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">vb</span><span class="p">(</span><span class="nx">h</span><span class="p">),</span><span class="o">!</span><span class="nx">c</span><span class="p">[</span><span class="nx">l</span><span class="p">])</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">Oa</span><span class="o">=</span><span class="s1">&#39;where clause &quot;&#39;</span><span class="o">+</span><span class="nx">g</span><span class="o">+</span><span class="s1">&#39;&quot; conflict&#39;</span><span class="p">,</span><span class="kc">null</span><span class="p">}</span><span class="k">else</span> <span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">h</span><span class="p">)}</span><span class="k">else</span> <span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">Oa</span><span class="o">=</span><span class="s1">&#39;Invalid clause &quot;&#39;</span><span class="o">+</span></div><div class='line' id='LC174'><span class="nx">g</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">,</span><span class="kc">null</span><span class="p">}</span><span class="k">else</span> <span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">Oa</span><span class="o">=</span><span class="s1">&#39;Invalid clause &quot;&#39;</span><span class="o">+</span><span class="nx">g</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">,</span><span class="kc">null</span><span class="p">}</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="nx">t</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;query:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">H</span><span class="p">};</span><span class="kd">function</span> <span class="nx">tf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">Bd</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">tf</span><span class="p">,</span><span class="nx">Bd</span><span class="p">);</span><span class="nx">t</span><span class="o">=</span><span class="nx">tf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.core.req.IDBCursor&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">Va</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">result</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">N</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">key</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">primaryKey</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">N</span><span class="p">()};</span></div><div class='line' id='LC175'><span class="nx">t</span><span class="p">.</span><span class="nx">openCursor</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">p</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="nx">m</span><span class="p">;</span><span class="nx">p</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="nx">la</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">Va</span><span class="p">,</span><span class="nx">p</span><span class="p">);</span><span class="nx">p</span><span class="p">.</span><span class="nx">N</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">p</span><span class="p">.</span><span class="nx">e</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">m</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="o">+</span><span class="s2">&quot; opening &quot;</span><span class="p">;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">+=</span><span class="s2">&quot;{&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="o">?</span><span class="nx">d</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;;&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;}&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;}&quot;</span><span class="p">);</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">m</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="p">.</span><span class="nx">objectStore</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">k</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">J</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">index</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">J</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="o">?!</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">lower</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">e</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">upper</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="o">?!!</span><span class="nx">e</span><span class="p">.</span><span class="nx">lowerOpen</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">?!!</span><span class="nx">e</span><span class="p">.</span><span class="nx">upperOpen</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">Hc</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">reverse</span><span class="o">?</span><span class="k">new</span> <span class="nx">O</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">g</span><span class="p">)</span><span class="o">:</span><span class="k">new</span> <span class="nx">O</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">e</span><span class="p">));</span><span class="kd">var</span> <span class="nx">m</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">Ka</span><span class="o">?</span><span class="nx">f</span><span class="o">?</span><span class="nx">m</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">R</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">openKeyCursor</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">R</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="o">!=</span><span class="nx">e</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">openKeyCursor</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span></div><div class='line' id='LC176'><span class="nx">f</span><span class="p">.</span><span class="nx">openKeyCursor</span><span class="p">()</span><span class="o">:</span><span class="nx">m</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">R</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">openCursor</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">R</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="o">!=</span><span class="nx">e</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">openCursor</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">openCursor</span><span class="p">()</span><span class="o">:</span><span class="nx">f</span><span class="o">?</span><span class="nx">m</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">R</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">openCursor</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">R</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="o">!=</span><span class="nx">e</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">openCursor</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">openCursor</span><span class="p">()</span><span class="o">:</span><span class="nx">m</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">R</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">openCursor</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">R</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="o">!=</span><span class="nx">e</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">openCursor</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">openCursor</span><span class="p">();</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">m</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">error</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">p</span><span class="p">.</span><span class="nx">Ob</span><span class="p">(</span><span class="nx">b</span><span class="p">)};</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">result</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">pc</span><span class="p">.</span><span class="nx">cmp</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">key</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">reverse</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">==</span><span class="nx">f</span><span class="p">)</span><span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">key</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">primaryKey</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">value</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">==-</span><span class="nx">f</span><span class="p">)</span><span class="nx">d</span><span class="p">[</span><span class="s2">&quot;continue&quot;</span><span class="p">](</span><span class="nx">a</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span></div><div class='line' id='LC177'><span class="nx">b</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">pc</span><span class="p">.</span><span class="nx">cmp</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">primaryKey</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">==</span><span class="nx">f</span><span class="p">)</span><span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">key</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">primaryKey</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">value</span><span class="p">);</span><span class="k">else</span> <span class="nx">d</span><span class="p">[</span><span class="s2">&quot;continue&quot;</span><span class="p">]();</span><span class="k">else</span> <span class="nx">d</span><span class="p">[</span><span class="s2">&quot;continue&quot;</span><span class="p">]()}</span><span class="k">else</span> <span class="nx">c</span><span class="p">()}</span><span class="o">:</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="nx">m</span><span class="p">,</span><span class="nx">p</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="nx">la</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">Va</span><span class="p">,</span><span class="nx">p</span><span class="p">))};</span><span class="nx">t</span><span class="p">.</span><span class="nx">ab</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">update</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">result</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">result</span><span class="p">)};</span><span class="nx">a</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">od</span><span class="p">(</span><span class="s2">&quot;cursor gone&quot;</span><span class="p">);};</span></div><div class='line' id='LC178'><span class="nx">t</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">result</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="s2">&quot;delete&quot;</span><span class="p">]();</span><span class="nx">a</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">r</span><span class="p">(</span><span class="mi">1</span><span class="p">)};</span><span class="nx">a</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">od</span><span class="p">(</span><span class="s2">&quot;cursor gone&quot;</span><span class="p">);};</span><span class="nx">t</span><span class="p">.</span><span class="nx">advance</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">result</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">==</span><span class="nx">a</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="s2">&quot;continue&quot;</span><span class="p">]();</span><span class="k">else</span> <span class="nx">b</span><span class="p">.</span><span class="nx">advance</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span></div><div class='line' id='LC179'><span class="nx">t</span><span class="p">.</span><span class="nx">Ra</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">result</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">pc</span><span class="p">.</span><span class="nx">cmp</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">primaryKey</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">!=</span><span class="nx">c</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">Fc</span><span class="p">(</span><span class="s1">&#39;continuing primary key &quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s1">&#39;&quot; must higher than current primary key &quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">primaryKey</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">result</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">pc</span><span class="p">.</span><span class="nx">cmp</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">primaryKey</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="mi">0</span><span class="o">==</span><span class="nx">c</span><span class="o">||</span><span class="mi">1</span><span class="o">==</span><span class="nx">c</span><span class="o">&amp;&amp;!</span><span class="nx">d</span><span class="p">.</span><span class="nx">reverse</span><span class="o">||-</span><span class="mi">1</span><span class="o">==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">reverse</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="nx">la</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">Va</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">N</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">key</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">e</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">primaryKey</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">);</span><span class="k">else</span> <span class="nx">b</span><span class="p">[</span><span class="s2">&quot;continue&quot;</span><span class="p">]();</span><span class="k">else</span> <span class="nx">d</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="nx">la</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">Va</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">N</span><span class="p">()};</span><span class="nx">b</span><span class="p">[</span><span class="s2">&quot;continue&quot;</span><span class="p">]()};</span></div><div class='line' id='LC180'><span class="nx">t</span><span class="p">.</span><span class="nx">Ea</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">result</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="s2">&quot;continue&quot;</span><span class="p">](</span><span class="nx">a</span><span class="p">);</span><span class="k">else</span> <span class="nx">b</span><span class="p">[</span><span class="s2">&quot;continue&quot;</span><span class="p">]()};</span><span class="nx">t</span><span class="p">.</span><span class="nx">ea</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">tf</span><span class="p">.</span><span class="nx">p</span><span class="p">.</span><span class="nx">ea</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;IDB&quot;</span><span class="o">+</span><span class="nx">tf</span><span class="p">.</span><span class="nx">p</span><span class="p">.</span><span class="nx">toString</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">uf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">uf</span><span class="p">,</span><span class="nx">xd</span><span class="p">);</span><span class="nx">t</span><span class="o">=</span><span class="nx">uf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.crud.req.IndexedDb&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">Ua</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">objectStore</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]).</span><span class="nx">count</span><span class="p">();</span><span class="nx">f</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">result</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">;</span><span class="nx">e</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">(</span><span class="nx">e</span><span class="p">)};</span><span class="nx">f</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">error</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}}</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[];</span><span class="mi">0</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,[])</span><span class="o">:</span><span class="nx">c</span><span class="p">(</span><span class="mi">0</span><span class="p">)};</span></div><div class='line' id='LC181'><span class="nx">t</span><span class="p">.</span><span class="nx">tb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">objectStore</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; addObject: &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">v</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">result</span><span class="p">)};</span><span class="nx">f</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">error</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}};</span></div><div class='line' id='LC182'><span class="nx">t</span><span class="p">.</span><span class="nx">Gb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">objectStore</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39; putObject to store &quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s1">&#39;&quot; &#39;</span><span class="o">+</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot; key: &quot;</span><span class="o">+</span><span class="nx">d</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">));</span><span class="kd">var</span> <span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">v</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">result</span><span class="p">)};</span><span class="nx">f</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="s2">&quot;DataError&quot;</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">name</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">W</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nx">kd</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;: &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">70</span><span class="p">)));</span><span class="nx">d</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">error</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}};</span></div><div class='line' id='LC183'><span class="nx">t</span><span class="p">.</span><span class="nx">ub</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">m</span><span class="p">){</span><span class="kd">var</span> <span class="nx">q</span><span class="p">;</span><span class="nx">q</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="nx">d</span><span class="o">?</span><span class="nx">n</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">m</span><span class="p">],</span><span class="nx">d</span><span class="p">[</span><span class="nx">m</span><span class="p">])</span><span class="o">:</span><span class="nx">n</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">m</span><span class="p">]);</span><span class="nx">q</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">g</span><span class="o">++</span><span class="p">;</span><span class="nx">f</span><span class="p">[</span><span class="nx">m</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">result</span><span class="p">;</span><span class="nx">g</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">l</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">m</span><span class="o">+</span><span class="mi">10</span><span class="p">,</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">(</span><span class="nx">b</span><span class="p">))};</span><span class="nx">q</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="nx">g</span><span class="o">++</span><span class="p">;</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">error</span><span class="p">;</span><span class="nx">F</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39; add request to &quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s1">&#39;&quot; cause &#39;</span><span class="o">+</span><span class="nx">n</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s1">&#39; for object &quot;&#39;</span><span class="o">+</span><span class="nx">ge</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">m</span><span class="p">])</span><span class="o">+</span><span class="s1">&#39;&quot; at index &#39;</span><span class="o">+</span><span class="nx">m</span><span class="o">+</span><span class="s2">&quot; of &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot; objects.&quot;</span><span class="p">);</span><span class="nx">f</span><span class="p">[</span><span class="nx">m</span><span class="p">]</span><span class="o">=</span><span class="nx">n</span><span class="p">;</span><span class="nx">l</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">g</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">l</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">m</span><span class="o">+</span><span class="mi">10</span><span class="p">,</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">(</span><span class="nx">d</span><span class="p">))}}</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">l</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">objectStore</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; addObjects: &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span></div><div class='line' id='LC184'><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot; objects&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">10</span><span class="o">&gt;</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">m</span><span class="o">++</span><span class="p">)</span><span class="nx">e</span><span class="p">(</span><span class="nx">m</span><span class="p">);</span><span class="k">else</span> <span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,[])};</span></div><div class='line' id='LC185'><span class="nx">t</span><span class="p">.</span><span class="nx">Hb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">m</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">c</span><span class="p">[</span><span class="nx">m</span><span class="p">])</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;empty object at &quot;</span><span class="o">+</span><span class="nx">m</span><span class="o">+</span><span class="s2">&quot; of &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">),</span><span class="nx">g</span><span class="o">++</span><span class="p">,</span><span class="nx">g</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="nx">m</span><span class="o">+</span><span class="mi">10</span><span class="p">;</span><span class="nx">q</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">(</span><span class="nx">q</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">r</span><span class="p">;</span><span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="nx">d</span><span class="o">?</span><span class="nx">n</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">m</span><span class="p">],</span><span class="nx">d</span><span class="p">[</span><span class="nx">m</span><span class="p">])</span><span class="o">:</span><span class="nx">n</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">m</span><span class="p">]);</span><span class="nx">r</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">g</span><span class="o">++</span><span class="p">;</span><span class="nx">f</span><span class="p">[</span><span class="nx">m</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">result</span><span class="p">;</span><span class="nx">g</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">m</span><span class="o">+</span><span class="mi">10</span><span class="p">,</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">(</span><span class="nx">b</span><span class="p">))};</span><span class="nx">r</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="nx">g</span><span class="o">++</span><span class="p">;</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">error</span><span class="p">;</span><span class="nx">H</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39; put request to &quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s1">&#39;&quot; cause &#39;</span><span class="o">+</span><span class="nx">n</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s1">&#39; for object &quot;&#39;</span><span class="o">+</span><span class="nx">ge</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">m</span><span class="p">])</span><span class="o">+</span><span class="s1">&#39;&quot; at index &#39;</span><span class="o">+</span><span class="nx">m</span><span class="o">+</span><span class="s2">&quot; of &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot; objects.&quot;</span><span class="p">);</span><span class="nx">f</span><span class="p">[</span><span class="nx">m</span><span class="p">]</span><span class="o">=</span><span class="nx">n</span><span class="p">;</span><span class="nx">h</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">g</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span></div><div class='line' id='LC186'><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">m</span><span class="o">+</span><span class="mi">10</span><span class="p">,</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">(</span><span class="nx">d</span><span class="p">))}}</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">objectStore</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; put &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s1">&#39; objects to store &quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">10</span><span class="o">&gt;</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">m</span><span class="o">++</span><span class="p">)</span><span class="nx">e</span><span class="p">(</span><span class="nx">m</span><span class="p">);</span><span class="k">else</span> <span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,[])};</span></div><div class='line' id='LC187'><span class="nx">t</span><span class="p">.</span><span class="nx">Eb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">l</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">l</span><span class="p">],</span><span class="nx">p</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">k</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">objectStore</span><span class="p">(</span><span class="nx">p</span><span class="p">),</span><span class="nx">r</span><span class="p">;</span><span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="o">===</span><span class="nx">q</span><span class="p">.</span><span class="nx">keyPath</span><span class="o">?</span><span class="nx">q</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">l</span><span class="p">],</span><span class="nx">m</span><span class="p">.</span><span class="nx">id</span><span class="p">)</span><span class="o">:</span><span class="nx">q</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">l</span><span class="p">]);</span><span class="nx">r</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">f</span><span class="o">++</span><span class="p">;</span><span class="nx">e</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">result</span><span class="p">;</span><span class="nx">f</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">l</span><span class="o">+</span><span class="mi">10</span><span class="p">,</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">(</span><span class="nx">c</span><span class="p">))};</span><span class="nx">r</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">f</span><span class="o">++</span><span class="p">;</span><span class="nx">F</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;request result &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s1">&#39; error when put keys to &quot;&#39;</span><span class="o">+</span><span class="nx">p</span><span class="o">+</span><span class="s1">&#39;&quot; for object &quot;&#39;</span><span class="o">+</span><span class="nx">ge</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">l</span><span class="p">])</span><span class="o">+</span><span class="s1">&#39;&quot; at index &#39;</span><span class="o">+</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot; of &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot; objects.&quot;</span><span class="p">);</span><span class="nx">e</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">error</span><span class="p">;</span><span class="nx">g</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">f</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">l</span><span class="o">+</span><span class="mi">10</span><span class="p">,</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">(</span><span class="nx">c</span><span class="p">))}}</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span></div><div class='line' id='LC188'><span class="s2">&quot; putByKeys: of &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot; objects&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">10</span><span class="o">&gt;</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">l</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="p">(</span><span class="nx">l</span><span class="p">);</span><span class="k">else</span> <span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">)};</span></div><div class='line' id='LC189'><span class="nx">t</span><span class="p">.</span><span class="nx">Fb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">{},</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;\n&quot;</span><span class="p">,</span><span class="nx">m</span><span class="p">),</span><span class="nx">d</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">r</span><span class="p">;</span><span class="o">-</span><span class="mi">1</span><span class="o">==</span><span class="nx">b</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">m</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">E</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">E</span><span class="o">&lt;</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">E</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">U</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">E</span><span class="p">];</span><span class="nx">q</span><span class="p">[</span><span class="nx">E</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">q</span><span class="p">[</span><span class="nx">E</span><span class="p">]</span><span class="o">==</span><span class="nx">He</span><span class="o">?</span><span class="nx">U</span><span class="o">=</span><span class="nx">Ca</span><span class="p">(</span><span class="nx">U</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;INTEGER&quot;</span><span class="o">==</span><span class="nx">q</span><span class="p">[</span><span class="nx">E</span><span class="p">]</span><span class="o">?</span><span class="nx">U</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">U</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;NUMERIC&quot;</span><span class="o">==</span><span class="nx">q</span><span class="p">[</span><span class="nx">E</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">U</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">U</span><span class="p">)));</span><span class="nx">a</span><span class="p">[</span><span class="nx">p</span><span class="p">[</span><span class="nx">E</span><span class="p">]]</span><span class="o">=</span><span class="nx">U</span><span class="p">}</span><span class="kd">var</span> <span class="nx">ra</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">ra</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">n</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">result</span><span class="p">);</span><span class="nx">d</span><span class="o">?</span><span class="nx">c</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">:</span><span class="nx">g</span><span class="p">()};</span><span class="nx">ra</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="s2">&quot;DataError&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">kd</span><span class="p">(</span><span class="nx">h</span><span class="o">+</span><span class="s2">&quot;: &quot;</span><span class="o">+</span><span class="nx">r</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">70</span><span class="p">)));</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">c</span><span class="p">(</span><span class="nx">ra</span><span class="p">.</span><span class="nx">error</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}}</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span></div><div class='line' id='LC190'><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">objectStore</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="p">[],</span><span class="nx">m</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;\n&quot;</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">m</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">q</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">je</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">p</span><span class="p">[</span><span class="nx">a</span><span class="p">]);</span><span class="nx">r</span><span class="o">?</span><span class="nx">q</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">type</span><span class="o">:</span><span class="nx">p</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">==</span><span class="nx">h</span><span class="p">.</span><span class="nx">keyPath</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">q</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">type</span><span class="p">)}</span><span class="nx">m</span><span class="o">++</span><span class="p">;</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; Loading data  of &quot;</span><span class="o">+</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot;-fields record to &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">);</span><span class="nx">g</span><span class="p">()};</span></div><div class='line' id='LC191'><span class="nx">t</span><span class="p">.</span><span class="nx">gb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">objectStore</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; clearById: &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">openCursor</span><span class="p">(</span><span class="nx">Kc</span><span class="p">.</span><span class="nx">only</span><span class="p">(</span><span class="nx">c</span><span class="p">));</span><span class="nx">e</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">result</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="s2">&quot;delete&quot;</span><span class="p">]();</span><span class="nx">c</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">1</span><span class="p">)};</span><span class="nx">c</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">error</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}}</span><span class="k">else</span> <span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">0</span><span class="p">)};</span><span class="nx">e</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">error</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}};</span></div><div class='line' id='LC192'><span class="nx">t</span><span class="p">.</span><span class="nx">Jb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="nx">h</span><span class="o">++</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">&gt;=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="nx">b</span><span class="p">[</span><span class="nx">h</span><span class="p">].</span><span class="nx">k</span><span class="o">!=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">h</span><span class="p">].</span><span class="nx">k</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">objectStore</span><span class="p">(</span><span class="nx">e</span><span class="p">));</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="s2">&quot;delete&quot;</span><span class="p">](</span><span class="nx">b</span><span class="p">[</span><span class="nx">h</span><span class="p">].</span><span class="nx">id</span><span class="p">);</span><span class="nx">l</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="o">++</span><span class="p">;</span><span class="nx">c</span><span class="p">(</span><span class="nx">h</span><span class="p">)};</span><span class="nx">l</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">g</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">error</span><span class="p">;</span><span class="nx">c</span><span class="p">(</span><span class="nx">h</span><span class="p">)}}}</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; removeByKeys: &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot; keys&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="p">[];</span><span class="nx">c</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)};</span></div><div class='line' id='LC193'><span class="nx">t</span><span class="p">.</span><span class="nx">hb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">objectStore</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">count</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; clearByKeyRange: &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">result</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="s2">&quot;delete&quot;</span><span class="p">](</span><span class="nx">c</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">)};</span><span class="nx">h</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">error</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}};</span><span class="nx">e</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">error</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}};</span><span class="nx">t</span><span class="p">.</span><span class="nx">xb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">objectStore</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="s2">&quot;delete&quot;</span><span class="p">](</span><span class="nx">c</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">)};</span><span class="nx">e</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">error</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}};</span></div><div class='line' id='LC194'><span class="nx">t</span><span class="p">.</span><span class="nx">Ib</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">objectStore</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">index</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; clearByIndexKeyRange: &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">openCursor</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">result</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="s2">&quot;delete&quot;</span><span class="p">]();</span><span class="nx">d</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">h</span><span class="o">++</span><span class="p">;</span><span class="nx">c</span><span class="p">[</span><span class="s2">&quot;continue&quot;</span><span class="p">]()};</span><span class="nx">d</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">error</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">c</span><span class="p">[</span><span class="s2">&quot;continue&quot;</span><span class="p">]()}}</span><span class="k">else</span> <span class="mi">0</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">)};</span><span class="nx">g</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">error</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}};</span></div><div class='line' id='LC195'><span class="nx">t</span><span class="p">.</span><span class="nx">Ta</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; clearByStores: &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">objectStore</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]).</span><span class="nx">clear</span><span class="p">();</span><span class="nx">f</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="o">++</span><span class="p">;</span><span class="nx">d</span><span class="o">==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">)};</span><span class="nx">f</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">d</span><span class="o">++</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">d</span><span class="o">==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">error</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}}};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Ya</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">objectStore</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">get</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">H</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; record &quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">result</span><span class="o">?</span><span class="s2">&quot; &quot;</span><span class="o">:</span><span class="s2">&quot; not &quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; exists.&quot;</span><span class="p">);</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">result</span><span class="p">)};</span><span class="nx">e</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">error</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}};</span></div><div class='line' id='LC196'><span class="nx">t</span><span class="p">.</span><span class="nx">Cb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">])</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">++</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">==</span><span class="nx">h</span><span class="p">)</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="mi">10</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">(</span><span class="nx">n</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">m</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">]);</span><span class="nx">m</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">f</span><span class="o">++</span><span class="p">;</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">result</span><span class="p">;</span><span class="nx">f</span><span class="o">==</span><span class="nx">h</span><span class="o">?</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="mi">10</span><span class="p">,</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">(</span><span class="nx">c</span><span class="p">))};</span><span class="nx">m</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">f</span><span class="o">++</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">error</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}}</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">objectStore</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">h</span><span class="o">+</span><span class="s2">&quot; ids&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">10</span><span class="o">&gt;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">else</span> <span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,[])};</span></div><div class='line' id='LC197'><span class="nx">t</span><span class="p">.</span><span class="nx">Db</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">objectStore</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">k</span><span class="p">).</span><span class="nx">get</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">id</span><span class="p">);</span><span class="nx">l</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="nx">e</span><span class="o">++</span><span class="p">;</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">result</span><span class="p">;</span><span class="nx">e</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="o">+</span><span class="mi">10</span><span class="p">,</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">(</span><span class="nx">h</span><span class="p">))};</span><span class="nx">l</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">e</span><span class="o">++</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">error</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}}</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[];</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot; ids&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">10</span><span class="o">&gt;</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="k">else</span> <span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,[])};</span></div><div class='line' id='LC198'><span class="nx">t</span><span class="p">.</span><span class="nx">Ga</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">ye</span><span class="p">(</span><span class="s2">&quot;unique count not available in IndexedDB&quot;</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">objectStore</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="p">(</span><span class="nx">d</span><span class="o">?</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">d</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">c</span><span class="o">?</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">W</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="p">;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">d</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">index</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="nx">c</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">count</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">count</span><span class="p">())</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="nx">c</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">count</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">count</span><span class="p">();</span><span class="nx">f</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">result</span><span class="p">)};</span><span class="nx">f</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">error</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}};</span></div><div class='line' id='LC199'><span class="nx">t</span><span class="p">.</span><span class="nx">Z</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="p">[],</span><span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">objectStore</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">q</span><span class="o">=</span><span class="nx">f</span><span class="o">?</span><span class="nx">l</span><span class="o">?</span><span class="s2">&quot;prevunique&quot;</span><span class="o">:</span><span class="s2">&quot;prev&quot;</span><span class="o">:</span><span class="nx">l</span><span class="o">?</span><span class="s2">&quot;nextunique&quot;</span><span class="o">:</span><span class="s2">&quot;next&quot;</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="p">(</span><span class="nx">d</span><span class="o">?</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">d</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">e</span><span class="o">?</span><span class="nx">W</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">+=</span><span class="s2">&quot; reverse&quot;</span><span class="p">);</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">+=</span><span class="s2">&quot; unique&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">0</span><span class="p">])){</span><span class="nx">l</span><span class="o">=</span><span class="nx">d</span><span class="o">?!</span><span class="nx">v</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">:!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">z</span><span class="o">=</span><span class="nx">e</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">lower</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">A</span><span class="o">=</span><span class="nx">e</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">upper</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">I</span><span class="o">=</span><span class="nx">e</span><span class="o">?!!</span><span class="nx">e</span><span class="p">.</span><span class="nx">lowerOpen</span><span class="o">:!</span><span class="mi">1</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">?!!</span><span class="nx">e</span><span class="p">.</span><span class="nx">upperOpen</span><span class="o">:!</span><span class="mi">1</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">Hc</span><span class="p">(</span><span class="nx">f</span><span class="o">?</span><span class="k">new</span> <span class="nx">O</span><span class="p">(</span><span class="nx">z</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">I</span><span class="p">,</span><span class="nx">l</span><span class="p">)</span><span class="o">:</span><span class="k">new</span> <span class="nx">O</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">e</span><span class="p">));</span><span class="nx">c</span><span class="o">+=</span><span class="s2">&quot; starting from &quot;</span><span class="o">+</span><span class="nx">W</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="nx">v</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">+=</span><span class="s2">&quot;, &quot;</span><span class="o">+</span><span class="nx">W</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">1</span><span class="p">]))}</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="kd">var</span> <span class="nx">L</span><span class="p">;</span><span class="nx">L</span><span class="o">=</span><span class="mi">1</span><span class="o">==</span><span class="nx">b</span><span class="o">||</span><span class="mi">2</span><span class="o">==</span><span class="nx">b</span><span class="o">||</span><span class="mi">3</span><span class="o">==</span><span class="nx">b</span><span class="o">?</span><span class="nx">d</span><span class="o">?</span><span class="nx">p</span><span class="p">.</span><span class="nx">index</span><span class="p">(</span><span class="nx">d</span><span class="p">).</span><span class="nx">openKeyCursor</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">q</span><span class="p">)</span><span class="o">:</span><span class="nx">p</span><span class="p">.</span><span class="nx">openCursor</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">q</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="o">?</span><span class="nx">p</span><span class="p">.</span><span class="nx">index</span><span class="p">(</span><span class="nx">d</span><span class="p">).</span><span class="nx">openCursor</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span></div><div class='line' id='LC200'><span class="nx">q</span><span class="p">)</span><span class="o">:</span><span class="nx">p</span><span class="p">.</span><span class="nx">openCursor</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">q</span><span class="p">);</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">L</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">result</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">E</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">){</span><span class="nx">E</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">advance</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="k">return</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">0</span><span class="p">]))</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">1</span><span class="p">])){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">pc</span><span class="p">.</span><span class="nx">cmp</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">key</span><span class="p">,</span><span class="nx">n</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">l</span><span class="o">=</span><span class="nx">f</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">pc</span><span class="p">.</span><span class="nx">cmp</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">primaryKey</span><span class="p">,</span><span class="nx">n</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">e</span><span class="p">){</span><span class="nx">E</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="p">[</span><span class="s2">&quot;continue&quot;</span><span class="p">]();</span><span class="k">return</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">==</span><span class="nx">l</span><span class="p">)</span><span class="nx">E</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="nx">c</span><span class="p">[</span><span class="s2">&quot;continue&quot;</span><span class="p">]();</span><span class="k">return</span><span class="p">}}</span><span class="k">else</span> <span class="nx">E</span><span class="o">=!</span><span class="mi">0</span><span class="p">}</span><span class="k">else</span> <span class="nx">E</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">else</span> <span class="nx">E</span><span class="o">=!</span><span class="mi">0</span><span class="p">}</span><span class="mi">1</span><span class="o">==</span><span class="nx">b</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">key</span><span class="p">)</span><span class="o">:</span><span class="mi">2</span><span class="o">==</span><span class="nx">b</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">primaryKey</span><span class="p">)</span><span class="o">:</span><span class="mi">3</span><span class="o">==</span><span class="nx">b</span><span class="o">?</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="p">{},</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">key</span><span class="p">),</span><span class="nx">p</span><span class="p">.</span><span class="nx">keyPath</span><span class="o">?</span><span class="nx">l</span><span class="p">[</span><span class="nx">p</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">primaryKey</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">_ROWID_</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">primaryKey</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">l</span><span class="p">))</span><span class="o">:</span><span class="mi">4</span><span class="o">==</span><span class="nx">b</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">value</span><span class="p">)</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">c</span><span class="p">.</span><span class="nx">key</span><span class="p">,</span></div><div class='line' id='LC201'><span class="nx">c</span><span class="p">.</span><span class="nx">primaryKey</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">value</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="s2">&quot;continue&quot;</span><span class="p">]();</span><span class="k">else</span> <span class="nx">n</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">wd</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">key</span><span class="p">),</span><span class="nx">n</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">wd</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">primaryKey</span><span class="p">)),</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">m</span><span class="p">)}</span><span class="k">else</span> <span class="nx">n</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">),</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">m</span><span class="p">)};</span><span class="nx">L</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">L</span><span class="p">.</span><span class="nx">error</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}};</span><span class="kd">function</span> <span class="nx">vf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">vf</span><span class="p">,</span><span class="nx">uf</span><span class="p">);</span><span class="nx">vf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.core.req.IndexedDb&quot;</span><span class="p">);</span><span class="nx">vf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="k">new</span> <span class="nx">tf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">wf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">}</span><span class="nx">wf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.sql.req.nosql.Node&quot;</span><span class="p">);</span><span class="nx">wf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toJSON</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">sql</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">}};</span><span class="nx">wf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="nx">aa</span><span class="p">(</span><span class="s2">&quot;idb.Node:&quot;</span><span class="p">);</span></div><div class='line' id='LC202'><span class="nx">wf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Pb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">Ra</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">Wb</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">?</span><span class="mi">100</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">Yb</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">i</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">sf</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">Kb</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">l</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">l</span><span class="o">=</span><span class="nx">Ic</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">a</span><span class="p">);</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">Cc</span><span class="p">(</span><span class="s2">&quot;too many conditions.&quot;</span><span class="p">);</span><span class="kc">null</span><span class="o">===</span><span class="nx">h</span><span class="o">||</span><span class="nx">Id</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">b</span><span class="o">||</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">==</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">qc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{},</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">h</span><span class="p">[</span><span class="nx">d</span><span class="p">]]</span><span class="o">=</span><span class="nx">qc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">[</span><span class="nx">d</span><span class="p">]);</span><span class="k">return</span> <span class="nx">c</span><span class="p">}));</span><span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">)});</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">qa</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; executing on&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">;</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="o">+=</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">);</span><span class="nx">m</span><span class="o">+=</span></div><div class='line' id='LC203'><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">Mc</span><span class="p">(</span><span class="nx">l</span><span class="p">);</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">m</span><span class="p">);</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">keyPath</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">Z</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">v</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">keyPath</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">Z</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">Z</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">xf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">wf</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="nx">C</span><span class="p">(</span><span class="nx">xf</span><span class="p">,</span><span class="nx">wf</span><span class="p">);</span></div><div class='line' id='LC204'><span class="nx">xf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Pb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">Ra</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">Ic</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">a</span><span class="p">);</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">Cc</span><span class="p">(</span><span class="s2">&quot;too many conditions.&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">qa</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; executing &quot;</span><span class="o">+</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot; on &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">+=</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">);</span><span class="nx">h</span><span class="o">+=</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">Mc</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;COUNT&quot;</span><span class="o">==</span><span class="nx">g</span><span class="p">)</span><span class="nx">f</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">Ga</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">Ga</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">l</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">sf</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">h</span><span class="o">||</span><span class="mi">0</span><span class="o">==</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">fd</span><span class="p">(</span><span class="s2">&quot;field name require for reduce operation: &quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">);</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;MIN&quot;</span><span class="o">==</span><span class="nx">g</span><span class="p">)</span><span class="nx">l</span><span class="o">=</span><span class="nx">yf</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;MAX&quot;</span><span class="o">==</span><span class="nx">g</span><span class="p">)</span><span class="nx">l</span><span class="o">=</span><span class="nx">zf</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;AVG&quot;</span><span class="o">==</span></div><div class='line' id='LC205'><span class="nx">g</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">Af</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;SUM&quot;</span><span class="o">==</span><span class="nx">g</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">Bf</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">$e</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="kd">var</span> <span class="nx">n</span><span class="p">;</span><span class="nx">n</span><span class="o">=</span><span class="nx">v</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">?</span><span class="k">new</span> <span class="nx">Wc</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="k">new</span> <span class="nx">Uc</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="p">,</span><span class="mi">4</span><span class="p">);</span><span class="nx">n</span><span class="p">.</span><span class="nx">load</span><span class="p">(</span><span class="nx">m</span><span class="p">);</span><span class="nx">m</span><span class="p">.</span><span class="nx">s</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)};</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="p">.</span><span class="nx">l</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">b</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">C</span><span class="p">()</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">ra</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="nx">l</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">p</span><span class="p">),</span><span class="nx">m</span><span class="p">.</span><span class="nx">advance</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="nx">p</span><span class="o">++</span><span class="p">)</span><span class="o">:</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)}}};</span><span class="kd">function</span> <span class="nx">Af</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span><span class="p">(</span><span class="nx">c</span><span class="o">*</span><span class="nx">d</span><span class="o">+</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">])</span><span class="o">/</span><span class="p">(</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">Bf</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="o">+</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]}}</span><span class="kd">function</span> <span class="nx">yf</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">return</span> <span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">d</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">d</span><span class="o">:</span><span class="nx">d</span><span class="p">}}</span></div><div class='line' id='LC206'><span class="kd">function</span> <span class="nx">zf</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">return</span> <span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">d</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">d</span><span class="o">:</span><span class="nx">d</span><span class="p">}};</span><span class="kd">function</span> <span class="nx">Ud</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Ud</span><span class="p">,</span><span class="nx">vf</span><span class="p">);</span><span class="nx">Ud</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.sql.req.IndexedDb&quot;</span><span class="p">);</span><span class="nx">Ud</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">executeSql</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">qf</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">td</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">Ra</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">pd</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">sf</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">ke</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">]))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">pd</span><span class="p">(</span><span class="s1">&#39;Index &quot;&#39;</span><span class="o">+</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;&quot; not found in &#39;</span><span class="o">+</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]);(</span><span class="nx">b</span><span class="p">.</span><span class="nx">d</span><span class="o">?</span><span class="k">new</span> <span class="nx">xf</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="k">new</span> <span class="nx">wf</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">)).</span><span class="nx">Pb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">)}</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">$e</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">H</span><span class="p">);};</span><span class="kd">function</span> <span class="nx">Cf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">Bd</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">la</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Cf</span><span class="p">,</span><span class="nx">Bd</span><span class="p">);</span><span class="nx">t</span><span class="o">=</span><span class="nx">Cf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.core.req.WebsqlCursor&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">C</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;f&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">Nb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">Cf</span><span class="p">.</span><span class="nx">p</span><span class="p">.</span><span class="nx">Nb</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">la</span><span class="o">=</span><span class="nx">y</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="nx">je</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">ra</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;u&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">ba</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">u</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">Ke</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">f</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">je</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">J</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="o">=</span><span class="nx">Ke</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">J</span><span class="p">],</span><span class="nx">c</span><span class="p">.</span><span class="nx">type</span><span class="p">)}</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">u</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">Ka</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">Df</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">)}</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">u</span><span class="o">=</span><span class="nx">a</span><span class="p">};</span></div><div class='line' id='LC207'><span class="kd">function</span> <span class="nx">Ef</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">je</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">J</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">J</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">m</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">h</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">lower</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">upper</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">lowerOpen</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">upperOpen</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">reverse</span><span class="o">?</span><span class="nx">l</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="nx">l</span><span class="o">&amp;&amp;-</span><span class="mi">1</span><span class="o">==</span><span class="nx">M</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">g</span><span class="p">)</span><span class="o">?</span><span class="nx">l</span><span class="o">:</span><span class="nx">g</span><span class="o">:</span><span class="nx">h</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">==</span><span class="nx">M</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">g</span><span class="p">)</span><span class="o">?</span><span class="nx">h</span><span class="o">:</span><span class="nx">g</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">O</span><span class="p">.</span><span class="nx">bound</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="o">!!</span><span class="nx">n</span><span class="p">,</span><span class="o">!!</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="o">!=</span><span class="nx">h</span><span class="o">?</span><span class="nx">Kc</span><span class="p">.</span><span class="nx">lowerBound</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="o">!!</span><span class="nx">n</span><span class="p">)</span><span class="o">:</span><span class="nx">Kc</span><span class="p">.</span><span class="nx">upperBound</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="o">!!</span><span class="nx">f</span><span class="p">)}</span><span class="k">else</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">reverse</span><span class="o">?</span><span class="nx">Kc</span><span class="p">.</span><span class="nx">upperBound</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">:</span><span class="nx">Kc</span><span class="p">.</span><span class="nx">lowerBound</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nx">Pe</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">fa</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">reverse</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">unique</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">reverse</span><span class="o">?</span><span class="nx">Kc</span><span class="p">.</span><span class="nx">upperBound</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">Kc</span><span class="p">.</span><span class="nx">lowerBound</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">Pe</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">fa</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">f</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">reverse</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">unique</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">n</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">n</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot; AND &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">n</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">n</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;SELECT &quot;</span><span class="o">+</span></div><div class='line' id='LC208'><span class="nx">e</span><span class="p">.</span><span class="nx">select</span><span class="o">+</span><span class="s2">&quot; FROM &quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">da</span><span class="o">+</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">n</span><span class="o">?</span><span class="s2">&quot; WHERE &quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">n</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">group</span><span class="o">?</span><span class="s2">&quot; GROUP BY &quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">group</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; ORDER BY &quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">W</span><span class="p">;</span><span class="nx">c</span><span class="o">+=</span><span class="s2">&quot; LIMIT 1&quot;</span><span class="p">;</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;: continuePrimary:  SQL: &quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot; : &quot;</span><span class="o">+</span><span class="nx">W</span><span class="p">(</span><span class="nx">d</span><span class="p">));</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">rows</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">ba</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">rows</span><span class="p">.</span><span class="nx">item</span><span class="p">(</span><span class="mi">0</span><span class="p">))</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">ba</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">u</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;get error: &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">message</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">Ob</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">ba</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">u</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">})}</span></div><div class='line' id='LC209'><span class="kd">function</span> <span class="nx">Ff</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=!</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="p">[];</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">c</span><span class="o">?</span><span class="nx">c</span><span class="o">=</span><span class="nx">Se</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">fa</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">la</span><span class="p">.</span><span class="nx">getName</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">m</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">reverse</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">unique</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="o">!=</span><span class="nx">c</span><span class="o">?</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">la</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">la</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">Re</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">fa</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">m</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">reverse</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">unique</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">Oe</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">fa</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">la</span><span class="p">.</span><span class="nx">e</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">m</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">reverse</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">unique</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">+=</span><span class="s2">&quot;, &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot; ASC&quot;</span><span class="p">));</span><span class="nx">c</span><span class="o">+=</span><span class="s2">&quot; LIMIT 1&quot;</span><span class="p">;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">+=</span><span class="s2">&quot; OFFSET &quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">);</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;: continue:  SQL: &quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot; : &quot;</span><span class="o">+</span><span class="nx">W</span><span class="p">(</span><span class="nx">d</span><span class="p">));</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">rows</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">ba</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">rows</span><span class="p">.</span><span class="nx">item</span><span class="p">(</span><span class="mi">0</span><span class="p">))</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">ba</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">u</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;get error: &quot;</span><span class="o">+</span></div><div class='line' id='LC210'><span class="nx">d</span><span class="p">.</span><span class="nx">message</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">Ob</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">ba</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">u</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">})}</span><span class="nx">t</span><span class="p">.</span><span class="nx">ab</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">update</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">ab</span><span class="p">())</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">od</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">C</span><span class="p">();</span><span class="nx">a</span><span class="o">=</span><span class="nx">Ue</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="s2">&quot;REPLACE INTO &quot;</span><span class="o">+</span><span class="nx">Qe</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; (&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">Rb</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;, &quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;) VALUES (&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">dc</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;, &quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">;</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="o">+</span><span class="s1">&#39;: update &quot;&#39;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s1">&#39;&quot; : &#39;</span><span class="o">+</span><span class="nx">W</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">B</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">B</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">r</span><span class="p">(</span><span class="nx">c</span><span class="p">)},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">o</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">});</span><span class="k">return</span> <span class="nx">b</span><span class="p">};</span></div><div class='line' id='LC211'><span class="nx">t</span><span class="p">.</span><span class="nx">advance</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">,</span><span class="nx">d</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="kc">null</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="o">-=</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="o">=!</span><span class="mi">1</span><span class="p">);</span><span class="nx">Ff</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">==</span><span class="nx">M</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">==</span><span class="nx">M</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">Fc</span><span class="p">(</span><span class="s2">&quot;current: &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;;&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot; next: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;;&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">);}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">Fc</span><span class="p">(</span><span class="s2">&quot;current: &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; next: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">N</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">)},</span><span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Ea</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="o">?</span><span class="nx">Ff</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">N</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">advance</span><span class="p">(</span><span class="mi">1</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">openCursor</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">Ff</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">N</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">)};</span></div><div class='line' id='LC212'><span class="nx">t</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">ab</span><span class="p">())</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">od</span><span class="p">;</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;DELETE FROM &quot;</span><span class="o">+</span><span class="nx">Qe</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; WHERE &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; = ?&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">C</span><span class="p">()];</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="o">+</span><span class="s1">&#39;: clear &quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s1">&#39;&quot; : &#39;</span><span class="o">+</span><span class="nx">W</span><span class="p">(</span><span class="nx">c</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">r</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">rowsAffected</span><span class="p">)},</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">o</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">});</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Ra</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">b</span><span class="o">||</span><span class="mi">1</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">reverse</span><span class="o">||-</span><span class="mi">1</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">reverse</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">fd</span><span class="p">(</span><span class="k">this</span><span class="o">+</span><span class="s2">&quot; to continuePrimaryKey  from &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">+</span><span class="s2">&quot; to &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; on &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">R</span><span class="o">+</span><span class="s2">&quot; direction is wrong&quot;</span><span class="p">);</span><span class="nx">Ef</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">N</span><span class="p">,</span><span class="nx">a</span><span class="p">)};</span></div><div class='line' id='LC213'><span class="nx">t</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;WebSql&quot;</span><span class="o">+</span><span class="nx">Cf</span><span class="p">.</span><span class="nx">p</span><span class="p">.</span><span class="nx">toString</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">Gf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Gf</span><span class="p">,</span><span class="nx">xd</span><span class="p">);</span><span class="nx">t</span><span class="o">=</span><span class="nx">Gf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.crud.req.WebSql&quot;</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Df</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">_default_</span><span class="o">?</span><span class="nx">ze</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">_default_</span><span class="p">)</span><span class="o">:</span><span class="p">{};</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">Ke</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">],</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">);</span><span class="kc">null</span><span class="o">!=</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">re</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)}</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">e</span><span class="p">;</span><span class="s2">&quot;_default_&quot;</span><span class="o">==</span><span class="nx">f</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">g</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">multiEntry</span><span class="o">||</span><span class="s2">&quot;DATE&quot;</span><span class="o">!=</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">Ke</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="p">),</span><span class="nx">v</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">Je</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">))}</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="nx">t</span><span class="p">.</span><span class="nx">tb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">Hf</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">,[</span><span class="nx">c</span><span class="p">],[</span><span class="nx">d</span><span class="p">])};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Fb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">throw</span><span class="s2">&quot;not impl&quot;</span><span class="p">;};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Gb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">Hf</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">,[</span><span class="nx">c</span><span class="p">],[</span><span class="nx">d</span><span class="p">])};</span></div><div class='line' id='LC214'><span class="nx">t</span><span class="p">.</span><span class="nx">ub</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">Hf</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)};</span></div><div class='line' id='LC215'><span class="kd">function</span> <span class="nx">Hf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;empty object at &quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot; of &quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">),</span><span class="nx">p</span><span class="o">++</span><span class="p">,</span><span class="nx">p</span><span class="o">==</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">q</span><span class="o">+</span><span class="s2">&quot; success &quot;</span><span class="o">+</span><span class="nx">q</span><span class="p">),</span><span class="nx">R</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">r</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="mi">2</span><span class="p">;</span><span class="nx">I</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="nx">e</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">L</span><span class="p">;</span><span class="nx">L</span><span class="o">=</span><span class="nx">v</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">?</span><span class="nx">Ue</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">g</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span><span class="o">:</span><span class="nx">Ue</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="nx">I</span><span class="o">=</span><span class="nx">n</span><span class="o">+</span><span class="nx">Qe</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; (&quot;</span><span class="o">+</span><span class="nx">L</span><span class="p">.</span><span class="nx">Rb</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;, &quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;) VALUES (&quot;</span><span class="o">+</span><span class="nx">L</span><span class="p">.</span><span class="nx">dc</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;, &quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;);&quot;</span><span class="p">;</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">V</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; SQL: &quot;</span><span class="o">+</span><span class="nx">I</span><span class="o">+</span><span class="s2">&quot; PARAMS: &quot;</span><span class="o">+</span><span class="nx">L</span><span class="p">.</span><span class="nx">B</span><span class="o">+</span><span class="s2">&quot; REQ: &quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot; of &quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="nx">L</span><span class="p">.</span><span class="nx">B</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">q</span><span class="p">){</span><span class="kd">function</span> <span class="nx">I</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="s2">&quot;ydn.db.me:&quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">getName</span><span class="p">(),</span><span class="nx">f</span><span class="o">=</span><span class="nx">n</span><span class="o">+</span><span class="nx">Fa</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; (&quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">.</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;, &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;) VALUES (?, ?)&quot;</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span></div><div class='line' id='LC216'><span class="p">[</span><span class="nx">Oc</span><span class="p">(</span><span class="nx">S</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">type</span><span class="p">),</span><span class="nx">Oc</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">type</span><span class="p">)];</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">V</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; multiEntry &quot;</span><span class="o">+</span><span class="nx">f</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">k</span><span class="p">(),</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;multiEntry index insert error: &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">message</span><span class="p">);</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">})}</span><span class="nx">p</span><span class="o">++</span><span class="p">;</span><span class="kd">var</span> <span class="nx">S</span><span class="o">=</span><span class="nx">v</span><span class="p">(</span><span class="nx">L</span><span class="p">.</span><span class="nx">key</span><span class="p">)</span><span class="o">?</span><span class="nx">L</span><span class="p">.</span><span class="nx">key</span><span class="o">:</span><span class="nx">q</span><span class="p">.</span><span class="nx">insertId</span><span class="p">;</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">q</span><span class="p">.</span><span class="nx">rowsAffected</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">S</span><span class="o">=</span><span class="k">new</span> <span class="nx">jd</span><span class="p">(</span><span class="nx">S</span><span class="o">+</span><span class="s2">&quot; no-op&quot;</span><span class="p">));</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">za</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">rd</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">za</span><span class="o">&lt;</span><span class="nx">rd</span><span class="p">;</span><span class="nx">za</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">lb</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">index</span><span class="p">(</span><span class="nx">za</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">lb</span><span class="p">.</span><span class="nx">multiEntry</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">Db</span><span class="o">=</span><span class="nx">qc</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">lb</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">),</span><span class="nx">uh</span><span class="o">=</span><span class="p">(</span><span class="nx">Db</span><span class="o">?</span><span class="nx">Db</span><span class="p">.</span><span class="nx">length</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">ue</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">ue</span><span class="o">&lt;</span><span class="nx">uh</span><span class="p">;</span><span class="nx">ue</span><span class="o">++</span><span class="p">)</span><span class="nx">I</span><span class="p">(</span><span class="nx">lb</span><span class="p">,</span><span class="nx">Db</span><span class="p">[</span><span class="nx">ue</span><span class="p">])}</span><span class="nx">d</span><span class="o">?</span><span class="nx">R</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">S</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">m</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">S</span><span class="p">,</span><span class="nx">p</span><span class="o">==</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">R</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">r</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">za</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="mi">2</span><span class="p">,</span><span class="nx">za</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nx">za</span><span class="p">,</span><span class="nx">g</span><span class="p">)))},</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="nx">p</span><span class="o">++</span><span class="p">;</span><span class="nx">r</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="mi">6</span><span class="o">==</span><span class="nx">g</span><span class="p">.</span><span class="nx">code</span><span class="o">?</span></div><div class='line' id='LC217'><span class="nx">g</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;ConstraintError&quot;</span><span class="o">:</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;error: &quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">message</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">q</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="nx">R</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">,</span><span class="nx">p</span><span class="o">==</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;success &quot;</span><span class="o">+</span><span class="nx">q</span><span class="p">),</span><span class="nx">R</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">r</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="mi">2</span><span class="p">;</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">e</span><span class="p">)}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">})}</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nx">c</span><span class="o">?</span><span class="s2">&quot;INSERT INTO &quot;</span><span class="o">:</span><span class="s2">&quot;INSERT OR REPLACE INTO &quot;</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">a</span><span class="p">;</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="p">[],</span><span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">V</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; inserting &quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot; objects.&quot;</span><span class="p">,</span><span class="nx">r</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">2</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">h</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">else</span> <span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;success&quot;</span><span class="p">),</span><span class="nx">R</span><span class="p">(</span><span class="nx">b</span><span class="p">,[])}</span><span class="nx">t</span><span class="p">.</span><span class="nx">Hb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">Hf</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)};</span></div><div class='line' id='LC218'><span class="nx">t</span><span class="p">.</span><span class="nx">Eb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,[]);</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">l</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="p">[];</span><span class="nx">H</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;put &quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot; objects to &quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">Te</span><span class="p">(</span><span class="nx">Y</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">)),</span><span class="nx">p</span><span class="o">=</span><span class="nx">n</span><span class="o">?</span><span class="k">void</span> <span class="mi">0</span><span class="o">:</span><span class="p">[],</span><span class="nx">q</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">q</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">q</span><span class="o">++</span><span class="p">)</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">l</span><span class="p">[</span><span class="nx">q</span><span class="p">]]),</span><span class="nx">n</span><span class="o">||</span><span class="nx">p</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">l</span><span class="p">[</span><span class="nx">q</span><span class="p">]].</span><span class="nx">id</span><span class="p">);</span><span class="nx">n</span><span class="o">=</span><span class="nx">Hd</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">n</span><span class="p">.</span><span class="nx">S</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="p">[</span><span class="nx">l</span><span class="p">[</span><span class="nx">c</span><span class="p">]]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="nx">e</span><span class="o">++</span><span class="p">;</span><span class="nx">e</span><span class="o">==</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="o">++</span><span class="p">;</span><span class="nx">e</span><span class="o">==</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)});</span><span class="nx">Hf</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">p</span><span class="p">)},</span><span class="nx">l</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="p">[],</span><span class="nx">m</span><span class="o">=</span><span class="p">[],</span><span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">p</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">p</span><span class="p">].</span><span class="nx">k</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">p</span><span class="p">].</span><span class="nx">id</span><span class="p">;</span><span class="nx">q</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="p">(</span><span class="nx">f</span><span class="o">++</span><span class="p">,</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">n</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="p">[</span><span class="nx">p</span><span class="p">],</span><span class="nx">m</span><span class="o">=</span><span class="p">[</span><span class="nx">r</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="nx">q</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">p</span><span class="p">),</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">r</span><span class="p">))}</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC219'><span class="nx">h</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">n</span><span class="p">)}};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Ya</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">d</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="nx">Oc</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="p">)];</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;SELECT * FROM &quot;</span><span class="o">+</span><span class="nx">Qe</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; WHERE &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; = ?&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; SQL: &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; PARAMS: &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">;</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">rows</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">rows</span><span class="p">.</span><span class="nx">item</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="kc">null</span><span class="o">!=</span><span class="nx">d</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">Df</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">G</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;success no result: &quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">),</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">))}</span><span class="k">else</span> <span class="nx">G</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;success no result: &quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">),</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">)},</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">F</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;error: &quot;</span><span class="o">+</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">message</span><span class="p">);</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">})};</span></div><div class='line' id='LC220'><span class="nx">t</span><span class="p">.</span><span class="nx">Cb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="p">[</span><span class="nx">Oc</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">l</span><span class="p">.</span><span class="nx">type</span><span class="p">)],</span><span class="nx">r</span><span class="o">=</span><span class="s2">&quot;SELECT * FROM &quot;</span><span class="o">+</span><span class="nx">Qe</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; WHERE &quot;</span><span class="o">+</span><span class="nx">p</span><span class="o">+</span><span class="s2">&quot; = ?&quot;</span><span class="p">;</span><span class="nx">H</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;SQL: &quot;</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="s2">&quot; PARAMS: &quot;</span><span class="o">+</span><span class="nx">q</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">h</span><span class="o">++</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">rows</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">rows</span><span class="p">.</span><span class="nx">item</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="kc">null</span><span class="o">!=</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">Df</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">l</span><span class="p">))}</span><span class="k">else</span> <span class="nx">g</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="mi">10</span><span class="p">,</span><span class="nx">m</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">e</span><span class="p">))},</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">l</span><span class="p">){</span><span class="nx">h</span><span class="o">++</span><span class="p">;</span><span class="nx">F</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;error: &quot;</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">.</span><span class="nx">message</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="mi">10</span><span class="p">;</span><span class="nx">m</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">e</span><span class="p">)}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">})}</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="p">[],</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">10</span><span class="o">&gt;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span></div><div class='line' id='LC221'><span class="nx">e</span><span class="p">);</span><span class="k">else</span> <span class="nx">G</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;success&quot;</span><span class="p">),</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,[])};</span></div><div class='line' id='LC222'><span class="nx">t</span><span class="p">.</span><span class="nx">Db</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">p</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">k</span><span class="p">),</span><span class="nx">q</span><span class="o">=</span><span class="nx">w</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">id</span><span class="p">)</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">id</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;^|&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">id</span> <span class="k">instanceof</span> <span class="nb">Date</span><span class="o">?+</span><span class="nx">m</span><span class="p">.</span><span class="nx">id</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="p">[</span><span class="nx">Oc</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span><span class="nx">p</span><span class="p">.</span><span class="nx">type</span><span class="p">)],</span><span class="nx">r</span><span class="o">=</span><span class="s2">&quot;SELECT * FROM &quot;</span><span class="o">+</span><span class="nx">Qe</span><span class="p">(</span><span class="nx">p</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; WHERE &quot;</span><span class="o">+</span><span class="nx">m</span><span class="o">+</span><span class="s2">&quot; = ?&quot;</span><span class="p">;</span><span class="nx">H</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;SQL: &quot;</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="s2">&quot; PARAMS: &quot;</span><span class="o">+</span><span class="nx">q</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">m</span><span class="p">){</span><span class="nx">g</span><span class="o">++</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">m</span><span class="p">.</span><span class="nx">rows</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">rows</span><span class="p">.</span><span class="nx">item</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="kc">null</span><span class="o">!=</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">Df</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">p</span><span class="p">))}</span><span class="k">else</span> <span class="nx">f</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;success &quot;</span><span class="o">+</span><span class="nx">r</span><span class="p">),</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">d</span><span class="o">+</span><span class="mi">10</span><span class="p">,</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">h</span><span class="p">))},</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">})}</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">10</span><span class="o">&gt;</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span></div><div class='line' id='LC223'><span class="nx">d</span><span class="p">);</span><span class="k">else</span> <span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;success&quot;</span><span class="p">),</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,[])};</span></div><div class='line' id='LC224'><span class="nx">t</span><span class="p">.</span><span class="nx">Ta</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;ydn.db.me:&quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">getName</span><span class="p">();</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;DELETE FROM  &quot;</span><span class="o">+</span><span class="nx">Fa</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">H</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;SQL: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">(</span><span class="nx">a</span><span class="p">,[])}</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]),</span><span class="nx">n</span><span class="o">=</span><span class="s2">&quot;DELETE FROM  &quot;</span><span class="o">+</span><span class="nx">Qe</span><span class="p">(</span><span class="nx">l</span><span class="p">);</span><span class="nx">H</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;SQL: &quot;</span><span class="o">+</span><span class="nx">n</span><span class="o">+</span><span class="s2">&quot; PARAMS: []&quot;</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">(</span><span class="nx">n</span><span class="p">,[],</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="nx">d</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="o">?</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;success &quot;</span><span class="o">+</span><span class="nx">n</span><span class="p">),</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">))</span><span class="o">:</span><span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">g</span><span class="p">)},</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">});</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">m</span><span class="o">&lt;</span><span class="nx">p</span><span class="p">;</span><span class="nx">m</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">index</span><span class="p">(</span><span class="nx">m</span><span class="p">);</span><span class="nx">q</span><span class="p">.</span><span class="nx">multiEntry</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nx">q</span><span class="p">)}}</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">c</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;success&quot;</span><span class="p">),</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">0</span><span class="p">))};</span></div><div class='line' id='LC225'><span class="nx">t</span><span class="p">.</span><span class="nx">Jb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">&gt;=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="nx">h</span><span class="p">].</span><span class="nx">k</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nx">Oc</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">h</span><span class="p">].</span><span class="nx">id</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">type</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="s2">&quot; WHERE &quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">.</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot; = ?&quot;</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="s2">&quot;DELETE FROM &quot;</span><span class="o">+</span><span class="nx">Qe</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span><span class="o">+</span><span class="nx">m</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; SQL: &quot;</span><span class="o">+</span><span class="nx">p</span><span class="o">+</span><span class="s2">&quot; PARAMS: &quot;</span><span class="o">+</span><span class="p">[</span><span class="nx">n</span><span class="p">];</span><span class="nx">d</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">(</span><span class="nx">p</span><span class="p">,[</span><span class="nx">n</span><span class="p">],</span><span class="kd">function</span><span class="p">(){</span><span class="nx">f</span><span class="o">++</span><span class="p">;</span><span class="nx">c</span><span class="p">(</span><span class="nx">h</span><span class="p">)},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">F</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;error: &quot;</span><span class="o">+</span><span class="nx">q</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">message</span><span class="p">);</span><span class="nx">g</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">});</span><span class="nx">h</span><span class="o">++</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;ydn.db.me:&quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">getName</span><span class="p">();</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;DELETE FROM  &quot;</span><span class="o">+</span><span class="nx">Fa</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">+</span><span class="nx">m</span><span class="p">;</span><span class="nx">H</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="kc">NaN</span><span class="o">+</span><span class="nx">b</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">(</span><span class="nx">b</span><span class="p">,[</span><span class="nx">n</span><span class="p">])},</span><span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">z</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">r</span><span class="o">&lt;</span><span class="nx">z</span><span class="p">;</span><span class="nx">r</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">index</span><span class="p">(</span><span class="nx">r</span><span class="p">);</span><span class="nx">A</span><span class="p">.</span><span class="nx">multiEntry</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">(</span><span class="nx">A</span><span class="p">)}}}</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">,</span></div><div class='line' id='LC226'><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; removeByKeys: &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot; keys&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">(</span><span class="mi">0</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">gb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;ydn.db.me:&quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">getName</span><span class="p">();</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;DELETE FROM  &quot;</span><span class="o">+</span><span class="nx">Fa</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">+</span><span class="nx">l</span><span class="p">;</span><span class="nx">H</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="kc">NaN</span><span class="o">+</span><span class="nx">b</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">(</span><span class="nx">b</span><span class="p">,[</span><span class="nx">g</span><span class="p">])}</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">Oc</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">type</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="s2">&quot; WHERE &quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot; = ?&quot;</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;DELETE FROM &quot;</span><span class="o">+</span><span class="nx">Qe</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">+</span><span class="nx">l</span><span class="p">;</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; SQL: &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; PARAMS: &quot;</span><span class="o">+</span><span class="p">[</span><span class="nx">g</span><span class="p">]);</span><span class="nx">e</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">(</span><span class="nx">b</span><span class="p">,[</span><span class="nx">g</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">rowsAffected</span><span class="p">)},</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">});</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">index</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">n</span><span class="p">.</span><span class="nx">multiEntry</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">(</span><span class="nx">n</span><span class="p">)}};</span></div><div class='line' id='LC227'><span class="nx">t</span><span class="p">.</span><span class="nx">xb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">If</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">hb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">If</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Ib</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">If</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)};</span></div><div class='line' id='LC228'><span class="kd">function</span> <span class="nx">If</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;ydn.db.me:&quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">getName</span><span class="p">();</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;DELETE FROM  &quot;</span><span class="o">+</span><span class="nx">Fa</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">+</span><span class="nx">m</span><span class="p">;</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">V</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">+</span><span class="kc">NaN</span><span class="o">+</span><span class="nx">c</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">n</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;DELETE FROM &quot;</span><span class="o">+</span><span class="nx">Qe</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="p">[],</span><span class="nx">n</span><span class="o">=</span><span class="p">[],</span><span class="nx">m</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">je</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">Nc</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">l</span><span class="p">))</span><span class="o">:</span><span class="nx">Nc</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">l</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="s2">&quot; WHERE &quot;</span><span class="o">+</span><span class="nx">n</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; AND &quot;</span><span class="p">));</span><span class="nx">c</span><span class="o">+=</span><span class="nx">m</span><span class="p">;</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">V</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; SQL: &quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot; PARAMS: &quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">;</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">p</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;success &quot;</span><span class="o">+</span><span class="nx">p</span><span class="p">);</span><span class="nx">R</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">rowsAffected</span><span class="p">)},</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;error: &quot;</span><span class="o">+</span><span class="nx">p</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">message</span><span class="p">);</span><span class="nx">R</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">});</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span></div><div class='line' id='LC229'><span class="nx">d</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">index</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">multiEntry</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">(</span><span class="nx">c</span><span class="p">)}</span><span class="nx">t</span><span class="p">.</span><span class="nx">Ua</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="s2">&quot;SELECT COUNT(*) FROM &quot;</span><span class="o">+</span><span class="nx">Fa</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">g</span><span class="p">]);</span><span class="nx">H</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;SQL: &quot;</span><span class="o">+</span><span class="nx">h</span><span class="o">+</span><span class="s2">&quot; PARAMS: []&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">(</span><span class="nx">h</span><span class="p">,[],</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">rows</span><span class="p">.</span><span class="nx">item</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="s2">&quot;COUNT(*)&quot;</span><span class="p">],</span><span class="mi">10</span><span class="p">);</span><span class="nx">g</span><span class="o">++</span><span class="p">;</span><span class="nx">g</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">(</span><span class="nx">g</span><span class="p">)},</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">})}</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">[];</span><span class="mi">0</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;success&quot;</span><span class="p">),</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">0</span><span class="p">))</span><span class="o">:</span><span class="nx">c</span><span class="p">(</span><span class="mi">0</span><span class="p">)};</span></div><div class='line' id='LC230'><span class="nx">t</span><span class="p">.</span><span class="nx">Ga</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">[];</span><span class="nx">b</span><span class="o">=</span><span class="nx">Oe</span><span class="p">(</span><span class="nx">Y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">f</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; SQL: &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; PARAMS: &quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">rows</span><span class="p">.</span><span class="nx">item</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">af</span><span class="p">(</span><span class="nx">d</span><span class="p">))},</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">})};</span></div><div class='line' id='LC231'><span class="nx">t</span><span class="p">.</span><span class="nx">Z</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="p">[],</span><span class="nx">q</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">f</span><span class="p">,</span><span class="nx">z</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">A</span><span class="o">=</span><span class="nx">z</span><span class="p">,</span><span class="nx">I</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">!==</span><span class="nx">r</span><span class="o">?</span><span class="nx">je</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">L</span><span class="o">=</span><span class="nx">d</span><span class="o">||</span><span class="nx">r</span><span class="p">;</span><span class="nx">I</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">A</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">type</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">0</span><span class="p">])){</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">I</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">Se</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">I</span><span class="p">.</span><span class="nx">getName</span><span class="p">(),</span><span class="nx">e</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">l</span><span class="p">))</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="nx">Re</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}</span><span class="k">else</span> <span class="nx">e</span><span class="o">=</span><span class="nx">Oe</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">L</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">l</span><span class="p">);</span><span class="nx">ea</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">+=</span><span class="s2">&quot; LIMIT &quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">);</span><span class="nx">ea</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">+=</span><span class="s2">&quot; OFFSET &quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">);</span><span class="kd">var</span> <span class="nx">U</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; SQL: &quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot; ;params= &quot;</span><span class="o">+</span><span class="nx">W</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">U</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">rows</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">rows</span><span class="p">.</span><span class="nx">item</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="mi">2</span><span class="o">==</span><span class="nx">b</span><span class="o">?</span><span class="nx">p</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">Ke</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">r</span><span class="p">],</span><span class="nx">z</span><span class="p">)</span><span class="o">:</span><span class="mi">1</span><span class="o">==</span><span class="nx">b</span><span class="o">?</span><span class="nx">p</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">Ke</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">L</span><span class="p">],</span><span class="nx">A</span><span class="p">)</span><span class="o">:</span><span class="mi">3</span><span class="o">==</span></div><div class='line' id='LC232'><span class="nx">b</span><span class="o">?</span><span class="nx">p</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="p">[</span><span class="nx">Ke</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">L</span><span class="p">],</span><span class="nx">A</span><span class="p">),</span><span class="nx">Ke</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">r</span><span class="p">],</span><span class="nx">z</span><span class="p">)]</span><span class="o">:</span><span class="kc">null</span><span class="o">!=</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">p</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">Df</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">q</span><span class="p">));</span><span class="nx">G</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;success &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">Ke</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">L</span><span class="p">],</span><span class="nx">A</span><span class="p">),</span><span class="nx">n</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">Ke</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">r</span><span class="p">],</span><span class="nx">z</span><span class="p">));</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">p</span><span class="p">)},</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">F</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;error: &quot;</span><span class="o">+</span><span class="nx">U</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">message</span><span class="p">);</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">})};</span><span class="kd">function</span> <span class="nx">Jf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Jf</span><span class="p">,</span><span class="nx">Gf</span><span class="p">);</span><span class="nx">Jf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.core.req.WebSql&quot;</span><span class="p">);</span><span class="nx">Jf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="k">new</span> <span class="nx">Cf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">Kf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">sf</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="nx">Kf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.sql.req.websql.Node&quot;</span><span class="p">);</span><span class="nx">Kf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toJSON</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">sql</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">H</span><span class="p">}};</span><span class="nx">Kf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="nx">aa</span><span class="p">(</span><span class="s2">&quot;websql.Node:&quot;</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Lf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span> <span class="nx">db</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="k">return</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{},</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]]</span><span class="o">=</span><span class="nx">db</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]);</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="k">return</span> <span class="nx">Df</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">)}</span></div><div class='line' id='LC233'><span class="nx">Kf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">kc</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="nx">b</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">H</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">rows</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">l</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">rows</span><span class="p">.</span><span class="nx">item</span><span class="p">(</span><span class="nx">l</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="nx">n</span><span class="p">))</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">Lf</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">n</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">m</span><span class="p">)}</span><span class="nx">a</span><span class="p">(</span><span class="nx">e</span><span class="p">)},</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">F</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;Sqlite error: &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">message</span><span class="p">);</span><span class="nx">a</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">})};</span><span class="kd">function</span> <span class="nx">Mf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">Kf</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Mf</span><span class="p">,</span><span class="nx">Kf</span><span class="p">);</span><span class="nx">Mf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">kc</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">H</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">rows</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">==</span><span class="nx">d</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">af</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">rows</span><span class="p">.</span><span class="nx">item</span><span class="p">(</span><span class="mi">0</span><span class="p">)),</span><span class="nx">a</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">d</span><span class="p">)</span><span class="nx">a</span><span class="p">(</span><span class="k">void</span> <span class="mi">0</span><span class="p">);</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">md</span><span class="p">;},</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">F</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;Sqlite error: &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">message</span><span class="p">);</span><span class="nx">a</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">})};</span><span class="kd">function</span> <span class="nx">Vd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Vd</span><span class="p">,</span><span class="nx">Jf</span><span class="p">);</span><span class="nx">Vd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.sql.req.WebSql&quot;</span><span class="p">);</span><span class="nx">Vd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">executeSql</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">Ra</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">pd</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">sf</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">ke</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="p">]))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">pd</span><span class="p">(</span><span class="s1">&#39;Index &quot;&#39;</span><span class="o">+</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;&quot; not found in &#39;</span><span class="o">+</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">]);(</span><span class="nx">b</span><span class="p">.</span><span class="nx">d</span><span class="o">?</span><span class="k">new</span> <span class="nx">Mf</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="k">new</span> <span class="nx">Kf</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">)).</span><span class="nx">kc</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">$e</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">H</span><span class="p">);};</span><span class="kd">function</span> <span class="nx">Nf</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=!</span><span class="mi">1</span><span class="p">}</span><span class="nx">Nf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">a</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="kd">function</span> <span class="nx">Of</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">Bd</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">u</span><span class="o">=</span><span class="k">new</span> <span class="nx">Nf</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ib</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ja</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Of</span><span class="p">,</span><span class="nx">Bd</span><span class="p">);</span><span class="nx">t</span><span class="o">=</span><span class="nx">Of</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.core.req.SimpleCursor&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">ab</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">update</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">Pf</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ib</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">C</span><span class="p">(),</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">ab</span><span class="p">()};</span><span class="nx">t</span><span class="p">.</span><span class="nx">advance</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">d</span><span class="o">++</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="o">||</span><span class="nx">d</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">Qf</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">reverse</span><span class="o">?</span><span class="nx">Rf</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ja</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="nx">Sf</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ja</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">)};</span></div><div class='line' id='LC234'><span class="nx">t</span><span class="p">.</span><span class="nx">Ea</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">$</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="nx">Qf</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">key</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">reverse</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">!=</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span> <span class="nx">Qf</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="o">!=</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span> <span class="nx">Qf</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)};</span><span class="k">this</span><span class="p">.</span><span class="nx">reverse</span><span class="o">?</span><span class="nx">Rf</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ja</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">Sf</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ja</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">advance</span><span class="p">(</span><span class="mi">1</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">Tf</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">u</span><span class="p">.</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">u</span><span class="p">.</span><span class="nx">a</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">N</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">i</span><span class="p">),</span><span class="nx">Tf</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">h</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">h</span><span class="o">=</span><span class="kc">null</span><span class="p">)},</span><span class="mi">4</span><span class="p">)}</span></div><div class='line' id='LC235'><span class="kd">function</span> <span class="nx">Qf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">m</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">reverse</span><span class="o">||</span><span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">m</span><span class="p">.</span><span class="nx">upper</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">reverse</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">m</span><span class="p">.</span><span class="nx">lower</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">key</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">m</span><span class="p">.</span><span class="nx">lower</span><span class="p">),</span><span class="o">-</span><span class="mi">1</span><span class="o">==</span><span class="nx">d</span><span class="o">||</span><span class="mi">0</span><span class="o">==</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">m</span><span class="p">.</span><span class="nx">lowerOpen</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">key</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">m</span><span class="p">.</span><span class="nx">upper</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">==</span><span class="nx">d</span><span class="o">||</span><span class="mi">0</span><span class="o">==</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">m</span><span class="p">.</span><span class="nx">upperOpen</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">unique</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">c</span><span class="p">.</span><span class="nx">key</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">==</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">key</span><span class="p">))</span><span class="k">return</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">key</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">a</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">;</span><span class="mi">4</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">fa</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">Ka</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">i</span><span class="o">=</span><span class="nx">Uf</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">ib</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">))}}</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">i</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">u</span><span class="p">.</span><span class="nx">a</span><span class="o">=!</span><span class="mi">0</span><span class="p">}</span></div><div class='line' id='LC236'><span class="nx">t</span><span class="p">.</span><span class="nx">openCursor</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">m</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">reverse</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">?</span><span class="s2">&quot;\uffff&quot;</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="kc">null</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">m</span><span class="p">.</span><span class="nx">upper</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">m</span><span class="p">.</span><span class="nx">upper</span><span class="p">,</span><span class="nx">d</span><span class="p">))}</span><span class="k">else</span> <span class="kc">null</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">m</span><span class="p">.</span><span class="nx">lower</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">m</span><span class="p">.</span><span class="nx">lower</span><span class="p">));</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">?</span><span class="k">new</span> <span class="nx">$</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="k">new</span> <span class="nx">$</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="p">.</span><span class="nx">j</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">key</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">f</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">Vf</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">))</span><span class="k">return</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">reverse</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">m</span><span class="p">.</span><span class="nx">lowerOpen</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">m</span><span class="p">.</span><span class="nx">lower</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">m</span><span class="p">.</span><span class="nx">lower</span><span class="p">),</span><span class="mi">0</span><span class="o">==</span><span class="nx">e</span><span class="p">)</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">reverse</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">m</span><span class="p">.</span><span class="nx">upperOpen</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">m</span><span class="p">.</span><span class="nx">upper</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">m</span><span class="p">.</span><span class="nx">upper</span><span class="p">),</span></div><div class='line' id='LC237'><span class="mi">0</span><span class="o">==</span><span class="nx">e</span><span class="p">)))</span><span class="k">return</span><span class="p">;</span><span class="k">return</span> <span class="nx">Qf</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="k">this</span><span class="p">.</span><span class="nx">ib</span><span class="o">=</span><span class="nx">Wf</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">k</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">ja</span><span class="o">=</span><span class="nx">Xf</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ib</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">J</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">reverse</span><span class="o">?</span><span class="nx">Rf</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ja</span><span class="p">,</span><span class="nx">la</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">Sf</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ja</span><span class="p">,</span><span class="nx">la</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="nx">c</span><span class="p">);</span><span class="nx">Tf</span><span class="p">(</span><span class="k">this</span><span class="p">)},</span><span class="k">this</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">Dc</span><span class="p">;};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Ra</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">Dc</span><span class="p">;};</span><span class="nx">t</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;Simple&quot;</span><span class="o">+</span><span class="nx">Of</span><span class="p">.</span><span class="nx">p</span><span class="p">.</span><span class="nx">toString</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">Yf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;ydn.db&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">];</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">v</span><span class="p">(</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">sc</span><span class="p">(</span><span class="k">void</span> <span class="mi">0</span><span class="p">))));</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;^|&quot;</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">$</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">key</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;ydn.db.con.simple.Node(&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">key</span><span class="o">+</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">?</span><span class="s2">&quot;, &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="o">:</span><span class="s2">&quot;)&quot;</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">Vf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">key</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">key</span><span class="p">);</span><span class="k">return</span> <span class="mi">0</span><span class="o">===</span><span class="nx">c</span><span class="o">?</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">?</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">a</span><span class="o">?</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="mi">1</span><span class="o">:</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">a</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="o">:</span><span class="nx">c</span><span class="p">};</span><span class="kd">function</span> <span class="nx">Zf</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">D</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="nx">$f</span><span class="p">}</span><span class="kd">function</span> <span class="nx">$f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&lt;</span><span class="nb">String</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&gt;</span><span class="nb">String</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">}</span><span class="nx">t</span><span class="o">=</span><span class="nx">Zf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">v</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">D</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">V</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">U</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span></div><div class='line' id='LC238'><span class="nx">t</span><span class="p">.</span><span class="nx">add</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">v</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">U</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">V</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">v</span><span class="o">=</span><span class="k">new</span> <span class="nx">ag</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">bg</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="mi">0</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">D</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">left</span><span class="p">,</span><span class="kc">null</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">left</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">ag</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">V</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">V</span><span class="o">=</span><span class="nx">b</span><span class="p">)))</span><span class="o">:</span><span class="mi">0</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">D</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">right</span><span class="p">,</span><span class="kc">null</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">right</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">ag</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">right</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">U</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">U</span><span class="o">=</span><span class="nx">b</span><span class="p">)));</span><span class="k">return</span> <span class="nx">d</span><span class="p">});</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">bg</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">count</span><span class="o">++</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="p">),</span><span class="nx">cg</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="p">));</span><span class="k">return</span><span class="o">!!</span><span class="nx">b</span><span class="p">};</span></div><div class='line' id='LC239'><span class="kd">function</span> <span class="nx">dg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">bg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="mi">0</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="o">:</span><span class="mi">0</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">right</span><span class="o">:</span><span class="nx">eg</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">})}</span><span class="nx">t</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">U</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">V</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">v</span><span class="o">=</span><span class="kc">null</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">contains</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">bg</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="mi">0</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">D</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">left</span><span class="o">:</span><span class="mi">0</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">D</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">right</span><span class="o">:</span><span class="nx">b</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="nx">d</span><span class="p">});</span><span class="k">return</span> <span class="nx">b</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Bb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">v</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">v</span><span class="p">.</span><span class="nx">count</span><span class="o">:</span><span class="mi">0</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Za</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">[];</span><span class="nx">fg</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">)});</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span></div><div class='line' id='LC240'><span class="kd">function</span> <span class="nx">fg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">v</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="o">=</span><span class="nx">gg</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">left</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">left</span><span class="o">:</span><span class="nx">c</span><span class="p">;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">d</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">d</span><span class="p">.</span><span class="nx">left</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">left</span><span class="o">!=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">right</span><span class="o">!=</span><span class="nx">c</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">left</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">right</span><span class="o">!=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">value</span><span class="p">))</span><span class="k">break</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="nx">d</span><span class="p">.</span><span class="nx">right</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">right</span><span class="o">!=</span><span class="nx">c</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">right</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">parent</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">}}}</span><span class="kd">function</span> <span class="nx">bg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">v</span><span class="p">;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">c</span><span class="p">;)</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span></div><div class='line' id='LC241'><span class="kd">function</span> <span class="nx">cg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">bg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="p">.</span><span class="nx">height</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">right</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">right</span><span class="p">.</span><span class="nx">height</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">b</span><span class="o">-</span><span class="nx">e</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="p">.</span><span class="nx">right</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="p">.</span><span class="nx">left</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="p">.</span><span class="nx">left</span><span class="p">.</span><span class="nx">height</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="p">.</span><span class="nx">right</span><span class="p">.</span><span class="nx">height</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">hg</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="p">),</span><span class="nx">ig</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">))</span><span class="o">:</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">e</span><span class="o">-</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">right</span><span class="p">.</span><span class="nx">left</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">right</span><span class="p">.</span><span class="nx">right</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">right</span><span class="p">.</span><span class="nx">right</span><span class="p">.</span><span class="nx">height</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">right</span><span class="p">.</span><span class="nx">left</span><span class="p">.</span><span class="nx">height</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">ig</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">right</span><span class="p">),</span><span class="nx">hg</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">));</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="p">.</span><span class="nx">height</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">right</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">right</span><span class="p">.</span><span class="nx">height</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">},</span><span class="nx">b</span><span class="p">)}</span></div><div class='line' id='LC242'><span class="kd">function</span> <span class="nx">hg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">jg</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">right</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">right</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="p">)</span><span class="o">:</span><span class="nx">kg</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">right</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">right</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">right</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">v</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">right</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">v</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="kc">null</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">right</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">right</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">right</span><span class="p">.</span><span class="nx">left</span><span class="p">;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">right</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">right</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="nx">b</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">count</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">count</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">count</span><span class="o">-=</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">right</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">right</span><span class="p">.</span><span class="nx">count</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">}</span></div><div class='line' id='LC243'><span class="kd">function</span> <span class="nx">ig</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">jg</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="p">)</span><span class="o">:</span><span class="nx">kg</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">right</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">v</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">v</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="kc">null</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="p">.</span><span class="nx">right</span><span class="p">;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="nx">b</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">right</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">count</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">count</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">count</span><span class="o">-=</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">left</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">left</span><span class="p">.</span><span class="nx">count</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">}</span></div><div class='line' id='LC244'><span class="kd">function</span> <span class="nx">eg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="o">||</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">right</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">lg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="p">);</span><span class="nx">bg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">count</span><span class="o">--</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">},</span><span class="nx">d</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">right</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">left</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">left</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">parent</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">left</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">parent</span><span class="p">}</span><span class="nx">d</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">right</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">right</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">right</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">right</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="nx">d</span><span class="p">);</span><span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">U</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">U</span><span class="o">=</span><span class="nx">d</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">d</span><span class="o">=</span><span class="nx">gg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">right</span><span class="p">);</span><span class="nx">bg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">count</span><span class="o">--</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">},</span><span class="nx">d</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">right</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">right</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">right</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">parent</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">right</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">right</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">right</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">parent</span><span class="p">}</span><span class="nx">d</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span></div><div class='line' id='LC245'><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">left</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">left</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="nx">d</span><span class="p">);</span><span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">V</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">V</span><span class="o">=</span><span class="nx">d</span><span class="p">)}</span><span class="nx">d</span><span class="p">.</span><span class="nx">count</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">count</span><span class="p">;</span><span class="nx">jg</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">d</span><span class="o">:</span><span class="nx">kg</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">right</span><span class="o">=</span><span class="nx">d</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">v</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">cg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">d</span><span class="p">)}</span><span class="k">else</span> <span class="nx">bg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">count</span><span class="o">--</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="p">),</span><span class="nx">jg</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">V</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">V</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="p">),</span><span class="nx">cg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="p">))</span><span class="o">:</span><span class="nx">kg</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">right</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">U</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">U</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="p">),</span><span class="nx">cg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="p">))</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">gg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">V</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">bg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span></div><div class='line' id='LC246'><span class="kd">function</span> <span class="nx">lg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">U</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">bg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">right</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">right</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">ag</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">count</span><span class="o">=</span><span class="mi">1</span><span class="p">}</span><span class="nx">ag</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">ag</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">right</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">ag</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="kd">function</span> <span class="nx">kg</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="o">!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">right</span><span class="o">==</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">jg</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="o">!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">left</span><span class="o">==</span><span class="nx">a</span><span class="p">};</span><span class="kd">function</span> <span class="nx">mg</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">D</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="nx">$f</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">mg</span><span class="p">,</span><span class="nx">Zf</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Sf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">v</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span> <span class="k">instanceof</span> <span class="nx">ag</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">bg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="mi">0</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">right</span><span class="o">:</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">}),</span><span class="o">!</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span><span class="p">}</span><span class="k">else</span> <span class="nx">d</span><span class="o">=</span><span class="nx">gg</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">left</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">left</span><span class="o">:</span><span class="nx">d</span><span class="p">;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="o">!=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">right</span><span class="o">!=</span><span class="nx">e</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">right</span><span class="o">!=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">right</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">right</span><span class="o">!=</span><span class="nx">e</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">right</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="p">}</span><span class="nx">b</span><span class="p">(</span><span class="kc">null</span><span class="p">)}}</span></div><div class='line' id='LC247'><span class="kd">function</span> <span class="nx">Rf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">v</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span> <span class="k">instanceof</span> <span class="nx">ag</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">bg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">la</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="mi">0</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="o">:</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">right</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">a</span><span class="p">)),</span><span class="o">!</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span><span class="p">}</span><span class="k">else</span> <span class="nx">d</span><span class="o">=</span><span class="nx">lg</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">right</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">right</span><span class="o">:</span><span class="nx">d</span><span class="p">;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">right</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">right</span><span class="o">!=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="o">!=</span><span class="nx">e</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">right</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="o">!=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="o">!=</span><span class="nx">e</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="p">}</span><span class="nx">b</span><span class="p">(</span><span class="kc">null</span><span class="p">)}};</span><span class="kd">function</span> <span class="nx">ng</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">storage</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="p">{};</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;_ROWID_&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="nx">Yf</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">getName</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;^|&quot;</span><span class="p">}</span></div><div class='line' id='LC248'><span class="kd">function</span> <span class="nx">Xf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]){</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">mg</span><span class="p">(</span><span class="nx">Vf</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">storage</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">storage</span><span class="p">.</span><span class="nx">key</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!==</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">==</span><span class="nx">f</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">,</span><span class="mi">0</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">vc</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">add</span><span class="p">(</span><span class="k">new</span> <span class="nx">$</span><span class="p">(</span><span class="nx">g</span><span class="p">));</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">storage</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!==</span><span class="nx">h</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">je</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">ze</span><span class="p">(</span><span class="nx">h</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">Ie</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">multiEntry</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="nx">h</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">add</span><span class="p">(</span><span class="k">new</span> <span class="nx">$</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">g</span><span class="p">))}</span><span class="k">else</span> <span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">add</span><span class="p">(</span><span class="k">new</span> <span class="nx">$</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">g</span><span class="p">))}}}}</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]}</span></div><div class='line' id='LC249'><span class="kd">function</span> <span class="nx">og</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">)</span><span class="nx">dg</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="k">new</span> <span class="nx">$</span><span class="p">(</span><span class="nx">b</span><span class="p">));</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">je</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">qc</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">);</span><span class="nx">dg</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="k">new</span> <span class="nx">$</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">))}}}</span><span class="kd">function</span> <span class="nx">pg</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">clear</span><span class="p">()}</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="p">{}}</span></div><div class='line' id='LC250'><span class="kd">function</span> <span class="nx">Pf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">keyPath</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">oe</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)),</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="p">)){</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">+</span><span class="nx">sc</span><span class="p">(</span><span class="k">void</span> <span class="mi">0</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">ze</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">storage</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="nx">b</span><span class="p">));</span><span class="nx">e</span><span class="p">.</span><span class="nx">key_count</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">key_count</span><span class="o">=</span><span class="mi">0</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">key_count</span><span class="o">++</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">storage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">W</span><span class="p">(</span><span class="nx">e</span><span class="p">));</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">key_count</span><span class="p">}</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">storage</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">+</span><span class="nx">sc</span><span class="p">(</span><span class="nx">b</span><span class="p">)));</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">storage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">+</span><span class="nx">sc</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">W</span><span class="p">(</span><span class="nx">c</span><span class="p">));</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span> <span class="k">in</span> <span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">])</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="k">new</span> <span class="nx">$</span><span class="p">(</span><span class="nx">d</span><span class="p">));</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">je</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">qc</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">);</span><span class="kc">null</span><span class="o">!=</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="k">new</span> <span class="nx">$</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">))}</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span></div><div class='line' id='LC251'><span class="kd">function</span> <span class="nx">qg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">+</span><span class="nx">sc</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">storage</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">===</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span> <span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">storage</span><span class="p">.</span><span class="nx">removeItem</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">ze</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">og</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="mi">1</span><span class="p">}</span><span class="nx">ng</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">pg</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">rg</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">Uf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">storage</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">+</span><span class="nx">sc</span><span class="p">(</span><span class="nx">b</span><span class="p">)),</span><span class="nx">d</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!==</span><span class="nx">c</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">ze</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">index</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;DATE&quot;</span><span class="o">==</span><span class="nx">f</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">Ie</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">Je</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">g</span><span class="p">))}}</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="nx">ng</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getName</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">getName</span><span class="p">()};</span></div><div class='line' id='LC252'><span class="kd">function</span> <span class="nx">sg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">Xf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">h</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">c</span><span class="p">.</span><span class="nx">lower</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nx">$</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">lower</span><span class="p">)),</span><span class="kc">null</span><span class="o">!=</span><span class="nx">c</span><span class="p">.</span><span class="nx">upper</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="k">new</span> <span class="nx">$</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">upper</span><span class="p">)),</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">lowerOpen</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">upperOpen</span><span class="p">);</span><span class="nx">Sf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="o">!</span><span class="nx">g</span><span class="o">||</span><span class="kc">null</span><span class="o">==</span><span class="nx">d</span><span class="o">||</span><span class="mi">0</span><span class="o">!=</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">key</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">key</span><span class="p">))){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">key</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">key</span><span class="p">),</span><span class="mi">1</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="mi">0</span><span class="o">===</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">}},</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="nx">f</span><span class="p">}</span></div><div class='line' id='LC253'><span class="kd">function</span> <span class="nx">rg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">Xf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="p">[],</span><span class="nx">h</span><span class="o">=</span><span class="p">[],</span><span class="nx">l</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">n</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">lower</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nx">$</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">lower</span><span class="p">)),</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">upper</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="k">new</span> <span class="nx">$</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">upper</span><span class="p">)),</span><span class="nx">l</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">lowerOpen</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">upperOpen</span><span class="p">);</span><span class="nx">Sf</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="o">!</span><span class="nx">l</span><span class="o">||</span><span class="kc">null</span><span class="o">==</span><span class="nx">d</span><span class="o">||</span><span class="mi">0</span><span class="o">!=</span><span class="nx">Vf</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">))){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">Vf</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">===</span><span class="nx">c</span><span class="o">||</span><span class="mi">0</span><span class="o">===</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">}</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">+</span><span class="nx">sc</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">key</span><span class="p">),</span><span class="nx">q</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">storage</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="kc">null</span><span class="o">!==</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">storage</span><span class="p">.</span><span class="nx">removeItem</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">f</span><span class="o">++</span><span class="p">,</span><span class="mi">10</span><span class="o">&gt;</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">key</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">ze</span><span class="p">(</span><span class="nx">q</span><span class="p">))))}},</span><span class="nx">d</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">10</span><span class="o">&gt;</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">og</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">h</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="k">else</span> <span class="nx">pg</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">f</span><span class="p">}</span></div><div class='line' id='LC254'><span class="kd">function</span> <span class="nx">tg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">l</span><span class="p">){</span><span class="kd">function</span> <span class="nx">n</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">I</span><span class="o">++</span><span class="p">,</span><span class="o">!</span><span class="p">(</span><span class="nx">I</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">))){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">A</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">q</span><span class="o">?</span><span class="nx">Vf</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">A</span><span class="p">)</span><span class="o">:</span><span class="nx">M</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">key</span><span class="p">,</span><span class="nx">A</span><span class="p">.</span><span class="nx">key</span><span class="p">),</span><span class="mi">0</span><span class="o">==</span><span class="nx">c</span><span class="p">))</span><span class="k">return</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">z</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">q</span><span class="o">?</span><span class="nx">Vf</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">z</span><span class="p">)</span><span class="o">:</span><span class="nx">M</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">key</span><span class="p">,</span><span class="nx">z</span><span class="p">.</span><span class="nx">key</span><span class="p">),</span><span class="o">-</span><span class="mi">1</span><span class="o">==</span><span class="nx">c</span><span class="o">||</span><span class="mi">0</span><span class="o">==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">L</span><span class="p">))</span><span class="k">return</span> <span class="nx">l</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">L</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">z</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">q</span><span class="o">?</span><span class="nx">Vf</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">z</span><span class="p">)</span><span class="o">:</span><span class="nx">M</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">key</span><span class="p">,</span><span class="nx">z</span><span class="p">.</span><span class="nx">key</span><span class="p">),</span><span class="mi">0</span><span class="o">==</span><span class="nx">c</span><span class="p">))</span><span class="k">return</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">A</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">q</span><span class="o">?</span><span class="nx">Vf</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">A</span><span class="p">)</span><span class="o">:</span><span class="nx">M</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">key</span><span class="p">,</span><span class="nx">A</span><span class="p">.</span><span class="nx">key</span><span class="p">),</span><span class="mi">1</span><span class="o">==</span><span class="nx">c</span><span class="o">||</span><span class="mi">0</span><span class="o">==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">E</span><span class="p">))</span><span class="k">return</span> <span class="nx">l</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">}</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">key</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">h</span><span class="o">||!</span><span class="nx">r</span><span class="o">||</span><span class="kc">null</span><span class="o">==</span><span class="nx">p</span><span class="o">||</span><span class="mi">0</span><span class="o">!=</span><span class="nx">M</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">c</span><span class="p">)){</span><span class="nx">d</span><span class="o">=</span><span class="nx">r</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">a</span><span class="o">:</span><span class="nx">c</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">2</span><span class="o">==</span><span class="nx">b</span><span class="p">)</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">==</span><span class="nx">b</span><span class="p">)</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="mi">3</span><span class="o">==</span><span class="nx">b</span><span class="p">)</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">c</span><span class="p">,</span></div><div class='line' id='LC255'><span class="nx">d</span><span class="p">]);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="mi">4</span><span class="o">==</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">Uf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">n</span><span class="p">)}</span><span class="k">else</span> <span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">Uf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">)]);</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">l</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">)}</span><span class="nx">p</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;=</span><span class="nx">f</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">}}</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="p">[],</span><span class="nx">p</span><span class="p">,</span><span class="nx">q</span><span class="o">=!!</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">l</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">;</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">c</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">Xf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="kd">var</span> <span class="nx">z</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">A</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">v</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">);</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span><span class="nx">L</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">E</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">d</span><span class="p">.</span><span class="nx">lower</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">z</span><span class="o">=</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">?</span><span class="k">new</span> <span class="nx">$</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">lower</span><span class="p">,</span><span class="s2">&quot;\uffff&quot;</span><span class="p">)</span><span class="o">:</span><span class="k">new</span> <span class="nx">$</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">lower</span><span class="p">)),</span><span class="kc">null</span><span class="o">!=</span><span class="nx">d</span><span class="p">.</span><span class="nx">upper</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">A</span><span class="o">=</span><span class="nx">r</span><span class="o">&amp;&amp;!</span><span class="nx">e</span><span class="o">?</span><span class="k">new</span> <span class="nx">$</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">upper</span><span class="p">,</span><span class="s2">&quot;\uffff&quot;</span><span class="p">)</span><span class="o">:</span><span class="k">new</span> <span class="nx">$</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">upper</span><span class="p">)),</span><span class="nx">L</span><span class="o">=!!</span><span class="nx">d</span><span class="p">.</span><span class="nx">lowerOpen</span><span class="p">,</span><span class="nx">E</span><span class="o">=!!</span><span class="nx">d</span><span class="p">.</span><span class="nx">upperOpen</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="p">){</span><span class="nx">e</span><span class="o">?</span><span class="nx">E</span><span class="o">=!</span><span class="mi">0</span><span class="o">:</span><span class="nx">L</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="kd">var</span> <span class="nx">U</span><span class="o">=</span><span class="nx">v</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">?</span><span class="nx">l</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span><span class="s2">&quot;\uffff&quot;</span><span class="p">;</span><span class="nx">e</span><span class="o">?</span><span class="nx">A</span><span class="o">=</span><span class="nx">r</span><span class="o">?</span><span class="k">new</span> <span class="nx">$</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">U</span><span class="p">)</span><span class="o">:</span><span class="k">new</span> <span class="nx">$</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">z</span><span class="o">=</span><span class="nx">r</span><span class="o">?</span><span class="k">new</span> <span class="nx">$</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">U</span><span class="p">)</span><span class="o">:</span><span class="k">new</span> <span class="nx">$</span><span class="p">(</span><span class="nx">d</span><span class="p">)}</span><span class="nx">e</span><span class="o">?</span></div><div class='line' id='LC256'><span class="nx">Rf</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">A</span><span class="p">)</span><span class="o">:</span><span class="nx">Sf</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">z</span><span class="p">);</span><span class="k">return</span> <span class="nx">m</span><span class="p">}</span><span class="nx">ng</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ua</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">tg</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">)};</span><span class="nx">ng</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;ydn.db.con.simple.Store:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">getName</span><span class="p">()};</span><span class="kd">function</span> <span class="nx">ug</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">clear</span><span class="p">()}</span><span class="nx">t</span><span class="o">=</span><span class="nx">ug</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">yb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">setItem</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">a</span><span class="p">])</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">keys</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">toString</span><span class="p">()),</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">keys</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">getItem</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">a</span><span class="p">])</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">:</span><span class="kc">null</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">removeItem</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="nx">Qa</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">keys</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">toString</span><span class="p">());</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">keys</span><span class="p">.</span><span class="nx">length</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">key</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">keys</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">return</span> <span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">:</span><span class="kc">null</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">keys</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">};</span><span class="kd">function</span> <span class="nx">vg</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="k">new</span> <span class="nx">ug</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="p">{}}</span><span class="kd">function</span> <span class="nx">Wf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">ng</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">));</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">Fc</span><span class="p">(</span><span class="s1">&#39;store name &quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s1">&#39;&quot; not found.&#39;</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">]}</span><span class="nx">vg</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">L</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">Yf</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">d</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">e</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">Ye</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">a</span><span class="p">(</span><span class="nx">c</span><span class="p">)},</span><span class="mi">10</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">wg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="nx">wg</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">j</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">;</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="mi">4</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;complete&quot;</span><span class="p">,</span><span class="kc">null</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">}};</span><span class="kd">function</span> <span class="nx">xg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">xg</span><span class="p">,</span><span class="nx">xd</span><span class="p">);</span><span class="nx">t</span><span class="o">=</span><span class="nx">xg</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.crud.req.SimpleStore&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">Eb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">yg</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)};</span></div><div class='line' id='LC257'><span class="kd">function</span> <span class="nx">yg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">V</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">f</span><span class="o">?</span><span class="s2">&quot;put&quot;</span><span class="o">:</span><span class="s2">&quot;add&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;Object&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">g</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="s2">&quot;s &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot; objects&quot;</span><span class="p">));</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">j</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="nx">n</span><span class="o">=</span><span class="nx">Wf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">Pf</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="o">!</span><span class="nx">f</span><span class="p">),</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="o">?</span><span class="nx">R</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">ge</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">jd</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">R</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">));</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="p">[],</span><span class="nx">q</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="p">{},</span><span class="nx">z</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">z</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">z</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">A</span><span class="p">;</span><span class="nx">c</span><span class="o">?</span><span class="nx">A</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">z</span><span class="p">]</span><span class="o">:</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">z</span><span class="p">],</span><span class="nx">A</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">k</span><span class="p">);</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">==</span><span class="nx">m</span><span class="o">||</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">Wf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">m</span><span class="p">));</span><span class="nx">A</span><span class="o">=</span><span class="nx">Pf</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">z</span><span class="p">],</span><span class="o">!</span><span class="nx">f</span><span class="p">);</span><span class="kc">null</span><span class="o">!=</span><span class="nx">A</span><span class="o">?</span><span class="nx">p</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">A</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">q</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">p</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nx">jd</span><span class="p">))}</span><span class="nx">R</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">q</span><span class="p">)}</span><span class="nx">h</span><span class="p">();</span><span class="nx">h</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="nx">a</span><span class="p">)}</span><span class="nx">t</span><span class="p">.</span><span class="nx">tb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">yg</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)};</span></div><div class='line' id='LC258'><span class="nx">t</span><span class="p">.</span><span class="nx">Gb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">yg</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">ub</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">yg</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Fb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">Dc</span><span class="p">(</span><span class="s2">&quot;putData&quot;</span><span class="p">);};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Hb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">yg</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Ya</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">j</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">Uf</span><span class="p">(</span><span class="nx">Wf</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">c</span><span class="p">);</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="nx">d</span><span class="p">();</span><span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="k">this</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">zg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">j</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="p">[],</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">n</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">n</span><span class="p">];</span><span class="nx">m</span> <span class="k">instanceof</span> <span class="nx">vd</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">m</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">k</span><span class="p">);</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">==</span><span class="nx">h</span><span class="o">||</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">Wf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">));</span><span class="nx">m</span><span class="o">=</span><span class="nx">Uf</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">);</span><span class="nx">g</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="nx">m</span><span class="p">}</span><span class="nx">R</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">e</span><span class="p">();</span><span class="nx">e</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="nx">a</span><span class="p">)}</span></div><div class='line' id='LC259'><span class="nx">t</span><span class="p">.</span><span class="nx">Cb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">zg</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Db</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">zg</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">gb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; removeById &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">;</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">j</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="nx">g</span><span class="o">=</span><span class="nx">qg</span><span class="p">(</span><span class="nx">Wf</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">c</span><span class="p">);</span><span class="nx">G</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;success &quot;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">g</span><span class="o">?</span><span class="s2">&quot; [not found]&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">));</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="nx">f</span><span class="p">();</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="k">this</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Jb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; removeByKeys &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot; keys&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">j</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">id</span><span class="p">;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">==</span><span class="nx">h</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">Wf</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">));</span><span class="nx">d</span><span class="o">+=</span><span class="nx">qg</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">l</span><span class="p">)}</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">e</span><span class="p">();</span><span class="nx">e</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="k">this</span><span class="p">)};</span></div><div class='line' id='LC260'><span class="nx">t</span><span class="p">.</span><span class="nx">xb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">hb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">hb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; removeByKeyRange &quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">c</span><span class="o">?</span><span class="nx">W</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">j</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="nx">g</span><span class="o">=</span><span class="nx">rg</span><span class="p">(</span><span class="nx">Wf</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">c</span><span class="p">);</span><span class="nx">G</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot; deleted &quot;</span><span class="o">+</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot; records.&quot;</span><span class="p">);</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="nx">f</span><span class="p">();</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="k">this</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Ib</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; removeByIndexKeyRange &quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">d</span><span class="o">?</span><span class="nx">W</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">j</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">Wf</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">ua</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">n</span><span class="o">++</span><span class="p">)</span><span class="nx">qg</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="p">[</span><span class="nx">n</span><span class="p">]);</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">);</span><span class="nx">f</span><span class="p">();</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="k">this</span><span class="p">)};</span></div><div class='line' id='LC261'><span class="nx">t</span><span class="p">.</span><span class="nx">Ta</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; clearByStores&quot;</span><span class="p">;</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">j</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">Wf</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">]).</span><span class="nx">clear</span><span class="p">();</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;success &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">);</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span><span class="nx">d</span><span class="p">();</span><span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="k">this</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Ua</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">j</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">Wf</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">]);</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">sg</span><span class="p">(</span><span class="nx">g</span><span class="p">))}</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="nx">c</span><span class="p">();</span><span class="nx">c</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="k">this</span><span class="p">)};</span></div><div class='line' id='LC262'><span class="nx">t</span><span class="p">.</span><span class="nx">Ga</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; count&quot;</span><span class="o">+</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">d</span><span class="o">?</span><span class="s2">&quot;Index&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">c</span><span class="o">?</span><span class="s2">&quot;KeyRange&quot;</span><span class="o">:</span><span class="s2">&quot;Store&quot;</span><span class="p">);</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">j</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="nx">g</span><span class="o">=</span><span class="nx">sg</span><span class="p">(</span><span class="nx">Wf</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;success &quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">);</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="nx">f</span><span class="p">();</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="k">this</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Z</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">e</span><span class="o">?</span><span class="nx">ge</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">m</span><span class="p">);</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">j</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">q</span><span class="p">){</span><span class="nx">q</span><span class="o">=</span><span class="nx">tg</span><span class="p">(</span><span class="nx">Wf</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">n</span><span class="p">);</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">m</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">q</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot; records found.&quot;</span><span class="p">);</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">q</span><span class="p">);</span><span class="nx">p</span><span class="p">();</span><span class="nx">p</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="k">this</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">Ag</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Ag</span><span class="p">,</span><span class="nx">xg</span><span class="p">);</span><span class="nx">Ag</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="k">new</span> <span class="nx">Of</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">Wd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Wd</span><span class="p">,</span><span class="nx">Ag</span><span class="p">);</span><span class="nx">Wd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.sql.req.SimpleStore&quot;</span><span class="p">);</span><span class="nx">Wd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">executeSql</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">qf</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">td</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">Ra</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">pd</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">sf</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">ke</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">]))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;Index &quot;&#39;</span><span class="o">+</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;&quot; not found in &#39;</span><span class="o">+</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]);(</span><span class="nx">b</span><span class="p">.</span><span class="nx">d</span><span class="o">?</span><span class="k">new</span> <span class="nx">xf</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="k">new</span> <span class="nx">wf</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">)).</span><span class="nx">Pb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">)}</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">Cc</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">H</span><span class="p">);};</span><span class="kd">function</span> <span class="nx">Bg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">Td</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Bg</span><span class="p">,</span><span class="nx">we</span><span class="p">);</span><span class="nx">Bg</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">executeSql</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">of</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">Ra</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">f</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s2">&quot;store: &quot;</span><span class="o">+</span><span class="nx">f</span><span class="o">+</span><span class="s2">&quot; not exists.&quot;</span><span class="p">);}</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;executeSql: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; params: &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">);</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;sql&quot;</span><span class="p">,</span><span class="nx">Ra</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">a</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">e</span><span class="p">);</span><span class="nx">T</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">X</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">executeSql</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="o">||</span><span class="p">[])},</span><span class="k">this</span><span class="p">);</span><span class="k">return</span> <span class="nx">g</span><span class="p">};</span><span class="kd">function</span> <span class="nx">Cg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">Z</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Cg</span><span class="p">,</span><span class="nx">mf</span><span class="p">);</span><span class="nx">Cg</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">xa</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">Bg</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)};</span><span class="nx">Cg</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">executeSql</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">Dg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="mi">5242880</span><span class="o">&lt;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;storage size request ignored, use Quota Management API instead&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">q</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">Ma</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="kc">NaN</span><span class="p">}</span><span class="nx">t</span><span class="o">=</span><span class="nx">Dg</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span></div><div class='line' id='LC263'><span class="nx">t</span><span class="p">.</span><span class="nx">Aa</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">G</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,(</span><span class="nx">d</span><span class="o">?</span><span class="s2">&quot;changing&quot;</span><span class="o">:</span><span class="s2">&quot;upgrading&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; version to &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">version</span><span class="o">+</span><span class="s2">&quot; from &quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">stores</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">Eg</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">stores</span><span class="p">[</span><span class="nx">d</span><span class="p">]);</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">objectStoreNames</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">fe</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">])</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">deleteObjectStore</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]),</span><span class="nx">G</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;store: &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot; deleted.&quot;</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">Ha</span><span class="o">?</span><span class="nx">F</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;database already set.&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">F</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;Error received.&quot;</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">q</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">o</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">q</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">q</span><span class="p">.</span><span class="nx">onabort</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">H</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;: abort&quot;</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">Qa</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">error</span><span class="p">)},</span><span class="nx">e</span><span class="p">.</span><span class="nx">q</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">H</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="o">+</span></div><div class='line' id='LC264'><span class="s2">&quot;: error&quot;</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">Qa</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">error</span><span class="p">)},</span><span class="nx">e</span><span class="p">.</span><span class="nx">q</span><span class="p">.</span><span class="nx">onversionchange</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">H</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot; closing connection for onversionchange to: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">version</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">q</span><span class="p">.</span><span class="nx">onabort</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">q</span><span class="p">.</span><span class="nx">onblocked</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">q</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">q</span><span class="p">.</span><span class="nx">onversionchange</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">fb</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">defaultPrevented</span><span class="p">)){</span><span class="nx">e</span><span class="p">.</span><span class="nx">q</span><span class="p">.</span><span class="nx">close</span><span class="p">();</span><span class="nx">e</span><span class="p">.</span><span class="nx">q</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nb">Error</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">mb</span><span class="p">(</span><span class="nx">b</span><span class="p">)}},</span><span class="nx">f</span><span class="p">.</span><span class="nx">r</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">g</span><span class="p">)))}</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">version</span><span class="p">;</span><span class="nx">G</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;Opening database: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; ver: &quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">wa</span><span class="o">?</span><span class="s2">&quot;auto&quot;</span><span class="o">:</span><span class="nx">h</span><span class="p">));</span><span class="kd">var</span> <span class="nx">l</span><span class="p">;</span><span class="nx">l</span><span class="o">=</span><span class="nx">v</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">?</span><span class="nx">pc</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">)</span><span class="o">:</span><span class="nx">pc</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">l</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">result</span><span class="p">;</span></div><div class='line' id='LC265'><span class="nx">v</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">version</span><span class="p">);</span><span class="nx">G</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;Database: &quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;, ver: &quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">version</span><span class="o">+</span><span class="s2">&quot; opened.&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">wa</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">L</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span> <span class="k">instanceof</span> <span class="nx">ae</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">stores</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">fe</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">stores</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">getName</span><span class="p">())</span><span class="o">||</span><span class="nx">be</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">stores</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">ta</span><span class="p">());</span><span class="nx">f</span><span class="o">=</span><span class="nx">Ze</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">G</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;Schema change require for difference in &quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">);</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">ea</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">version</span><span class="p">)</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">version</span><span class="o">+</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;IDBOpenDBRequest&quot;</span><span class="k">in</span> <span class="nx">u</span><span class="p">){</span><span class="nx">h</span><span class="p">.</span><span class="nx">close</span><span class="p">();</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">pc</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">);</span><span class="nx">n</span><span class="p">.</span><span class="nx">onupgradeneeded</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">result</span><span class="p">;</span><span class="nx">G</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;re-open for version &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">version</span><span class="p">);</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">transaction</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)};</span><span class="nx">n</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">result</span><span class="p">)};</span></div><div class='line' id='LC266'><span class="nx">n</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">G</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;: fail.&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">(</span><span class="kc">null</span><span class="p">)}}</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">setVersion</span><span class="p">(</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">p</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">F</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;migrating from &quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">version</span><span class="o">+</span><span class="s2">&quot; to &quot;</span><span class="o">+</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot; failed.&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">a</span><span class="p">)};</span><span class="nx">p</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">p</span><span class="p">.</span><span class="nx">transaction</span><span class="p">.</span><span class="nx">oncomplete</span><span class="o">=</span><span class="nx">L</span><span class="p">;</span><span class="nx">c</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">p</span><span class="p">.</span><span class="nx">transaction</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)};</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">pc</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">result</span><span class="p">;</span><span class="nx">G</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;: OK.&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">G</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;: fail.&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">(</span><span class="kc">null</span><span class="p">)}};</span><span class="kc">null</span><span class="o">!=</span><span class="nx">p</span><span class="p">.</span><span class="nx">transaction</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">transaction</span><span class="p">.</span><span class="nx">oncomplete</span><span class="o">=</span><span class="nx">L</span><span class="p">)}}</span><span class="k">else</span> <span class="nx">d</span><span class="p">(</span><span class="nx">h</span><span class="p">)},</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">version</span><span class="o">&gt;</span><span class="nx">h</span><span class="p">.</span><span class="nx">version</span><span class="p">){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">setVersion</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">version</span><span class="p">);</span></div><div class='line' id='LC267'><span class="nx">l</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">F</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;migrating from &quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">version</span><span class="o">+</span><span class="s2">&quot; to &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">version</span><span class="o">+</span><span class="s2">&quot; failed.&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">a</span><span class="p">)};</span><span class="nx">l</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">transaction</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}}</span><span class="k">else</span> <span class="nx">b</span><span class="p">.</span><span class="nx">version</span><span class="o">==</span><span class="nx">h</span><span class="p">.</span><span class="nx">version</span><span class="o">?</span><span class="nx">G</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;database version &quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">version</span><span class="o">+</span><span class="s2">&quot; ready to go&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">F</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;connected database version &quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">version</span><span class="o">+</span><span class="s2">&quot; is higher than requested version.&quot;</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">L</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">Ze</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="p">(</span><span class="nx">G</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="k">new</span> <span class="nx">de</span><span class="p">(</span><span class="s2">&quot;different schema: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">)))</span><span class="o">:</span><span class="nx">d</span><span class="p">(</span><span class="nx">h</span><span class="p">)},</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="p">)};</span><span class="nx">l</span><span class="p">.</span><span class="nx">onupgradeneeded</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">result</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="kc">NaN</span><span class="p">;</span><span class="nx">G</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;upgrade needed for version &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">version</span><span class="p">);</span></div><div class='line' id='LC268'><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">transaction</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)};</span><span class="nx">l</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">ec</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s1">&#39;open request to database &quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s1">&#39;&quot; &#39;</span><span class="o">+</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">version</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot; with version &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">version</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; cause error of &quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">.</span><span class="nx">error</span><span class="p">.</span><span class="nx">name</span><span class="p">);</span><span class="nx">d</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">c</span><span class="p">)};</span><span class="nx">l</span><span class="p">.</span><span class="nx">onblocked</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">ec</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;database &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">version</span><span class="o">+</span><span class="s2">&quot; block, close other connections.&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">c</span><span class="p">)};</span><span class="nx">ea</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">Ma</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nb">isNaN</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">Ma</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="s2">&quot;done&quot;</span><span class="o">!=</span><span class="nx">l</span><span class="p">.</span><span class="nx">readyState</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">ec</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;: database state is still &quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">.</span><span class="nx">readyState</span><span class="p">),</span><span class="nx">d</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="k">new</span> <span class="nx">ud</span><span class="p">(</span><span class="s2">&quot;connection timeout after &quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">Ma</span><span class="p">)))},</span><span class="k">this</span><span class="p">.</span><span class="nx">Ma</span><span class="p">);</span><span class="k">return</span> <span class="nx">f</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Ma</span><span class="o">=</span><span class="mi">18</span><span class="nx">E4</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">mb</span><span class="o">=</span><span class="nx">k</span><span class="p">();</span></div><div class='line' id='LC269'><span class="nx">t</span><span class="p">.</span><span class="nx">Qa</span><span class="o">=</span><span class="nx">k</span><span class="p">();</span><span class="nx">t</span><span class="p">.</span><span class="nx">fb</span><span class="o">=</span><span class="nx">k</span><span class="p">();</span><span class="nx">t</span><span class="p">.</span><span class="nx">Ba</span><span class="o">=</span><span class="nx">aa</span><span class="p">(</span><span class="s2">&quot;indexeddb&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">lb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="k">this</span><span class="p">.</span><span class="nx">q</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.con.IndexedDb&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">q</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">kb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">q</span><span class="o">?</span><span class="nb">parseFloat</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">q</span><span class="p">.</span><span class="nx">version</span><span class="p">)</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">};</span></div><div class='line' id='LC270'><span class="nx">t</span><span class="p">.</span><span class="nx">L</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">q</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">===</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">objectStoreNames</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="k">new</span> <span class="nx">Ye</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">version</span><span class="p">));</span><span class="k">return</span><span class="p">}</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">cd</span><span class="p">;}</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">db</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">b</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">objectStoreNames</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">--</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">objectStoreNames</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="k">new</span> <span class="nx">Ye</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">version</span><span class="p">));</span><span class="k">return</span><span class="p">}</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">transaction</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">nc</span><span class="p">)}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">objectStoreNames</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">objectStore</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="p">]),</span><span class="nx">l</span><span class="o">=</span><span class="p">[],</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">indexNames</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">m</span><span class="p">;</span><span class="nx">n</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">index</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">indexNames</span><span class="p">[</span><span class="nx">n</span><span class="p">]);</span><span class="nx">l</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">Fe</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">p</span><span class="p">.</span><span class="nx">unique</span><span class="p">,</span><span class="nx">p</span><span class="p">.</span><span class="nx">multiEntry</span><span class="p">,</span><span class="nx">p</span><span class="p">.</span><span class="nx">name</span><span class="p">)}</span><span class="nx">f</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span></div><div class='line' id='LC271'><span class="k">new</span> <span class="nx">Yd</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">autoIncrement</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="p">)}</span><span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">Ye</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">version</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">)};</span></div><div class='line' id='LC272'><span class="kd">function</span> <span class="nx">Eg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">autoIncrement</span><span class="o">:!!</span><span class="nx">d</span><span class="p">.</span><span class="nx">b</span><span class="p">};</span><span class="kc">null</span><span class="o">!=</span><span class="nx">d</span><span class="p">.</span><span class="nx">keyPath</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyPath</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">);</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">createObjectStore</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">getName</span><span class="p">(),</span><span class="nx">a</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;InvalidAccessError&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">name</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">od</span><span class="p">(</span><span class="s2">&quot;creating store for &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot; of keyPath: &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">keyPath</span><span class="o">+</span><span class="s2">&quot; and autoIncrement: &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;ConstraintError&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">name</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">de</span><span class="p">(</span><span class="s2">&quot;creating store for &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">getName</span><span class="p">());</span><span class="k">throw</span> <span class="nx">c</span><span class="p">;}}</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;Creating Object Store for &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot; keyPath: &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">objectStoreNames</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">getName</span><span class="p">()))</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">objectStore</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">getName</span><span class="p">()),</span></div><div class='line' id='LC273'><span class="nx">Me</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">keyPath</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">keyPath</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">))</span><span class="nx">b</span><span class="p">.</span><span class="nx">deleteObjectStore</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">getName</span><span class="p">()),</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;store: &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot; deleted due to keyPath change.&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">();</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">da</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">autoIncrement</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">da</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">autoIncrement</span><span class="o">!=</span><span class="nx">d</span><span class="p">.</span><span class="nx">b</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">deleteObjectStore</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">getName</span><span class="p">()),</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;store: &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot; deleted due to autoIncrement change.&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">();</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexNames</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">n</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">p</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">getName</span><span class="p">())){</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">index</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">getName</span><span class="p">()),</span><span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="nx">q</span><span class="p">.</span><span class="nx">unique</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">m</span><span class="p">.</span><span class="nx">unique</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">.</span><span class="nx">unique</span><span class="o">!=</span><span class="nx">m</span><span class="p">.</span><span class="nx">unique</span><span class="p">,</span><span class="nx">z</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="nx">q</span><span class="p">.</span><span class="nx">multiEntry</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC274'><span class="kc">null</span><span class="o">!=</span><span class="nx">m</span><span class="p">.</span><span class="nx">multiEntry</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">.</span><span class="nx">multiEntry</span><span class="o">!=</span><span class="nx">m</span><span class="p">.</span><span class="nx">multiEntry</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="nx">q</span><span class="p">.</span><span class="nx">keyPath</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">m</span><span class="p">.</span><span class="nx">keyPath</span><span class="o">&amp;&amp;!!</span><span class="nx">Me</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="o">||</span><span class="nx">z</span><span class="o">||</span><span class="nx">q</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">deleteIndex</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">getName</span><span class="p">()),</span><span class="nx">p</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">--</span><span class="p">,</span><span class="nx">l</span><span class="o">++</span><span class="p">}</span><span class="k">else</span> <span class="nx">p</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">unique</span><span class="o">||</span><span class="nx">m</span><span class="p">.</span><span class="nx">multiEntry</span><span class="o">?</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="p">{</span><span class="nx">unique</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">unique</span><span class="p">,</span><span class="nx">multiEntry</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">multiEntry</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">createIndex</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">getName</span><span class="p">(),</span><span class="nx">m</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">,</span><span class="nx">p</span><span class="p">))</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">createIndex</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">getName</span><span class="p">(),</span><span class="nx">m</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">),</span><span class="nx">g</span><span class="o">++</span><span class="p">)}</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">n</span><span class="o">++</span><span class="p">)</span><span class="nx">ke</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">[</span><span class="nx">n</span><span class="p">])</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">deleteIndex</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">n</span><span class="p">]),</span><span class="nx">h</span><span class="o">++</span><span class="p">);</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;Updated store: &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;, &quot;</span><span class="o">+</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot; index created, &quot;</span><span class="o">+</span><span class="nx">h</span><span class="o">+</span><span class="s2">&quot; index deleted, &quot;</span><span class="o">+</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot; modified.&quot;</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">n</span><span class="o">++</span><span class="p">)</span><span class="nx">m</span><span class="o">=</span></div><div class='line' id='LC275'><span class="nx">d</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;Creating index: &quot;</span><span class="o">+</span><span class="nx">m</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot; multiEntry: &quot;</span><span class="o">+</span><span class="nx">m</span><span class="p">.</span><span class="nx">multiEntry</span><span class="p">),</span><span class="nx">m</span><span class="p">.</span><span class="nx">unique</span><span class="o">||</span><span class="nx">m</span><span class="p">.</span><span class="nx">multiEntry</span><span class="o">?</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="p">{</span><span class="nx">unique</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">unique</span><span class="p">,</span><span class="nx">multiEntry</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">multiEntry</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">createIndex</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">getName</span><span class="p">(),</span><span class="nx">m</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">,</span><span class="nx">p</span><span class="p">))</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">createIndex</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">getName</span><span class="p">(),</span><span class="nx">m</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">);</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;Created store: &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot; keyPath: &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">)}}</span></div><div class='line' id='LC276'><span class="nx">t</span><span class="p">.</span><span class="nx">Wa</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">q</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">objectStoreNames</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">--</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">objectStoreNames</span><span class="p">[</span><span class="nx">f</span><span class="p">]}</span><span class="mi">0</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">a</span><span class="p">(</span><span class="kc">null</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">transaction</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">oncomplete</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="p">(</span><span class="s2">&quot;complete&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">onabort</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="p">(</span><span class="s2">&quot;abort&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">)};</span><span class="nx">t</span><span class="p">.</span><span class="nx">jb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="o">+</span><span class="s2">&quot; closing connection&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">q</span><span class="p">.</span><span class="nx">close</span><span class="p">()};</span><span class="nx">t</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;IndexedDB:&quot;</span><span class="o">+</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">q</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">q</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">q</span><span class="p">.</span><span class="nx">version</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)};</span></div><div class='line' id='LC277'><span class="nx">Bc</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">pc</span><span class="o">||</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="s2">&quot;indexeddb&quot;</span><span class="o">!=</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">pc</span><span class="p">.</span><span class="nx">deleteDatabase</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nx">Fd</span><span class="p">(</span><span class="s2">&quot;IDBVersionChangeEvent &quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">onblocked</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">][</span><span class="mi">0</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">][</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="p">)};</span><span class="nx">c</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="nx">c</span><span class="p">.</span><span class="nx">onsuccess</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="k">return</span> <span class="nx">d</span><span class="p">});</span><span class="kd">function</span> <span class="nx">Fg</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">vg</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="kc">NaN</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Fg</span><span class="p">,</span><span class="nx">vg</span><span class="p">);</span><span class="nx">t</span><span class="o">=</span><span class="nx">Fg</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.con.SimpleStorage&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">kb</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;b&quot;</span><span class="p">);</span></div><div class='line' id='LC278'><span class="nx">t</span><span class="p">.</span><span class="nx">Aa</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="o">?</span><span class="p">(</span><span class="nx">G</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot; opening fail&quot;</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">o</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">G</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot; version &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">kb</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot; open&quot;</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">))},</span><span class="mi">10</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="p">.</span><span class="nx">yb</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">Yf</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="kc">NaN</span><span class="p">;</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">ze</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="nx">f</span><span class="p">));</span><span class="nx">v</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">version</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">ea</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">version</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">version</span><span class="o">=</span><span class="kc">NaN</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="k">new</span> <span class="nx">Ye</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">Ze</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">wa</span><span class="o">&amp;&amp;!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">version</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">version</span><span class="o">&gt;</span><span class="nx">g</span><span class="p">.</span><span class="nx">version</span><span class="p">)</span><span class="nx">c</span><span class="p">(</span><span class="kc">NaN</span><span class="p">,</span><span class="k">new</span> <span class="nx">ld</span><span class="p">(</span><span class="s2">&quot;existing version &quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">version</span><span class="o">+</span><span class="s2">&quot; is larger than &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">version</span><span class="p">));</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">version</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span></div><div class='line' id='LC279'><span class="nx">v</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">?</span><span class="nx">h</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">version</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">count</span><span class="p">();</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">pa</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">ae</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">.</span><span class="nx">count</span><span class="p">();</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="nx">l</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">pa</span><span class="p">(</span><span class="nx">h</span><span class="p">),</span><span class="nx">be</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">);</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">toJSON</span><span class="p">();</span><span class="nx">h</span><span class="p">.</span><span class="nx">version</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">||</span><span class="kc">NaN</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">W</span><span class="p">(</span><span class="nx">h</span><span class="p">));</span><span class="nx">c</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">version</span><span class="o">||</span><span class="kc">NaN</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">count</span><span class="p">();</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">pa</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">version</span><span class="o">||</span><span class="kc">NaN</span><span class="p">;</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">)}</span><span class="k">else</span> <span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">toJSON</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">version</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">W</span><span class="p">(</span><span class="nx">g</span><span class="p">)),</span><span class="nx">c</span><span class="p">(</span><span class="kc">NaN</span><span class="p">);</span><span class="k">return</span> <span class="nx">e</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">lb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">mb</span><span class="o">=</span><span class="nx">k</span><span class="p">();</span><span class="nx">t</span><span class="p">.</span><span class="nx">Qa</span><span class="o">=</span><span class="nx">k</span><span class="p">();</span><span class="nx">t</span><span class="p">.</span><span class="nx">fb</span><span class="o">=</span><span class="nx">k</span><span class="p">();</span><span class="nx">t</span><span class="p">.</span><span class="nx">Ba</span><span class="o">=</span><span class="nx">aa</span><span class="p">(</span><span class="s2">&quot;memory&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">jb</span><span class="o">=</span><span class="nx">k</span><span class="p">();</span></div><div class='line' id='LC280'><span class="nx">t</span><span class="p">.</span><span class="nx">Wa</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="k">new</span> <span class="nx">wg</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}))};</span><span class="nx">t</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;SimpleStorage:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">Ba</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">Gg</span><span class="p">(){</span><span class="nx">Fg</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">)}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Gg</span><span class="p">,</span><span class="nx">Fg</span><span class="p">);</span><span class="nx">Gg</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">yb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nb">window</span><span class="p">.</span><span class="nx">localStorage</span><span class="p">};</span><span class="nx">Gg</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Ba</span><span class="o">=</span><span class="nx">aa</span><span class="p">(</span><span class="s2">&quot;localstorage&quot;</span><span class="p">);</span><span class="nx">Bc</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;localstorage&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">Gg</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nx">ae</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">Aa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">L</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">stores</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">Wf</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">stores</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">getName</span><span class="p">()).</span><span class="nx">clear</span><span class="p">()})}});</span><span class="kd">function</span> <span class="nx">Hg</span><span class="p">(){</span><span class="nx">Fg</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">)}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Hg</span><span class="p">,</span><span class="nx">Fg</span><span class="p">);</span><span class="nx">Hg</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">yb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nb">window</span><span class="p">.</span><span class="nx">sessionStorage</span><span class="p">};</span><span class="nx">Hg</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Ba</span><span class="o">=</span><span class="nx">aa</span><span class="p">(</span><span class="s2">&quot;sessionstorage&quot;</span><span class="p">);</span></div><div class='line' id='LC281'><span class="nx">Bc</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;sessionstorage&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">Hg</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nx">ae</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">Aa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">L</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">stores</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">Wf</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">stores</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">getName</span><span class="p">()).</span><span class="nx">clear</span><span class="p">()})}});</span><span class="kd">function</span> <span class="nx">Ig</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="mi">4194304</span><span class="p">}</span><span class="nx">t</span><span class="o">=</span><span class="nx">Ig</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span></div><div class='line' id='LC282'><span class="nx">t</span><span class="p">.</span><span class="nx">Aa</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">version</span><span class="o">?</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">version</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">wa</span><span class="o">?</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="nx">f</span><span class="o">+</span><span class="mi">1</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">version</span><span class="p">;</span><span class="nx">fc</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;: changing version from &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">version</span><span class="o">+</span><span class="s2">&quot; to &quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">);</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">changeVersion</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">version</span><span class="p">,</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">L</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">h</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">count</span><span class="p">();</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">pa</span><span class="p">(</span><span class="nx">d</span><span class="p">).</span><span class="nx">getName</span><span class="p">()),</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">hint</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">pa</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="nx">Jg</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">pa</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="o">++</span><span class="p">},</span><span class="nx">f</span><span class="p">)}</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">count</span><span class="p">();</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">pa</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">fe</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">getName</span><span class="p">())</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span> <span class="k">instanceof</span> <span class="nx">ae</span><span class="o">?</span><span class="nx">be</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="s2">&quot;DROP TABLE &quot;</span><span class="o">+</span><span class="nx">Qe</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">G</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">(</span><span class="nx">f</span><span class="p">,[],</span><span class="nx">k</span><span class="p">(),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC283'><span class="nx">b</span><span class="p">){</span><span class="k">throw</span> <span class="nx">b</span><span class="p">;})))},</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)},</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">ec</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;SQLError &quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">code</span><span class="o">+</span><span class="s2">&quot;(&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">message</span><span class="o">+</span><span class="s2">&quot;) while changing version from &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">version</span><span class="o">+</span><span class="s2">&quot; to &quot;</span><span class="o">+</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot; on &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="k">throw</span> <span class="nx">c</span><span class="p">;},</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="s2">&quot;.&quot;</span><span class="p">;</span><span class="nx">l</span><span class="o">!=</span><span class="nx">c</span><span class="p">.</span><span class="nx">stores</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="s2">&quot; but unexpected stores exists.&quot;</span><span class="p">);</span><span class="nx">H</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">version</span><span class="o">+</span><span class="s2">&quot; ready&quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">);</span><span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="k">else</span> <span class="nx">F</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;: changing version voided.&quot;</span><span class="p">)})}</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">w</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">o</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">w</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">r</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">f</span><span class="p">)))}</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="kc">NaN</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">h</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">openDatabase</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">l</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;SECURITY_ERR&quot;</span><span class="o">==</span><span class="nx">l</span><span class="p">.</span><span class="nx">name</span><span class="p">)</span><span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;SECURITY_ERR for opening &quot;</span><span class="o">+</span></div><div class='line' id='LC284'><span class="nx">a</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">Mb</span><span class="o">=</span><span class="k">new</span> <span class="nx">sd</span><span class="p">(</span><span class="nx">l</span><span class="p">);</span><span class="k">else</span> <span class="k">throw</span> <span class="nx">l</span><span class="p">;}</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">version</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="s2">&quot;database &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">h</span><span class="p">.</span><span class="nx">version</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="s2">&quot; version &quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">version</span><span class="p">);</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">version</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">version</span><span class="o">==</span><span class="nx">h</span><span class="p">.</span><span class="nx">version</span><span class="o">?</span><span class="p">(</span><span class="nx">fc</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;Existing &quot;</span><span class="o">+</span><span class="nx">n</span><span class="o">+</span><span class="s2">&quot; opened as requested.&quot;</span><span class="p">),</span><span class="nx">d</span><span class="p">(</span><span class="nx">h</span><span class="p">))</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">L</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){(</span><span class="nx">a</span><span class="o">=</span><span class="nx">Ze</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">))</span><span class="o">?</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">h</span><span class="p">.</span><span class="nx">version</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">fc</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;New &quot;</span><span class="o">+</span><span class="nx">n</span><span class="o">+</span><span class="s2">&quot; created.&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">wa</span><span class="o">?</span><span class="nx">fc</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;Existing &quot;</span><span class="o">+</span><span class="nx">n</span><span class="o">+</span><span class="s2">&quot; opened and schema change for &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">fc</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;Existing &quot;</span><span class="o">+</span><span class="nx">n</span><span class="o">+</span><span class="s2">&quot; opened and  schema change to version &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">version</span><span class="o">+</span><span class="s2">&quot; for &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">),</span><span class="nx">c</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">fc</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;Existing &quot;</span><span class="o">+</span><span class="nx">n</span><span class="o">+</span><span class="s2">&quot; with same schema opened.&quot;</span><span class="p">),</span></div><div class='line' id='LC285'><span class="nx">d</span><span class="p">(</span><span class="nx">h</span><span class="p">))},</span><span class="kc">null</span><span class="p">,</span><span class="nx">h</span><span class="p">)}</span><span class="k">else</span> <span class="nx">d</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">Mb</span><span class="p">);</span><span class="k">return</span> <span class="nx">g</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Ba</span><span class="o">=</span><span class="nx">aa</span><span class="p">(</span><span class="s2">&quot;websql&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">Mb</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">w</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.con.WebSql&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">mb</span><span class="o">=</span><span class="nx">k</span><span class="p">();</span><span class="nx">t</span><span class="p">.</span><span class="nx">Qa</span><span class="o">=</span><span class="nx">k</span><span class="p">();</span></div><div class='line' id='LC286'><span class="kd">function</span> <span class="nx">Kg</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">l</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;CREATE TABLE IF NOT EXISTS &quot;</span><span class="o">+</span><span class="nx">Qe</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; (&quot;</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="p">(</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; PRIMARY KEY &quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">+=</span><span class="s2">&quot; AUTOINCREMENT &quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot; ,_default_ BLOB&quot;</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">f</span><span class="o">=</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">index</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">multiEntry</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="s2">&quot;ydn.db.me:&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">.</span><span class="nx">getName</span><span class="p">(),</span><span class="nx">m</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">unique</span><span class="o">?</span><span class="s2">&quot; UNIQUE &quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="s2">&quot;CREATE TABLE IF NOT EXISTS &quot;</span><span class="o">+</span><span class="nx">Fa</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; (&quot;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;, &quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">.</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">.</span><span class="nx">h</span><span class="o">+</span><span class="nx">m</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">l</span><span class="p">)}</span><span class="k">else</span> <span class="nx">l</span><span class="p">.</span><span class="nx">unique</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="s2">&quot; UNIQUE &quot;</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">,</span><span class="s2">&quot;BLOB&quot;</span><span class="o">!=</span><span class="nx">l</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="s2">&quot;CREATE &quot;</span><span class="o">+</span><span class="nx">n</span><span class="o">+</span><span class="s2">&quot; INDEX IF NOT EXISTS &quot;</span><span class="o">+</span><span class="nx">Fa</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span></div><div class='line' id='LC287'><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">.</span><span class="nx">getName</span><span class="p">())</span><span class="o">+</span><span class="s2">&quot; ON &quot;</span><span class="o">+</span><span class="nx">Qe</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; (&quot;</span><span class="o">+</span><span class="nx">Fa</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">m</span><span class="p">)),</span><span class="nx">m</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="o">==</span><span class="nx">f</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">+=</span><span class="s2">&quot;, &quot;</span><span class="o">+</span><span class="nx">m</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">.</span><span class="nx">h</span><span class="o">+</span><span class="nx">n</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">m</span><span class="p">))}</span><span class="nx">e</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">e</span><span class="p">}</span><span class="nx">t</span><span class="p">.</span><span class="nx">kb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">w</span><span class="o">?</span><span class="nb">parseFloat</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">w</span><span class="p">.</span><span class="nx">version</span><span class="p">)</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">};</span></div><div class='line' id='LC288'><span class="nx">t</span><span class="p">.</span><span class="nx">L</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">throw</span> <span class="nx">b</span><span class="p">;}</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">rows</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">rows</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">rows</span><span class="p">.</span><span class="nx">item</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;__WebKitDatabaseInfoTable__&quot;</span><span class="o">!=</span><span class="nx">e</span><span class="p">.</span><span class="nx">name</span><span class="o">&amp;&amp;</span><span class="s2">&quot;sqlite_sequence&quot;</span><span class="o">!=</span><span class="nx">e</span><span class="p">.</span><span class="nx">name</span><span class="o">&amp;&amp;</span><span class="s2">&quot;table&quot;</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="s2">&quot;sql&quot;</span><span class="k">in</span> <span class="nx">e</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">sql</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="nx">H</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;Parsing table schema from SQL: &quot;</span><span class="o">+</span><span class="nx">q</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;(&quot;</span><span class="p">),</span><span class="nx">q</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="s2">&quot;)&quot;</span><span class="p">)).</span><span class="nx">match</span><span class="p">(</span><span class="sr">/(?:&quot;[^&quot;]*&quot;|[^,])+/g</span><span class="p">),</span><span class="nx">z</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="p">[],</span><span class="nx">I</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">L</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">E</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">E</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">U</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">E</span><span class="p">].</span><span class="nx">match</span><span class="p">(</span><span class="sr">/\w+|&quot;[^&quot;]+&quot;/g</span><span class="p">),</span><span class="nx">ra</span><span class="o">=</span><span class="nx">La</span><span class="p">(</span><span class="nx">U</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()}),</span><span class="nx">S</span><span class="o">=</span><span class="nx">Ca</span><span class="p">(</span><span class="nx">U</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span></div><div class='line' id='LC289'><span class="s1">&#39;&quot;&#39;</span><span class="p">),</span><span class="nx">U</span><span class="o">=</span><span class="nx">Ge</span><span class="p">(</span><span class="nx">ra</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="o">!=</span><span class="nx">ra</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;PRIMARY&quot;</span><span class="p">)</span><span class="o">&amp;&amp;-</span><span class="mi">1</span><span class="o">!=</span><span class="nx">ra</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;KEY&quot;</span><span class="p">)){</span><span class="nx">A</span><span class="o">=</span><span class="nx">U</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">(</span><span class="nx">S</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">sa</span><span class="p">(</span><span class="nx">S</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;_ROWID_&quot;</span><span class="o">!=</span><span class="nx">S</span><span class="p">){</span><span class="kd">var</span> <span class="nx">za</span><span class="o">=</span><span class="nx">S</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">),</span><span class="nx">z</span><span class="o">=</span><span class="nx">S</span><span class="p">;</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">za</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">z</span><span class="o">=</span><span class="nx">za</span><span class="p">,</span><span class="nx">A</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">)}</span><span class="o">-</span><span class="mi">1</span><span class="o">!=</span><span class="nx">ra</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;AUTOINCREMENT&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">I</span><span class="o">=!</span><span class="mi">0</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;_ROWID_&quot;</span><span class="o">!=</span><span class="nx">S</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;_default_&quot;</span><span class="o">==</span><span class="nx">S</span><span class="p">)</span><span class="nx">L</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">rd</span><span class="o">=</span><span class="s2">&quot;UNIQUE&quot;</span><span class="o">==</span><span class="nx">ra</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="mi">0</span><span class="o">==</span><span class="nx">S</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">tbl_name</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">S</span><span class="o">=</span><span class="nx">S</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">tbl_name</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="mi">1</span><span class="p">));</span><span class="nx">ra</span><span class="o">=</span><span class="k">new</span> <span class="nx">Fe</span><span class="p">(</span><span class="nx">S</span><span class="p">,</span><span class="nx">U</span><span class="p">,</span><span class="nx">rd</span><span class="p">);</span><span class="nx">q</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">ra</span><span class="p">)}}</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">name</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="s2">&quot;ydn.db.me:&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">lb</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">name</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;:&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">3</span><span class="o">&lt;=</span><span class="nx">lb</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">Db</span><span class="o">=</span><span class="nx">lb</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">z</span><span class="o">=</span><span class="k">new</span> <span class="nx">Fe</span><span class="p">(</span><span class="nx">lb</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">U</span><span class="p">,</span><span class="nx">rd</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">Oa</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">==</span></div><div class='line' id='LC290'><span class="nx">lb</span><span class="p">[</span><span class="mi">2</span><span class="p">]});</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">r</span><span class="o">?</span><span class="nx">q</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">=</span><span class="nx">z</span><span class="o">:</span><span class="nx">q</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">z</span><span class="p">);</span><span class="nx">r</span><span class="o">=</span><span class="nx">Oa</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">===</span><span class="nx">Db</span><span class="p">});</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">r</span><span class="o">?</span><span class="p">(</span><span class="nx">E</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">r</span><span class="p">],</span><span class="nx">h</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">Yd</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">getName</span><span class="p">(),</span><span class="nx">E</span><span class="p">.</span><span class="nx">keyPath</span><span class="p">,</span><span class="nx">I</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="nx">L</span><span class="p">))</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nx">Yd</span><span class="p">(</span><span class="nx">Db</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">,[</span><span class="nx">z</span><span class="p">]));</span><span class="nx">H</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s1">&#39;multi entry index &quot;&#39;</span><span class="o">+</span><span class="nx">z</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span><span class="s1">&#39;&quot; found in &#39;</span><span class="o">+</span><span class="nx">Db</span><span class="o">+</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="o">==</span><span class="nx">r</span><span class="o">?</span><span class="s2">&quot;*&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">))}</span><span class="k">else</span> <span class="nx">F</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s1">&#39;Invalid multiEntry store name &quot;&#39;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">)}</span><span class="k">else</span> <span class="nx">E</span><span class="o">=</span><span class="nx">Oa</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">name</span><span class="p">}),</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">E</span><span class="o">?</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">E</span><span class="p">].</span><span class="nx">index</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">q</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">r</span><span class="p">),</span><span class="nx">h</span><span class="p">[</span><span class="nx">E</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">Yd</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">z</span><span class="p">,</span><span class="nx">I</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="nx">L</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">q</span><span class="o">=</span><span class="k">new</span> <span class="nx">Yd</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">z</span><span class="p">,</span><span class="nx">I</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="nx">L</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">q</span><span class="p">))}}</span><span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nx">Ye</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="nx">a</span><span class="p">(</span><span class="nx">d</span><span class="p">)}}</span></div><div class='line' id='LC291'><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">w</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">version</span><span class="o">?</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">version</span><span class="p">)</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">?</span><span class="k">void</span> <span class="mi">0</span><span class="o">:</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="p">[];</span><span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">(</span><span class="s2">&quot;SELECT * FROM sqlite_master&quot;</span><span class="p">,[],</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">readTransaction</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">L</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">ec</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;opening tx: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">message</span><span class="p">);</span><span class="k">throw</span> <span class="nx">a</span><span class="p">;},</span><span class="nx">e</span><span class="p">)};</span></div><div class='line' id='LC292'><span class="kd">function</span> <span class="nx">Jg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">(</span><span class="nx">a</span><span class="p">,[],</span><span class="kd">function</span><span class="p">(){</span><span class="nx">g</span><span class="o">++</span><span class="p">;</span><span class="nx">g</span><span class="o">==</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">)},</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">g</span><span class="o">++</span><span class="p">;</span><span class="nx">g</span><span class="o">==</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="s2">&quot;SQLError creating table: &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="o">+</span><span class="s1">&#39; for executing &quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="p">;</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">qd</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">);})}</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">Kg</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="s2">&quot;Create&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">$d</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;same table &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot; exists.&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">return</span><span class="p">}</span><span class="nx">l</span><span class="o">=</span><span class="s2">&quot;Modify&quot;</span><span class="p">;</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;table: &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot; has changed by &quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot; ALTER TABLE cannot run in WebSql, dropping old table.&quot;</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="s2">&quot;DROP TABLE IF EXISTS &quot;</span><span class="o">+</span></div><div class='line' id='LC293'><span class="nx">Fa</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">getName</span><span class="p">()))}</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot; table: &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;: &quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;;&quot;</span><span class="p">));</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="nx">f</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="nx">a</span><span class="p">])}</span><span class="nx">t</span><span class="p">.</span><span class="nx">lb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="k">this</span><span class="p">.</span><span class="nx">w</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">jb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">w</span><span class="o">=</span><span class="kc">null</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">Wa</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">H</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="o">+</span><span class="s2">&quot;: Tx &quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot; request cause error.&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">(</span><span class="s2">&quot;abort&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(){</span><span class="nx">d</span><span class="p">(</span><span class="s2">&quot;complete&quot;</span><span class="p">,{</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;complete&quot;</span><span class="p">})}</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="kc">null</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">w</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="kc">null</span><span class="p">),</span><span class="nx">d</span><span class="p">(</span><span class="s2">&quot;abort&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">Mb</span><span class="p">));</span><span class="nx">c</span><span class="o">==</span><span class="nx">nc</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">w</span><span class="p">.</span><span class="nx">readTransaction</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="o">==</span><span class="nx">oc</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">w</span><span class="p">.</span><span class="nx">changeVersion</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">w</span><span class="p">.</span><span class="nx">version</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">w</span><span class="p">.</span><span class="nx">version</span><span class="o">+</span><span class="mi">1</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">w</span><span class="p">.</span><span class="nx">transaction</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">)};</span></div><div class='line' id='LC294'><span class="nx">Bc</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;websql&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">Ig</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nx">ae</span><span class="p">;</span><span class="nx">G</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;deleting websql database: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">Aa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">c</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">Xb</span><span class="p">,</span><span class="s2">&quot;all tables in &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; deleted.&quot;</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">)};</span><span class="nx">d</span><span class="p">.</span><span class="nx">aa</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">Wa</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">(</span><span class="s1">&#39;SELECT * FROM sqlite_master WHERE type = &quot;table&quot;&#39;</span><span class="p">,[],</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">rows</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">rows</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">m</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">rows</span><span class="p">.</span><span class="nx">item</span><span class="p">(</span><span class="nx">m</span><span class="p">);</span><span class="s2">&quot;__WebKitDatabaseInfoTable__&quot;</span><span class="o">!=</span><span class="nx">p</span><span class="p">.</span><span class="nx">name</span><span class="o">&amp;&amp;</span><span class="s2">&quot;sqlite_sequence&quot;</span><span class="o">!=</span><span class="nx">p</span><span class="p">.</span><span class="nx">name</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="o">++</span><span class="p">,</span><span class="nx">H</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;deleting table: &quot;</span><span class="o">+</span><span class="nx">p</span><span class="p">.</span><span class="nx">name</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">(</span><span class="s2">&quot;DROP TABLE &quot;</span><span class="o">+</span></div><div class='line' id='LC295'><span class="nx">p</span><span class="p">.</span><span class="nx">name</span><span class="p">))}</span><span class="nx">G</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">n</span><span class="o">+</span><span class="s1">&#39; tables deleted from &quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">)}},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">throw</span> <span class="nx">b</span><span class="p">;})},[],</span><span class="nx">K</span><span class="p">,</span><span class="nx">e</span><span class="p">)});</span><span class="nx">d</span><span class="p">.</span><span class="nx">Qb</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">F</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;Connecting &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; failed.&quot;</span><span class="p">)})}});</span><span class="nx">Ig</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">fb</span><span class="o">=</span><span class="nx">k</span><span class="p">();</span><span class="nx">Ig</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;WebSql:&quot;</span><span class="o">+</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">w</span><span class="o">?</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">w</span><span class="p">.</span><span class="nx">version</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)};</span><span class="nx">kf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">zb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;indexeddb&quot;</span><span class="o">==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">pc</span><span class="o">?</span><span class="k">new</span> <span class="nx">Dg</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">s</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">fa</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;websql&quot;</span><span class="o">==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">fa</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">openDatabase</span><span class="p">)</span><span class="o">?</span><span class="k">new</span> <span class="nx">Ig</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">s</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;localstorage&quot;</span><span class="o">==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nb">window</span><span class="p">.</span><span class="nx">localStorage</span><span class="o">?</span><span class="k">new</span> <span class="nx">Gg</span><span class="o">:</span><span class="s2">&quot;sessionstorage&quot;</span><span class="o">==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nb">window</span><span class="p">.</span><span class="nx">sessionStorage</span><span class="o">?</span><span class="k">new</span> <span class="nx">Hg</span><span class="o">:</span><span class="s2">&quot;memory&quot;</span><span class="o">==</span><span class="nx">a</span><span class="o">?</span><span class="k">new</span> <span class="nx">Fg</span><span class="o">:</span><span class="kc">null</span><span class="p">};</span><span class="kd">function</span> <span class="nx">Lg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">yd</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">)</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;[goog.structs.SimplePool] Initial cannot be greater than max&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">())}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Lg</span><span class="p">,</span><span class="nx">yd</span><span class="p">);</span><span class="nx">Lg</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{}};</span><span class="nx">Lg</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">fa</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">Ab</span><span class="p">))</span><span class="nx">a</span><span class="p">.</span><span class="nx">Ab</span><span class="p">();</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">delete</span> <span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]};</span><span class="nx">Lg</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ea</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">Lg</span><span class="p">.</span><span class="nx">p</span><span class="p">.</span><span class="nx">ea</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;)</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">());</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">};</span><span class="kd">function</span> <span class="nx">Mg</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nx">kb</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="k">new</span> <span class="nx">kb</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="k">new</span> <span class="nx">Lg</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">4</span><span class="nx">E3</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">Ng</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="o">=</span><span class="k">new</span> <span class="nx">Lg</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">50</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">Og</span><span class="p">};</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">Lg</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="nx">E3</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="o">++</span><span class="p">)};</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="nx">k</span><span class="p">()}</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;goog.debug.Trace&quot;</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Og</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">time</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">count</span><span class="o">=</span><span class="mi">0</span><span class="p">}</span><span class="nx">Og</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">[];</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="s2">&quot; &quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">count</span><span class="p">,</span><span class="s2">&quot; (&quot;</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="mi">10</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">time</span><span class="p">)</span><span class="o">/</span><span class="mi">10</span><span class="p">,</span><span class="s2">&quot; ms)&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">Ng</span><span class="p">(){}</span></div><div class='line' id='LC296'><span class="kd">function</span> <span class="nx">Pg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[];</span><span class="o">-</span><span class="mi">1</span><span class="o">==</span><span class="nx">b</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;    &quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">Qg</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="o">-</span><span class="nx">b</span><span class="p">));</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">,</span><span class="nx">Rg</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="o">-</span><span class="mi">0</span><span class="p">));</span><span class="mi">0</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot; Start        &quot;</span><span class="p">)</span><span class="o">:</span><span class="mi">1</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot; Done &quot;</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">Qg</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">startTime</span><span class="p">),</span><span class="s2">&quot; ms &quot;</span><span class="p">))</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot; Comment      &quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;[VarAlloc &quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;] &quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="nx">Ng</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">:</span><span class="s2">&quot;[&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">+</span><span class="s2">&quot;] &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">};</span></div><div class='line' id='LC297'><span class="nx">Mg</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">[],</span><span class="nx">b</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="mi">1</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">,</span><span class="nx">Pg</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)));</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;\n&quot;</span><span class="p">);</span><span class="mi">0</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;|  &quot;</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">.</span><span class="nx">Bb</span><span class="p">()){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">na</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot; Unstopped timers:\n&quot;</span><span class="p">);</span><span class="nx">jb</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;  &quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot; (&quot;</span><span class="p">,</span><span class="nx">f</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">startTime</span><span class="p">,</span><span class="s2">&quot; ms, started at &quot;</span><span class="p">,</span><span class="nx">Rg</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">startTime</span><span class="p">),</span><span class="s2">&quot;)\n&quot;</span><span class="p">)})}</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">.</span><span class="nx">ua</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]),</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">count</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot; TOTAL &quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;\n&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;Total tracers created &quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;\n&quot;</span><span class="p">,</span><span class="s2">&quot;Total comments created &quot;</span><span class="p">,</span></div><div class='line' id='LC298'><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;\n&quot;</span><span class="p">,</span><span class="s2">&quot;Overhead start: &quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot; ms\n&quot;</span><span class="p">,</span><span class="s2">&quot;Overhead end: &quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot; ms\n&quot;</span><span class="p">,</span><span class="s2">&quot;Overhead comment: &quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot; ms\n&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">Qg</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="mi">1</span><span class="nx">E3</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="mi">100</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;  &quot;</span><span class="p">);</span><span class="mi">10</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;   &quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">+</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Rg</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nb">String</span><span class="p">(</span><span class="mi">100</span><span class="o">+</span><span class="nx">a</span><span class="o">/</span><span class="mi">1</span><span class="nx">E3</span><span class="o">%</span><span class="mi">60</span><span class="p">).</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nb">String</span><span class="p">(</span><span class="mi">1</span><span class="nx">E3</span><span class="o">+</span><span class="nx">a</span><span class="o">%</span><span class="mi">1</span><span class="nx">E3</span><span class="p">).</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">)}</span><span class="k">new</span> <span class="nx">Mg</span><span class="p">;</span><span class="kd">var</span> <span class="nx">Sg</span><span class="o">=!</span><span class="nx">wb</span><span class="o">||</span><span class="nx">wb</span><span class="o">&amp;&amp;</span><span class="mi">9</span><span class="o">&lt;=</span><span class="nx">Lb</span><span class="p">,</span><span class="nx">Tg</span><span class="o">=</span><span class="nx">wb</span><span class="o">&amp;&amp;!</span><span class="nx">Jb</span><span class="p">(</span><span class="s2">&quot;9&quot;</span><span class="p">);</span><span class="o">!</span><span class="nx">yb</span><span class="o">||</span><span class="nx">Jb</span><span class="p">(</span><span class="s2">&quot;528&quot;</span><span class="p">);</span><span class="nx">xb</span><span class="o">&amp;&amp;</span><span class="nx">Jb</span><span class="p">(</span><span class="s2">&quot;1.9b&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">wb</span><span class="o">&amp;&amp;</span><span class="nx">Jb</span><span class="p">(</span><span class="s2">&quot;8&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">vb</span><span class="o">&amp;&amp;</span><span class="nx">Jb</span><span class="p">(</span><span class="s2">&quot;9.5&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">yb</span><span class="o">&amp;&amp;</span><span class="nx">Jb</span><span class="p">(</span><span class="s2">&quot;528&quot;</span><span class="p">);</span><span class="nx">xb</span><span class="o">&amp;&amp;!</span><span class="nx">Jb</span><span class="p">(</span><span class="s2">&quot;8&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">wb</span><span class="o">&amp;&amp;</span><span class="nx">Jb</span><span class="p">(</span><span class="s2">&quot;9&quot;</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Ug</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">Ug</span><span class="p">[</span><span class="s2">&quot; &quot;</span><span class="p">](</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="nx">Ug</span><span class="p">[</span><span class="s2">&quot; &quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">k</span><span class="p">();</span><span class="kd">function</span> <span class="nx">Vg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">Wg</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Vg</span><span class="p">,</span><span class="nx">Ae</span><span class="p">);</span><span class="nx">t</span><span class="o">=</span><span class="nx">Vg</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">clientX</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">clientY</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">Tb</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="kd">function</span> <span class="nx">Wg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">;</span><span class="nx">Ae</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">srcElement</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">if</span><span class="p">((</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">relatedTarget</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">xb</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="nx">Ug</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){}</span><span class="nx">a</span><span class="p">.</span><span class="nx">clientX</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="o">!==</span><span class="nx">b</span><span class="p">.</span><span class="nx">clientX</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">clientX</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">pageX</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">clientY</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="o">!==</span><span class="nx">b</span><span class="p">.</span><span class="nx">clientY</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">clientY</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">pageY</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">Tb</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">defaultPrevented</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="k">delete</span> <span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">}</span></div><div class='line' id='LC299'><span class="nx">t</span><span class="p">.</span><span class="nx">preventDefault</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">Vg</span><span class="p">.</span><span class="nx">p</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">Tb</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">returnValue</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">Tg</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">ctrlKey</span><span class="o">||</span><span class="mi">112</span><span class="o">&lt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">&amp;&amp;</span><span class="mi">123</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyCode</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">=-</span><span class="mi">1</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">b</span><span class="p">){}};</span><span class="kd">var</span> <span class="nx">Xg</span><span class="o">=</span><span class="s2">&quot;closure_listenable_&quot;</span><span class="o">+</span><span class="p">(</span><span class="mi">1</span><span class="nx">E6</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span><span class="o">|</span><span class="mi">0</span><span class="p">),</span><span class="nx">Yg</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kd">function</span> <span class="nx">Zg</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">T</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">capture</span><span class="o">=!!</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">va</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">key</span><span class="o">=++</span><span class="nx">Yg</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">O</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">sa</span><span class="o">=!</span><span class="mi">1</span><span class="p">};</span><span class="kd">var</span> <span class="nx">$g</span><span class="o">=</span><span class="p">{},</span><span class="nx">ah</span><span class="o">=</span><span class="p">{},</span><span class="nx">bh</span><span class="o">=</span><span class="p">{},</span><span class="nx">ch</span><span class="o">=</span><span class="p">{};</span><span class="kd">function</span> <span class="nx">dh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">dh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">else</span> <span class="nx">c</span><span class="o">=</span><span class="nx">eh</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">Xg</span><span class="p">]</span><span class="o">?</span><span class="nx">fh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">gh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">)}</span></div><div class='line' id='LC300'><span class="kd">function</span> <span class="nx">gh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">)</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Invalid event type&quot;</span><span class="p">);</span><span class="nx">e</span><span class="o">=!!</span><span class="nx">e</span><span class="p">;</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">ah</span><span class="p">;</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">g</span><span class="o">||</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">t</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">X</span><span class="o">:</span><span class="mi">0</span><span class="p">});</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">e</span> <span class="k">in</span> <span class="nx">g</span><span class="o">||</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">t</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">X</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="nx">g</span><span class="p">.</span><span class="nx">t</span><span class="o">++</span><span class="p">);</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="nx">ga</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">l</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">X</span><span class="o">++</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">h</span><span class="p">]){</span><span class="nx">l</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">n</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">g</span><span class="p">.</span><span class="nx">T</span><span class="o">==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">va</span><span class="o">==</span><span class="nx">f</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">O</span><span class="p">)</span><span class="k">break</span><span class="p">;</span><span class="nx">d</span><span class="o">||</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="nx">n</span><span class="p">].</span><span class="nx">sa</span><span class="o">=!</span><span class="mi">1</span><span class="p">);</span><span class="k">return</span><span class="p">}}</span><span class="k">else</span> <span class="nx">l</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="p">[],</span><span class="nx">g</span><span class="p">.</span><span class="nx">t</span><span class="o">++</span><span class="p">;</span><span class="nx">n</span><span class="o">=</span><span class="nx">hh</span><span class="p">();</span><span class="nx">g</span><span class="o">=</span><span class="k">new</span> <span class="nx">Zg</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">sa</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">n</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">n</span><span class="p">.</span><span class="nx">T</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="nx">bh</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">bh</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="p">[]);</span><span class="nx">bh</span><span class="p">[</span><span class="nx">h</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">ch</span><span class="o">?</span><span class="nx">ch</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">:</span><span class="nx">ch</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="nx">n</span><span class="p">);</span><span class="nx">$g</span><span class="p">[</span><span class="nx">g</span><span class="p">.</span><span class="nx">key</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">}</span></div><div class='line' id='LC301'><span class="kd">function</span> <span class="nx">hh</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">ih</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">Sg</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">src</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">T</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">src</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">T</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">};</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">jh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">jh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">else</span> <span class="nx">c</span><span class="o">=</span><span class="nx">eh</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">Xg</span><span class="p">]</span><span class="o">?</span><span class="nx">fh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">gh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">)}</span></div><div class='line' id='LC302'><span class="kd">function</span> <span class="nx">kh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">kh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">eh</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">Xg</span><span class="p">])</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">c</span><span class="o">=</span><span class="nx">lh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="o">-</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="k">delete</span> <span class="nx">$g</span><span class="p">[</span><span class="nx">e</span><span class="p">.</span><span class="nx">key</span><span class="p">],</span><span class="nx">e</span><span class="p">.</span><span class="nx">O</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">Ia</span><span class="p">.</span><span class="nx">splice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="mi">1</span><span class="p">)));</span><span class="k">else</span><span class="p">{</span><span class="nx">d</span><span class="o">=!!</span><span class="nx">d</span><span class="p">;</span><span class="nx">a</span><span class="o">:</span><span class="p">{</span><span class="nx">f</span><span class="o">=</span><span class="nx">ah</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">a</span><span class="o">=</span><span class="nx">ga</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">]))){</span><span class="nx">a</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">break</span> <span class="nx">a</span><span class="p">}</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">T</span><span class="o">==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">capture</span><span class="o">==</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">va</span><span class="o">==</span><span class="nx">e</span><span class="p">){</span><span class="nx">mh</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">]);</span><span class="k">break</span><span class="p">}}}</span></div><div class='line' id='LC303'><span class="kd">function</span> <span class="nx">mh</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">ea</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">O</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">src</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">[</span><span class="nx">Xg</span><span class="p">])</span><span class="nx">nh</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">capture</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">detachEvent</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">ch</span><span class="o">?</span><span class="nx">ch</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">:</span><span class="nx">ch</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">ga</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">bh</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">bh</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">Qa</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="mi">0</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="k">delete</span> <span class="nx">bh</span><span class="p">[</span><span class="nx">b</span><span class="p">]);</span><span class="nx">a</span><span class="p">.</span><span class="nx">O</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">T</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">va</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">ah</span><span class="p">[</span><span class="nx">c</span><span class="p">][</span><span class="nx">e</span><span class="p">][</span><span class="nx">b</span><span class="p">])</span><span class="nx">d</span><span class="p">.</span><span class="nx">Xb</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">oh</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">delete</span> <span class="nx">$g</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">key</span><span class="p">]}}}</span></div><div class='line' id='LC304'><span class="kd">function</span> <span class="nx">oh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">.</span><span class="nx">cb</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">Xb</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">O</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="o">!=</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]),</span><span class="nx">f</span><span class="o">++</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">Xb</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="mi">0</span><span class="o">==</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">delete</span> <span class="nx">ah</span><span class="p">[</span><span class="nx">a</span><span class="p">][</span><span class="nx">b</span><span class="p">][</span><span class="nx">c</span><span class="p">],</span><span class="nx">ah</span><span class="p">[</span><span class="nx">a</span><span class="p">][</span><span class="nx">b</span><span class="p">].</span><span class="nx">t</span><span class="o">--</span><span class="p">,</span><span class="mi">0</span><span class="o">==</span><span class="nx">ah</span><span class="p">[</span><span class="nx">a</span><span class="p">][</span><span class="nx">b</span><span class="p">].</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">delete</span> <span class="nx">ah</span><span class="p">[</span><span class="nx">a</span><span class="p">][</span><span class="nx">b</span><span class="p">],</span><span class="nx">ah</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">t</span><span class="o">--</span><span class="p">),</span><span class="mi">0</span><span class="o">==</span><span class="nx">ah</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="k">delete</span> <span class="nx">ah</span><span class="p">[</span><span class="nx">a</span><span class="p">])}}</span><span class="kd">function</span> <span class="nx">ph</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">ga</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=--</span><span class="nx">a</span><span class="p">.</span><span class="nx">X</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">h</span><span class="p">.</span><span class="nx">cb</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">cb</span><span class="o">++:</span><span class="nx">h</span><span class="p">.</span><span class="nx">cb</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">n</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">n</span><span class="p">];</span><span class="nx">m</span><span class="o">&amp;&amp;!</span><span class="nx">m</span><span class="p">.</span><span class="nx">O</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">&amp;=!</span><span class="mi">1</span><span class="o">!==</span><span class="nx">qh</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">e</span><span class="p">))}}</span><span class="k">finally</span><span class="p">{</span><span class="nx">a</span><span class="p">.</span><span class="nx">X</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">X</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">cb</span><span class="o">--</span><span class="p">,</span><span class="nx">oh</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">)}}</span><span class="k">return</span> <span class="nb">Boolean</span><span class="p">(</span><span class="nx">f</span><span class="p">)}</span></div><div class='line' id='LC305'><span class="kd">function</span> <span class="nx">qh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">T</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">va</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">src</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">sa</span><span class="o">&amp;&amp;</span><span class="nx">mh</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span></div><div class='line' id='LC306'><span class="kd">function</span> <span class="nx">ih</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">O</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">ah</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">d</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">Sg</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="nx">ba</span><span class="p">(</span><span class="s2">&quot;window.event&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=!</span><span class="mi">0</span> <span class="k">in</span> <span class="nx">d</span><span class="p">,</span><span class="nx">h</span><span class="o">=!</span><span class="mi">1</span> <span class="k">in</span> <span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">||</span><span class="k">void</span> <span class="mi">0</span><span class="o">!=</span><span class="nx">e</span><span class="p">.</span><span class="nx">returnValue</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">:</span><span class="p">{</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">keyCode</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="nx">e</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span><span class="k">break</span> <span class="nx">a</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="nx">l</span><span class="o">=!</span><span class="mi">0</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="o">||</span><span class="k">void</span> <span class="mi">0</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">returnValue</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">returnValue</span><span class="o">=!</span><span class="mi">0</span><span class="p">}}</span><span class="nx">l</span><span class="o">=</span><span class="k">new</span> <span class="nx">Vg</span><span class="p">;</span><span class="nx">Wg</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="nx">e</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="p">[],</span><span class="nx">p</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">a</span><span class="p">;</span><span class="nx">p</span><span class="p">;</span><span class="nx">p</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">)</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">p</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="o">!</span><span class="mi">0</span><span class="p">];</span><span class="nx">f</span><span class="p">.</span><span class="nx">X</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">t</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="o">!</span><span class="nx">l</span><span class="p">.</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">X</span><span class="p">;</span><span class="nx">q</span><span class="o">--</span><span class="p">)</span><span class="nx">l</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">m</span><span class="p">[</span><span class="nx">q</span><span class="p">],</span><span class="nx">e</span><span class="o">&amp;=</span><span class="nx">ph</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">m</span><span class="p">[</span><span class="nx">q</span><span class="p">],</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="o">!</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="p">.</span><span class="nx">X</span><span class="o">=</span></div><div class='line' id='LC307'><span class="nx">f</span><span class="p">.</span><span class="nx">t</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="o">!</span><span class="nx">l</span><span class="p">.</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="o">&lt;</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">X</span><span class="p">;</span><span class="nx">q</span><span class="o">++</span><span class="p">)</span><span class="nx">l</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">m</span><span class="p">[</span><span class="nx">q</span><span class="p">],</span><span class="nx">e</span><span class="o">&amp;=</span><span class="nx">ph</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">m</span><span class="p">[</span><span class="nx">q</span><span class="p">],</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">l</span><span class="p">)}</span><span class="k">else</span> <span class="nx">e</span><span class="o">=</span><span class="nx">qh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">)}</span><span class="k">finally</span><span class="p">{</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">)}</span><span class="k">return</span> <span class="nx">e</span><span class="p">}</span><span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">Vg</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="k">return</span> <span class="nx">e</span><span class="o">=</span><span class="nx">qh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">rh</span><span class="o">=</span><span class="s2">&quot;__closure_events_fn_&quot;</span><span class="o">+</span><span class="p">(</span><span class="mi">1</span><span class="nx">E9</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span><span class="o">&gt;&gt;&gt;</span><span class="mi">0</span><span class="p">);</span><span class="kd">function</span> <span class="nx">eh</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">fa</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="nx">rh</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">rh</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">handleEvent</span><span class="p">(</span><span class="nx">b</span><span class="p">)})};</span><span class="kd">function</span> <span class="nx">sh</span><span class="p">(){</span><span class="nx">yd</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">sh</span><span class="p">,</span><span class="nx">yd</span><span class="p">);</span><span class="nx">sh</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">Xg</span><span class="p">]</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">sh</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">sh</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">kh</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)};</span><span class="nx">sh</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ea</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">sh</span><span class="p">.</span><span class="nx">p</span><span class="p">.</span><span class="nx">ea</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="o">++</span><span class="nx">a</span><span class="p">,</span><span class="k">delete</span> <span class="nx">$g</span><span class="p">[</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">key</span><span class="p">],</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">O</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">}</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">};</span><span class="kd">function</span> <span class="nx">fh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="p">[]),</span><span class="nx">h</span><span class="o">=</span><span class="nx">lh</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="o">-</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">h</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">h</span><span class="p">],</span><span class="nx">d</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">sa</span><span class="o">=!</span><span class="mi">1</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">Zg</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="o">!!</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">sa</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">))}</span></div><div class='line' id='LC308'><span class="kd">function</span> <span class="nx">nh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">;</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">Qa</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">delete</span> <span class="nx">$g</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">key</span><span class="p">],</span><span class="nx">b</span><span class="p">.</span><span class="nx">O</span><span class="o">=!</span><span class="mi">0</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">th</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">Ra</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">&amp;&amp;!</span><span class="nx">g</span><span class="p">.</span><span class="nx">O</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">capture</span><span class="o">==</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">T</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">va</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">src</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">sa</span><span class="o">&amp;&amp;</span><span class="nx">nh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="nx">e</span><span class="o">=!</span><span class="mi">1</span><span class="o">!==</span><span class="nx">h</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">}}</span><span class="k">return</span> <span class="nx">e</span><span class="o">&amp;&amp;!</span><span class="mi">1</span><span class="o">!=</span><span class="nx">d</span><span class="p">.</span><span class="nx">d</span><span class="p">}</span><span class="kd">function</span> <span class="nx">lh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">T</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">capture</span><span class="o">==!!</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">va</span><span class="o">==</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span> <span class="nx">e</span><span class="p">}</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">};</span><span class="cm">/*</span></div><div class='line' id='LC309'><span class="cm"> Copyright 2012 YDN Authors, Yathit. All Rights Reserved.</span></div><div class='line' id='LC310'><span class="cm"> Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);.</span></div><div class='line' id='LC311'><span class="cm">*/</span></div><div class='line' id='LC312'><span class="kd">function</span> <span class="nx">vh</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="k">new</span> <span class="nx">sh</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">}</span><span class="nx">kf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ma</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;ready&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">)</span><span class="nx">jh</span><span class="p">(</span><span class="nx">vh</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="s2">&quot;created error fail ready deleted updated versionchange&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">Ja</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">)))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="s1">&#39;Invalid event type &quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">);};</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">g</span><span class="p">]);</span><span class="k">else</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">dh</span><span class="p">(</span><span class="nx">vh</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)}};</span><span class="nx">kf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">kh</span><span class="p">(</span><span class="nx">vh</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)};</span></div><div class='line' id='LC313'><span class="nx">kf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">I</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">vh</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="p">[];</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">b</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">Ae</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">Ae</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="o">||</span><span class="nx">b</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">Ae</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">fb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">g</span><span class="p">;</span><span class="nx">g</span><span class="o">--</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">th</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="o">||</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">th</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">th</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">th</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">};</span><span class="kd">function</span> <span class="nx">wh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">Z</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="nx">C</span><span class="p">(</span><span class="nx">wh</span><span class="p">,</span><span class="nx">Cg</span><span class="p">);</span><span class="kd">function</span> <span class="nx">xh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">hd</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="nx">C</span><span class="p">(</span><span class="nx">xh</span><span class="p">,</span><span class="nx">hd</span><span class="p">);</span><span class="nx">xh</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">aa</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">xh</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">])</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=!</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">b</span><span class="o">-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="mi">1</span><span class="p">))}</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="p">[]);</span><span class="k">return</span> <span class="nx">id</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">yh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">hd</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="nx">C</span><span class="p">(</span><span class="nx">yh</span><span class="p">,</span><span class="nx">hd</span><span class="p">);</span><span class="nx">yh</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">aa</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">yh</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="p">[],</span><span class="nx">l</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">l</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="p">[</span><span class="nx">l</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="nx">l</span><span class="p">]);</span><span class="nx">h</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">=</span><span class="nx">n</span><span class="p">;</span><span class="mi">1</span><span class="o">===</span><span class="nx">n</span><span class="o">?</span><span class="nx">e</span><span class="o">=!</span><span class="mi">1</span><span class="o">:-</span><span class="mi">1</span><span class="o">===</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="o">===</span><span class="nx">M</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">l</span><span class="p">],</span><span class="nx">g</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">l</span><span class="p">]))}</span><span class="k">else</span> <span class="nx">e</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">===</span><span class="nx">M</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">);</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="mi">1</span><span class="o">===</span><span class="nx">h</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="nx">e</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">++</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="p">{</span><span class="nx">continuePrimary</span><span class="o">:</span><span class="nx">c</span><span class="p">}};</span><span class="kd">function</span> <span class="nx">zh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">hd</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">dd</span><span class="o">&amp;&amp;!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">za</span><span class="p">}</span><span class="nx">C</span><span class="p">(</span><span class="nx">zh</span><span class="p">,</span><span class="nx">hd</span><span class="p">);</span><span class="nx">zh</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.db.algo.ZigzagMerge&quot;</span><span class="p">);</span><span class="nx">zh</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">e</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">zh</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">zh</span><span class="p">.</span><span class="nx">p</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">F</span><span class="p">().</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;, &quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">za</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">fd</span><span class="p">(</span><span class="s2">&quot;Output streamer projection field must be same as postfix field in the iterator&quot;</span><span class="p">);}</span><span class="k">else</span> <span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;Unable to check correctness of output streamer.&quot;</span><span class="p">)}</span><span class="k">return</span> <span class="nx">c</span><span class="p">};</span></div><div class='line' id='LC314'><span class="nx">zh</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="k">return</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">][</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="p">[],</span><span class="nx">l</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">l</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">[</span><span class="nx">l</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">l</span><span class="p">][</span><span class="nx">a</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="nx">m</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">n</span><span class="p">);</span><span class="nx">h</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">=</span><span class="nx">m</span><span class="p">;</span><span class="mi">1</span><span class="o">===</span><span class="nx">m</span><span class="o">?</span><span class="nx">e</span><span class="o">=!</span><span class="mi">1</span><span class="o">:-</span><span class="mi">1</span><span class="o">===</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">n</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">1</span><span class="p">)}</span><span class="k">else</span> <span class="k">return</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">g</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]));</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">f</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="mi">1</span><span class="o">===</span><span class="nx">h</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">g</span><span class="p">));</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span></div><div class='line' id='LC315'><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">e</span><span class="o">!=</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">===</span><span class="nx">M</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">][</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">g</span><span class="p">));</span><span class="k">return</span><span class="p">{</span><span class="s2">&quot;continue&quot;</span><span class="o">:</span><span class="nx">d</span><span class="p">}};</span><span class="nx">oa</span><span class="p">(</span><span class="s2">&quot;ydn.db.algo.NestedLoop&quot;</span><span class="p">,</span><span class="nx">xh</span><span class="p">);</span><span class="nx">oa</span><span class="p">(</span><span class="s2">&quot;ydn.db.algo.ZigzagMerge&quot;</span><span class="p">,</span><span class="nx">zh</span><span class="p">);</span><span class="nx">oa</span><span class="p">(</span><span class="s2">&quot;ydn.db.algo.SortedMerge&quot;</span><span class="p">,</span><span class="nx">yh</span><span class="p">);</span><span class="nx">Q</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">close</span><span class="o">=</span><span class="nx">Q</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Kc</span><span class="p">;</span><span class="nx">Q</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getType</span><span class="o">=</span><span class="nx">Q</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Da</span><span class="p">;</span><span class="nx">Q</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getName</span><span class="o">=</span><span class="nx">Q</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getName</span><span class="p">;</span><span class="nx">Q</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getSchema</span><span class="o">=</span><span class="nx">Q</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">la</span><span class="p">;</span><span class="nx">Q</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onReady</span><span class="o">=</span><span class="nx">Q</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">wc</span><span class="p">;</span><span class="nx">Q</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setName</span><span class="o">=</span><span class="nx">Q</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">l</span><span class="p">;</span><span class="nx">Q</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">transaction</span><span class="o">=</span><span class="nx">Q</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Ca</span><span class="p">;</span><span class="nx">oa</span><span class="p">(</span><span class="s2">&quot;ydn.db.version&quot;</span><span class="p">,</span><span class="s2">&quot;0.8.5&quot;</span><span class="p">);</span><span class="nx">oa</span><span class="p">(</span><span class="s2">&quot;ydn.db.cmp&quot;</span><span class="p">,</span><span class="nx">M</span><span class="p">);</span><span class="nx">oa</span><span class="p">(</span><span class="s2">&quot;ydn.db.deleteDatabase&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">Bc</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">Bc</span><span class="p">[</span><span class="nx">d</span><span class="p">](</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">)}</span><span class="k">return</span> <span class="nx">c</span><span class="o">||</span><span class="nx">Kd</span><span class="p">(</span><span class="s2">&quot;IDBVersionChangeEvent &quot;</span><span class="p">,</span><span class="kc">null</span><span class="p">)});</span><span class="nx">Ce</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">Ce</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="p">;</span></div><div class='line' id='LC316'><span class="nx">Ce</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getVersion</span><span class="o">=</span><span class="nx">Ce</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Oc</span><span class="p">;</span><span class="nx">Ce</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getOldVersion</span><span class="o">=</span><span class="nx">Ce</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">tc</span><span class="p">;</span><span class="nx">Ce</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getOldSchema</span><span class="o">=</span><span class="nx">Ce</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">sc</span><span class="p">;</span><span class="nx">De</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getError</span><span class="o">=</span><span class="nx">De</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">f</span><span class="p">;</span><span class="nx">Fd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">abort</span><span class="o">=</span><span class="nx">Fd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">abort</span><span class="p">;</span><span class="nx">Fd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">canAbort</span><span class="o">=</span><span class="nx">Fd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">qc</span><span class="p">;</span><span class="nx">Fd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">progress</span><span class="o">=</span><span class="nx">Fd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Jc</span><span class="p">;</span><span class="nx">Fd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">promise</span><span class="o">=</span><span class="nx">Fd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">xc</span><span class="p">;</span><span class="nx">mf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">scan</span><span class="o">=</span><span class="nx">mf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Mc</span><span class="p">;</span><span class="nx">mf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">map</span><span class="o">=</span><span class="nx">mf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">map</span><span class="p">;</span><span class="nx">mf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">reduce</span><span class="o">=</span><span class="nx">mf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">nb</span><span class="p">;</span><span class="nx">mf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">open</span><span class="o">=</span><span class="nx">mf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Lc</span><span class="p">;</span><span class="nx">we</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">scan</span><span class="o">=</span><span class="nx">we</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">hc</span><span class="p">;</span><span class="nx">we</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">map</span><span class="o">=</span><span class="nx">we</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">map</span><span class="p">;</span><span class="nx">we</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">reduce</span><span class="o">=</span><span class="nx">we</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">nb</span><span class="p">;</span><span class="nx">we</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">open</span><span class="o">=</span><span class="nx">we</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">gc</span><span class="p">;</span><span class="nx">Bd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getKey</span><span class="o">=</span><span class="nx">Bd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Nc</span><span class="p">;</span><span class="nx">Bd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getPrimaryKey</span><span class="o">=</span><span class="nx">Bd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">C</span><span class="p">;</span><span class="nx">Bd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getValue</span><span class="o">=</span><span class="nx">Bd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ra</span><span class="p">;</span><span class="nx">Bd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">update</span><span class="o">=</span><span class="nx">Bd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">update</span><span class="p">;</span><span class="nx">Bd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="nx">Bd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clear</span><span class="p">;</span><span class="nx">oa</span><span class="p">(</span><span class="s2">&quot;ydn.db.Iterator&quot;</span><span class="p">,</span><span class="nx">P</span><span class="p">);</span></div><div class='line' id='LC317'><span class="nx">oa</span><span class="p">(</span><span class="s2">&quot;ydn.db.KeyIterator&quot;</span><span class="p">,</span><span class="nx">Sc</span><span class="p">);</span><span class="nx">oa</span><span class="p">(</span><span class="s2">&quot;ydn.db.ValueIterator&quot;</span><span class="p">,</span><span class="nx">Uc</span><span class="p">);</span><span class="nx">oa</span><span class="p">(</span><span class="s2">&quot;ydn.db.IndexIterator&quot;</span><span class="p">,</span><span class="nx">Tc</span><span class="p">);</span><span class="nx">oa</span><span class="p">(</span><span class="s2">&quot;ydn.db.IndexValueIterator&quot;</span><span class="p">,</span><span class="nx">Wc</span><span class="p">);</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getState</span><span class="o">=</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">uc</span><span class="p">;</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getKeyRange</span><span class="o">=</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Na</span><span class="p">;</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getIndexName</span><span class="o">=</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">F</span><span class="p">;</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getStoreName</span><span class="o">=</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Ec</span><span class="p">;</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">isReversed</span><span class="o">=</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">P</span><span class="p">;</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">isUnique</span><span class="o">=</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Q</span><span class="p">;</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">isKeyIterator</span><span class="o">=</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Fc</span><span class="p">;</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">isIndexIterator</span><span class="o">=</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">vc</span><span class="p">;</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getPrimaryKey</span><span class="o">=</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Dc</span><span class="p">;</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getKey</span><span class="o">=</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Cc</span><span class="p">;</span></div><div class='line' id='LC318'><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">resume</span><span class="o">=</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Gc</span><span class="p">;</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">reset</span><span class="o">=</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">fc</span><span class="p">;</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">reverse</span><span class="o">=</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">reverse</span><span class="p">;</span><span class="nx">Sc</span><span class="p">.</span><span class="nx">where</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">Sc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">Pc</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">))};</span><span class="nx">Uc</span><span class="p">.</span><span class="nx">where</span><span class="o">=</span><span class="nx">Vc</span><span class="p">;</span><span class="nx">Tc</span><span class="p">.</span><span class="nx">where</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">Tc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">Pc</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">))};</span><span class="nx">Wc</span><span class="p">.</span><span class="nx">where</span><span class="o">=</span><span class="nx">Xc</span><span class="p">;</span><span class="nx">oa</span><span class="p">(</span><span class="s2">&quot;ydn.db.Streamer&quot;</span><span class="p">,</span><span class="nx">dd</span><span class="p">);</span><span class="nx">dd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">push</span><span class="o">=</span><span class="nx">dd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">push</span><span class="p">;</span><span class="nx">dd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">collect</span><span class="o">=</span><span class="nx">dd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ba</span><span class="p">;</span><span class="nx">dd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setSink</span><span class="o">=</span><span class="nx">dd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Bc</span><span class="p">;</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">branch</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">nc</span><span class="p">;</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">add</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">add</span><span class="p">;</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">get</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">get</span><span class="p">;</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">keys</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">keys</span><span class="p">;</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">values</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">B</span><span class="p">;</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">put</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">put</span><span class="p">;</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clear</span><span class="p">;</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">remove</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ob</span><span class="p">;</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">count</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">count</span><span class="p">;</span><span class="nx">ee</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">add</span><span class="o">=</span><span class="nx">ee</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">add</span><span class="p">;</span><span class="nx">ee</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">get</span><span class="o">=</span><span class="nx">ee</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">get</span><span class="p">;</span><span class="nx">ee</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">keys</span><span class="o">=</span><span class="nx">ee</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">keys</span><span class="p">;</span><span class="nx">ee</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">values</span><span class="o">=</span><span class="nx">ee</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">B</span><span class="p">;</span><span class="nx">ee</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">put</span><span class="o">=</span><span class="nx">ee</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">put</span><span class="p">;</span><span class="nx">ee</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="nx">ee</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clear</span><span class="p">;</span></div><div class='line' id='LC319'><span class="nx">ee</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">remove</span><span class="o">=</span><span class="nx">ee</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ob</span><span class="p">;</span><span class="nx">ee</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">count</span><span class="o">=</span><span class="nx">ee</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">count</span><span class="p">;</span><span class="nx">oa</span><span class="p">(</span><span class="s2">&quot;ydn.db.Key&quot;</span><span class="p">,</span><span class="nx">vd</span><span class="p">);</span><span class="nx">vd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">vd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">rc</span><span class="p">;</span><span class="nx">vd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="nx">vd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Hc</span><span class="p">;</span><span class="nx">vd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">storeName</span><span class="o">=</span><span class="nx">vd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Ic</span><span class="p">;</span><span class="nx">oa</span><span class="p">(</span><span class="s2">&quot;ydn.db.KeyRange&quot;</span><span class="p">,</span><span class="nx">O</span><span class="p">);</span><span class="nx">O</span><span class="p">.</span><span class="nx">upperBound</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">upperBound</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">lowerBound</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">lowerBound</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">bound</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">bound</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">only</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">only</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">starts</span><span class="o">=</span><span class="nx">Jc</span><span class="p">;</span><span class="nx">Be</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">store_name</span><span class="o">=</span><span class="nx">Be</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">k</span><span class="p">;</span><span class="nx">Be</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getStoreName</span><span class="o">=</span><span class="nx">Be</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">e</span><span class="p">;</span><span class="nx">pe</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">pe</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="p">;</span><span class="nx">pe</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getKey</span><span class="o">=</span><span class="nx">pe</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">f</span><span class="p">;</span><span class="nx">pe</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getValue</span><span class="o">=</span><span class="nx">pe</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">g</span><span class="p">;</span></div><div class='line' id='LC320'><span class="nx">me</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">me</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="p">;</span><span class="nx">me</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getKeys</span><span class="o">=</span><span class="nx">me</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ua</span><span class="p">;</span><span class="nx">me</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getValues</span><span class="o">=</span><span class="nx">me</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Za</span><span class="p">;</span><span class="nx">Cg</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">executeSql</span><span class="o">=</span><span class="nx">Cg</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">;</span><span class="nx">Bg</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">executeSql</span><span class="o">=</span><span class="nx">Bg</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">executeSql</span><span class="p">;</span><span class="nx">kf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">=</span><span class="nx">kf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ma</span><span class="p">;</span><span class="nx">kf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="o">=</span><span class="nx">kf</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">;</span><span class="kd">function</span> <span class="nx">Ah</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">na</span><span class="p">()}</span><span class="kd">var</span> <span class="nx">Bh</span><span class="o">=</span><span class="k">new</span> <span class="nx">Ah</span><span class="p">;</span><span class="nx">Ah</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">get</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Ch</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="nx">Bh</span><span class="p">}</span><span class="nx">Ch</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">a</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">Ch</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">b</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="kd">function</span> <span class="nx">Dh</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">);</span><span class="k">return</span> <span class="nx">Eh</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">()</span><span class="o">-</span><span class="mi">2</span><span class="nx">E3</span><span class="p">)</span><span class="o">+</span><span class="nx">Eh</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="nx">Eh</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getDate</span><span class="p">())</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">Eh</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getHours</span><span class="p">())</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">Eh</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">())</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">Eh</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">())</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">Eh</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getMilliseconds</span><span class="p">()</span><span class="o">/</span><span class="mi">10</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">Eh</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="mi">10</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">?</span><span class="s2">&quot;0&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">:</span><span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">Fh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="o">-</span><span class="nx">b</span><span class="p">)</span><span class="o">/</span><span class="mi">1</span><span class="nx">E3</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">3</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="k">else</span> <span class="k">for</span><span class="p">(;</span><span class="mi">100</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">;)</span><span class="nx">e</span><span class="o">++</span><span class="p">,</span><span class="nx">c</span><span class="o">*=</span><span class="mi">10</span><span class="p">;</span><span class="k">for</span><span class="p">(;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">e</span><span class="o">--</span><span class="p">;)</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Gh</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">Ch</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">)}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Gh</span><span class="p">,</span><span class="nx">Ch</span><span class="p">);</span><span class="nx">Gh</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">b</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span></div><div class='line' id='LC321'><span class="nx">Gh</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">value</span><span class="p">){</span><span class="k">case</span> <span class="nx">Ub</span><span class="p">.</span><span class="nx">value</span><span class="o">:</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;dbg-sh&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="nx">Vb</span><span class="p">.</span><span class="nx">value</span><span class="o">:</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;dbg-sev&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="nx">Wb</span><span class="p">.</span><span class="nx">value</span><span class="o">:</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;dbg-w&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="nx">Xb</span><span class="p">.</span><span class="nx">value</span><span class="o">:</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;dbg-i&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;dbg-f&quot;</span><span class="p">}</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[];</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;[&quot;</span><span class="p">,</span><span class="nx">Dh</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="s2">&quot;] &quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;[&quot;</span><span class="p">,</span><span class="nx">Ba</span><span class="p">(</span><span class="nx">Fh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">get</span><span class="p">())),</span><span class="s2">&quot;s] &quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;[&quot;</span><span class="p">,</span><span class="nx">ua</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">),</span><span class="s2">&quot;] &quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s1">&#39;&lt;span class=&quot;&#39;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="s1">&#39;&quot;&gt;&#39;</span><span class="p">,</span><span class="nx">ta</span><span class="p">(</span><span class="nx">Ba</span><span class="p">(</span><span class="nx">ua</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">))));</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;&lt;br&gt;&quot;</span><span class="p">,</span><span class="nx">ta</span><span class="p">(</span><span class="nx">Ba</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">)));</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;&lt;/span&gt;&lt;br&gt;&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">Hh</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">Ch</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">)}</span><span class="nx">C</span><span class="p">(</span><span class="nx">Hh</span><span class="p">,</span><span class="nx">Ch</span><span class="p">);</span></div><div class='line' id='LC322'><span class="nx">Hh</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[];</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;[&quot;</span><span class="p">,</span><span class="nx">Dh</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="s2">&quot;] &quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;[&quot;</span><span class="p">,</span><span class="nx">Fh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">get</span><span class="p">()),</span><span class="s2">&quot;s] &quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;[&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;] &quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;\n&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;\n&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">Ih</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="nx">la</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">Hh</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="p">{}}</span><span class="nx">Ih</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">Jh</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="k">switch</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">){</span><span class="k">case</span> <span class="nx">Ub</span><span class="o">:</span><span class="nx">Kh</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;info&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="nx">Vb</span><span class="o">:</span><span class="nx">Kh</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;error&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="nx">Wb</span><span class="o">:</span><span class="nx">Kh</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;warn&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="nx">Kh</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;debug&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="k">else</span> <span class="nb">window</span><span class="p">.</span><span class="nx">opera</span><span class="o">?</span><span class="nb">window</span><span class="p">.</span><span class="nx">opera</span><span class="p">.</span><span class="nx">postError</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">+=</span><span class="nx">b</span><span class="p">}};</span><span class="kd">var</span> <span class="nx">Jh</span><span class="o">=</span><span class="nb">window</span><span class="p">.</span><span class="nx">console</span><span class="p">;</span><span class="kd">function</span> <span class="nx">Kh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">])</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">](</span><span class="nx">c</span><span class="p">);</span><span class="k">else</span> <span class="nx">a</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">c</span><span class="p">)};</span><span class="kd">var</span> <span class="nx">Lh</span><span class="p">,</span><span class="nx">Mh</span><span class="o">=!</span><span class="nx">wb</span><span class="o">||</span><span class="nx">wb</span><span class="o">&amp;&amp;</span><span class="mi">9</span><span class="o">&lt;=</span><span class="nx">Lb</span><span class="p">;</span><span class="o">!</span><span class="nx">xb</span><span class="o">&amp;&amp;!</span><span class="nx">wb</span><span class="o">||</span><span class="nx">wb</span><span class="o">&amp;&amp;</span><span class="nx">wb</span><span class="o">&amp;&amp;</span><span class="mi">9</span><span class="o">&lt;=</span><span class="nx">Lb</span><span class="o">||</span><span class="nx">xb</span><span class="o">&amp;&amp;</span><span class="nx">Jb</span><span class="p">(</span><span class="s2">&quot;1.9.1&quot;</span><span class="p">);</span><span class="nx">wb</span><span class="o">&amp;&amp;</span><span class="nx">Jb</span><span class="p">(</span><span class="s2">&quot;9&quot;</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Nh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">y</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/\S+/g</span><span class="p">)</span><span class="o">||</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">Sa</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">Ja</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="p">])</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="p">]);</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="nx">e</span><span class="p">};</span><span class="kd">function</span> <span class="nx">Oh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">cb</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="s2">&quot;style&quot;</span><span class="o">==</span><span class="nx">d</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">cssText</span><span class="o">=</span><span class="nx">b</span><span class="o">:</span><span class="s2">&quot;class&quot;</span><span class="o">==</span><span class="nx">d</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">b</span><span class="o">:</span><span class="s2">&quot;for&quot;</span><span class="o">==</span><span class="nx">d</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">htmlFor</span><span class="o">=</span><span class="nx">b</span><span class="o">:</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">Ph</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">Ph</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="s2">&quot;aria-&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="s2">&quot;data-&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">})}</span><span class="kd">var</span> <span class="nx">Ph</span><span class="o">=</span><span class="p">{</span><span class="nx">cellpadding</span><span class="o">:</span><span class="s2">&quot;cellPadding&quot;</span><span class="p">,</span><span class="nx">cellspacing</span><span class="o">:</span><span class="s2">&quot;cellSpacing&quot;</span><span class="p">,</span><span class="nx">colspan</span><span class="o">:</span><span class="s2">&quot;colSpan&quot;</span><span class="p">,</span><span class="nx">frameborder</span><span class="o">:</span><span class="s2">&quot;frameBorder&quot;</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="s2">&quot;height&quot;</span><span class="p">,</span><span class="nx">maxlength</span><span class="o">:</span><span class="s2">&quot;maxLength&quot;</span><span class="p">,</span><span class="nx">role</span><span class="o">:</span><span class="s2">&quot;role&quot;</span><span class="p">,</span><span class="nx">rowspan</span><span class="o">:</span><span class="s2">&quot;rowSpan&quot;</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;type&quot;</span><span class="p">,</span><span class="nx">usemap</span><span class="o">:</span><span class="s2">&quot;useMap&quot;</span><span class="p">,</span><span class="nx">valign</span><span class="o">:</span><span class="s2">&quot;vAlign&quot;</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="s2">&quot;width&quot;</span><span class="p">};</span></div><div class='line' id='LC323'><span class="kd">function</span> <span class="nx">Qh</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">y</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">)}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="o">!</span><span class="nx">x</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">||</span><span class="nx">B</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">?</span><span class="nx">d</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="nx">Ka</span><span class="p">(</span><span class="nx">Rh</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">?</span><span class="nx">Ra</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">d</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">Rh</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">item</span><span class="o">||</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">item</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">fa</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">item</span><span class="p">}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Sh</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="nx">u</span><span class="p">.</span><span class="nb">document</span><span class="o">||</span><span class="nb">document</span><span class="p">}</span></div><div class='line' id='LC324'><span class="kd">function</span> <span class="nx">Th</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="s2">&quot;*&quot;</span><span class="o">!=</span><span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">querySelector</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">?</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="nx">d</span><span class="o">||</span><span class="s2">&quot;*&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span></div><div class='line' id='LC325'><span class="nx">Sh</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">arguments</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">Mh</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">name</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">type</span><span class="p">)){</span><span class="nx">f</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;&lt;&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">];</span><span class="nx">g</span><span class="p">.</span><span class="nx">name</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s1">&#39; name=&quot;&#39;</span><span class="p">,</span><span class="nx">ua</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">name</span><span class="p">),</span><span class="s1">&#39;&quot;&#39;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s1">&#39; type=&quot;&#39;</span><span class="p">,</span><span class="nx">ua</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">type</span><span class="p">),</span><span class="s1">&#39;&quot;&#39;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="p">{};</span><span class="nx">fb</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="k">delete</span> <span class="nx">h</span><span class="p">.</span><span class="nx">type</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">h</span><span class="p">}</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;&gt;&quot;</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">y</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">g</span><span class="o">:</span><span class="nx">w</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">?</span><span class="nx">Nh</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,[</span><span class="nx">f</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">g</span><span class="p">))</span><span class="o">:</span><span class="nx">Oh</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">));</span><span class="mi">2</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">Qh</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">return</span> <span class="nx">f</span><span class="p">};</span></div><div class='line' id='LC326'><span class="nx">Sh</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">contains</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">contains</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="o">==</span><span class="nx">b</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">compareDocumentPosition</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="o">==</span><span class="nx">b</span><span class="o">||</span><span class="nb">Boolean</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">compareDocumentPosition</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;</span><span class="mi">16</span><span class="p">);</span><span class="k">for</span><span class="p">(;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">!=</span><span class="nx">b</span><span class="p">;)</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="p">};</span><span class="kd">function</span> <span class="nx">Uh</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="nx">la</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">Gh</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">a</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nb">document</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="k">new</span> <span class="nx">Sh</span><span class="p">(</span><span class="mi">9</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nb">document</span><span class="p">)</span><span class="o">:</span><span class="nx">Lh</span><span class="o">||</span><span class="p">(</span><span class="nx">Lh</span><span class="o">=</span><span class="k">new</span> <span class="nx">Sh</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">wb</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">createStyleSheet</span><span class="p">(),</span><span class="nx">wb</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">cssText</span><span class="o">=</span><span class="s2">&quot;.dbg-sev{color:#F00}.dbg-w{color:#C40}.dbg-sh{font-weight:bold;color:#000}.dbg-i{color:#444}.dbg-f{color:#999}.dbg-ev{color:#0A0}.dbg-m{color:#990}.logmsg{border-bottom:1px solid #CCC;padding:2px}.logsep{background-color: #8C8;}.logdiv{border:1px solid #CCC;background-color:#FCFCFC;font:medium monospace}&quot;</span><span class="o">:</span></div><div class='line' id='LC327'><span class="nx">a</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;.dbg-sev{color:#F00}.dbg-w{color:#C40}.dbg-sh{font-weight:bold;color:#000}.dbg-i{color:#444}.dbg-f{color:#999}.dbg-ev{color:#0A0}.dbg-m{color:#990}.logmsg{border-bottom:1px solid #CCC;padding:2px}.logsep{background-color: #8C8;}.logdiv{border:1px solid #CCC;background-color:#FCFCFC;font:medium monospace}&quot;</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">Th</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;head&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">Th</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;body&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">b</span><span class="p">(</span><span class="s2">&quot;head&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)),</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">b</span><span class="p">(</span><span class="s2">&quot;style&quot;</span><span class="p">),</span><span class="nx">wb</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">cssText</span><span class="o">=</span><span class="s2">&quot;.dbg-sev{color:#F00}.dbg-w{color:#C40}.dbg-sh{font-weight:bold;color:#000}.dbg-i{color:#444}.dbg-f{color:#999}.dbg-ev{color:#0A0}.dbg-m{color:#990}.logmsg{border-bottom:1px solid #CCC;padding:2px}.logsep{background-color: #8C8;}.logdiv{border:1px solid #CCC;background-color:#FCFCFC;font:medium monospace}&quot;</span><span class="o">:</span></div><div class='line' id='LC328'><span class="nx">b</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;.dbg-sev{color:#F00}.dbg-w{color:#C40}.dbg-sh{font-weight:bold;color:#000}.dbg-i{color:#444}.dbg-f{color:#999}.dbg-ev{color:#0A0}.dbg-m{color:#990}.logmsg{border-bottom:1px solid #CCC;padding:2px}.logsep{background-color: #8C8;}.logdiv{border:1px solid #CCC;background-color:#FCFCFC;font:medium monospace}&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">c</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">+=</span><span class="s2">&quot; logdiv&quot;</span><span class="p">}</span></div><div class='line' id='LC329'><span class="nx">Uh</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">100</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">scrollHeight</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">scrollTop</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">clientHeight</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="s2">&quot;logmsg&quot;</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">scrollTop</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">scrollHeight</span><span class="p">)};</span><span class="nx">Uh</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">};</span><span class="kd">var</span> <span class="nx">Vh</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">Wh</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;ydn.debug&quot;</span><span class="p">);</span><span class="nx">oa</span><span class="p">(</span><span class="s2">&quot;ydn.debug.log&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">ea</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">Tb</span><span class="p">(</span><span class="s2">&quot;log&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">cc</span><span class="p">){</span><span class="nx">cc</span><span class="o">=</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">bc</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">cc</span><span class="p">[</span><span class="nx">e</span><span class="p">.</span><span class="nx">value</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">cc</span><span class="p">[</span><span class="nx">e</span><span class="p">.</span><span class="nx">name</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">}</span><span class="nx">b</span><span class="o">=</span><span class="nx">cc</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">||</span><span class="kc">null</span><span class="p">}</span><span class="k">else</span> <span class="nx">b</span><span class="o">=</span><span class="nx">Zb</span><span class="p">;</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;ydn&quot;</span><span class="p">).</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="nx">Wh</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">Wh</span><span class="o">=</span><span class="k">new</span> <span class="nx">Uh</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">jc</span><span class="p">(),</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">a</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="p">[]),</span><span class="nx">c</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="o">=!</span><span class="mi">0</span><span class="p">),</span><span class="nx">jc</span><span class="p">().</span><span class="nx">b</span><span class="o">=</span><span class="nx">Wb</span><span class="p">)</span><span class="o">:</span><span class="nx">Vh</span><span class="o">||</span><span class="nx">Wh</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">Vh</span><span class="o">=</span><span class="k">new</span> <span class="nx">Ih</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">jc</span><span class="p">(),</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">a</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="p">[]),</span><span class="nx">c</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="o">=!</span><span class="mi">0</span><span class="p">),</span><span class="nx">jc</span><span class="p">().</span><span class="nx">b</span><span class="o">=</span><span class="nx">Wb</span><span class="p">)});</span><span class="nx">oa</span><span class="p">(</span><span class="s2">&quot;ydn.db.Storage&quot;</span><span class="p">,</span><span class="nx">wh</span><span class="p">);})();</span></div><div class='line' id='LC330'><br/></div><div class='line' id='LC331'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">//# sourceMappingURL=ydn.db-dev.js.map</span></div><div class='line' id='LC332'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div></pre></div></td>
          </tr>
        </table>
  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="1.16917s from github-fe116-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="fullscreen-contents js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-remove-close close js-ajax-error-dismiss"></a>
      Something went wrong with that request. Please try again.
    </div>

  </body>
</html>

